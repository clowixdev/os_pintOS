!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/user/sync/linker/prog/c/os/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
A	pintos/src/examples/matmult.c	/^int A[DIM][DIM];$/;"	v	typeref:typename:int[][]
ACTUAL	pintos/src/tests/vm/child-mm-wrt.c	/^#define ACTUAL /;"	d	file:
ACTUAL	pintos/src/tests/vm/mmap-close.c	/^#define ACTUAL /;"	d	file:
ACTUAL	pintos/src/tests/vm/mmap-unmap.c	/^#define ACTUAL /;"	d	file:
ACTUAL	pintos/src/tests/vm/mmap-write.c	/^#define ACTUAL /;"	d	file:
ARENA_MAGIC	pintos/src/threads/malloc.c	/^#define ARENA_MAGIC /;"	d	file:
ASSERT	pintos/src/lib/debug.h	/^#define ASSERT(/;"	d
B	pintos/src/examples/matmult.c	/^int B[DIM][DIM];$/;"	v	typeref:typename:int[][]
BEST_ELEMS_PER_BUCKET	pintos/src/lib/kernel/hash.c	/^#define BEST_ELEMS_PER_BUCKET /;"	d	file:
BITMAP_ERROR	pintos/src/lib/kernel/bitmap.h	/^#define BITMAP_ERROR /;"	d
BITMASK	pintos/src/threads/vaddr.h	/^#define BITMASK(/;"	d
BLOCK_CNT	pintos/src/devices/block.h	/^    BLOCK_CNT                    \/* Number of Pintos block types. *\/$/;"	e	enum:block_type
BLOCK_FILESYS	pintos/src/devices/block.h	/^    BLOCK_FILESYS,               \/* File system. *\/$/;"	e	enum:block_type
BLOCK_FOREIGN	pintos/src/devices/block.h	/^    BLOCK_FOREIGN,               \/* Owned by non-Pintos operating system. *\/$/;"	e	enum:block_type
BLOCK_KERNEL	pintos/src/devices/block.h	/^    BLOCK_KERNEL,                \/* Pintos OS kernel. *\/$/;"	e	enum:block_type
BLOCK_RAW	pintos/src/devices/block.h	/^    BLOCK_RAW = BLOCK_ROLE_CNT,  \/* "Raw" device with unidentified contents. *\/$/;"	e	enum:block_type
BLOCK_ROLE_CNT	pintos/src/devices/block.h	/^    BLOCK_ROLE_CNT,$/;"	e	enum:block_type
BLOCK_SCRATCH	pintos/src/devices/block.h	/^    BLOCK_SCRATCH,               \/* Scratch. *\/$/;"	e	enum:block_type
BLOCK_SECTOR_SIZE	pintos/src/devices/block.h	/^#define BLOCK_SECTOR_SIZE /;"	d
BLOCK_SIZE	pintos/src/tests/filesys/base/lg-random.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SIZE	pintos/src/tests/filesys/base/lg-seq-block.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SIZE	pintos/src/tests/filesys/base/sm-random.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SIZE	pintos/src/tests/filesys/base/sm-seq-block.c	/^#define BLOCK_SIZE /;"	d	file:
BLOCK_SWAP	pintos/src/devices/block.h	/^    BLOCK_SWAP,                  \/* Swap. *\/$/;"	e	enum:block_type
BUF_SIZE	pintos/src/tests/filesys/base/syn-read.h	/^#define BUF_SIZE /;"	d
BUF_SIZE	pintos/src/tests/filesys/base/syn-write.h	/^#define BUF_SIZE /;"	d
BUF_SIZE	pintos/src/tests/filesys/extended/syn-rw.h	/^#define BUF_SIZE /;"	d
BUILD_SUBDIRS	pintos/src/Makefile	/^BUILD_SUBDIRS = threads userprog vm filesys$/;"	m
C	pintos/src/examples/matmult.c	/^int C[DIM][DIM];$/;"	v	typeref:typename:int[][]
CC	pintos/src/utils/Makefile	/^CC = gcc$/;"	m
CFLAGS	pintos/src/utils/Makefile	/^CFLAGS = -Wall -W$/;"	m
CHANNEL_CNT	pintos/src/devices/ide.c	/^#define CHANNEL_CNT /;"	d	file:
CHAR	pintos/src/lib/stdio.c	/^        CHAR = 1,               \/* hh *\/$/;"	e	enum:printf_conversion::__anonfd63b5620203	file:
CHAR_BIT	pintos/src/lib/limits.h	/^#define CHAR_BIT /;"	d
CHAR_MAX	pintos/src/lib/limits.h	/^#define CHAR_MAX SCHAR_MAX$/;"	d
CHAR_MAX	pintos/src/lib/limits.h	/^#define CHAR_MAX UCHAR_MAX$/;"	d
CHAR_MIN	pintos/src/lib/limits.h	/^#define CHAR_MIN /;"	d
CHAR_MIN	pintos/src/lib/limits.h	/^#define CHAR_MIN SCHAR_MIN$/;"	d
CHECK	pintos/src/tests/lib.h	/^#define CHECK(/;"	d
CHILD_CNT	pintos/src/tests/filesys/base/syn-read.c	/^#define CHILD_CNT /;"	d	file:
CHILD_CNT	pintos/src/tests/filesys/base/syn-write.h	/^#define CHILD_CNT /;"	d
CHILD_CNT	pintos/src/tests/filesys/extended/syn-rw.c	/^#define CHILD_CNT /;"	d	file:
CHILD_CNT	pintos/src/tests/userprog/rox-child.c	/^#define CHILD_CNT /;"	d	file:
CHILD_CNT	pintos/src/tests/userprog/rox-multichild.c	/^#define CHILD_CNT /;"	d	file:
CHILD_CNT	pintos/src/tests/vm/page-parallel.c	/^#define CHILD_CNT /;"	d	file:
CHUNK_CNT	pintos/src/tests/filesys/extended/syn-rw.h	/^#define CHUNK_CNT /;"	d
CHUNK_CNT	pintos/src/tests/vm/page-merge-seq.c	/^#define CHUNK_CNT /;"	d	file:
CHUNK_CNT	pintos/src/tests/vm/parallel-merge.c	/^#define CHUNK_CNT /;"	d	file:
CHUNK_SIZE	pintos/src/tests/filesys/base/syn-write.h	/^#define CHUNK_SIZE /;"	d
CHUNK_SIZE	pintos/src/tests/filesys/extended/syn-rw.h	/^#define CHUNK_SIZE /;"	d
CHUNK_SIZE	pintos/src/tests/vm/page-merge-seq.c	/^#define CHUNK_SIZE /;"	d	file:
CHUNK_SIZE	pintos/src/tests/vm/parallel-merge.c	/^#define CHUNK_SIZE /;"	d	file:
CLEAN_SUBDIRS	pintos/src/Makefile	/^CLEAN_SUBDIRS = $(BUILD_SUBDIRS) examples utils$/;"	m
CLS_CODE_DATA	pintos/src/userprog/gdt.c	/^    CLS_CODE_DATA = 1           \/* Code or data segment. *\/$/;"	e	enum:seg_class	file:
CLS_SYSTEM	pintos/src/userprog/gdt.c	/^    CLS_SYSTEM = 0,             \/* System segment. *\/$/;"	e	enum:seg_class	file:
CMD_IDENTIFY_DEVICE	pintos/src/devices/ide.c	/^#define CMD_IDENTIFY_DEVICE /;"	d	file:
CMD_READ_SECTOR_RETRY	pintos/src/devices/ide.c	/^#define CMD_READ_SECTOR_RETRY /;"	d	file:
CMD_WRITE_SECTOR_RETRY	pintos/src/devices/ide.c	/^#define CMD_WRITE_SECTOR_RETRY /;"	d	file:
CMOS_REG_IO	pintos/src/devices/rtc.c	/^#define CMOS_REG_IO	/;"	d	file:
CMOS_REG_SET	pintos/src/devices/rtc.c	/^#define CMOS_REG_SET	/;"	d	file:
COL_CNT	pintos/src/devices/vga.c	/^#define COL_CNT /;"	d	file:
CONTROL_REG	pintos/src/devices/shutdown.c	/^#define CONTROL_REG /;"	d	file:
CRASH	pintos/src/tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	e	enum:child_termination_mode	file:
CTL_SRST	pintos/src/devices/ide.c	/^#define CTL_SRST /;"	d	file:
DATA_REG	pintos/src/devices/kbd.c	/^#define DATA_REG /;"	d	file:
DATA_SIZE	pintos/src/tests/vm/page-merge-seq.c	/^#define DATA_SIZE /;"	d	file:
DATA_SIZE	pintos/src/tests/vm/parallel-merge.c	/^#define DATA_SIZE /;"	d	file:
DEVICES_BLOCK_H	pintos/src/devices/block.h	/^#define DEVICES_BLOCK_H$/;"	d
DEVICES_IDE_H	pintos/src/devices/ide.h	/^#define DEVICES_IDE_H$/;"	d
DEVICES_INPUT_H	pintos/src/devices/input.h	/^#define DEVICES_INPUT_H$/;"	d
DEVICES_INTQ_H	pintos/src/devices/intq.h	/^#define DEVICES_INTQ_H$/;"	d
DEVICES_KBD_H	pintos/src/devices/kbd.h	/^#define DEVICES_KBD_H$/;"	d
DEVICES_PARTITION_H	pintos/src/devices/partition.h	/^#define DEVICES_PARTITION_H$/;"	d
DEVICES_PIT_H	pintos/src/devices/pit.h	/^#define DEVICES_PIT_H$/;"	d
DEVICES_SERIAL_H	pintos/src/devices/serial.h	/^#define DEVICES_SERIAL_H$/;"	d
DEVICES_SHUTDOWN_H	pintos/src/devices/shutdown.h	/^#define DEVICES_SHUTDOWN_H$/;"	d
DEVICES_SPEAKER_H	pintos/src/devices/speaker.h	/^#define DEVICES_SPEAKER_H$/;"	d
DEVICES_TIMER_H	pintos/src/devices/timer.h	/^#define DEVICES_TIMER_H$/;"	d
DEVICES_VGA_H	pintos/src/devices/vga.h	/^#define DEVICES_VGA_H$/;"	d
DEV_DEV	pintos/src/devices/ide.c	/^#define DEV_DEV /;"	d	file:
DEV_LBA	pintos/src/devices/ide.c	/^#define DEV_LBA /;"	d	file:
DEV_MBS	pintos/src/devices/ide.c	/^#define DEV_MBS /;"	d	file:
DIM	pintos/src/examples/matmult.c	/^#define DIM /;"	d	file:
DIRECTORY	pintos/src/tests/filesys/extended/grow-dir-lg.c	/^#define DIRECTORY /;"	d	file:
DIV_ROUND_UP	pintos/src/lib/round.h	/^#define DIV_ROUND_UP(/;"	d
ELEM_BITS	pintos/src/lib/kernel/bitmap.c	/^#define ELEM_BITS /;"	d	file:
EXIT_FAILURE	pintos/src/lib/user/syscall.h	/^#define EXIT_FAILURE /;"	d
EXIT_SUCCESS	pintos/src/lib/user/syscall.h	/^#define EXIT_SUCCESS /;"	d
EXPECTED_DEPTH_TO_PASS	pintos/src/tests/userprog/no-vm/multi-oom.c	/^static const int EXPECTED_DEPTH_TO_PASS = 30;$/;"	v	typeref:typename:const int	file:
EXPECTED_REPETITIONS	pintos/src/tests/userprog/no-vm/multi-oom.c	/^static const int EXPECTED_REPETITIONS = 10;$/;"	v	typeref:typename:const int	file:
Elf32_Addr	pintos/src/userprog/process.c	/^typedef uint32_t Elf32_Word, Elf32_Addr, Elf32_Off;$/;"	t	typeref:typename:uint32_t	file:
Elf32_Ehdr	pintos/src/userprog/process.c	/^struct Elf32_Ehdr$/;"	s	file:
Elf32_Half	pintos/src/userprog/process.c	/^typedef uint16_t Elf32_Half;$/;"	t	typeref:typename:uint16_t	file:
Elf32_Off	pintos/src/userprog/process.c	/^typedef uint32_t Elf32_Word, Elf32_Addr, Elf32_Off;$/;"	t	typeref:typename:uint32_t	file:
Elf32_Phdr	pintos/src/userprog/process.c	/^struct Elf32_Phdr$/;"	s	file:
Elf32_Word	pintos/src/userprog/process.c	/^typedef uint32_t Elf32_Word, Elf32_Addr, Elf32_Off;$/;"	t	typeref:typename:uint32_t	file:
FCR_REG	pintos/src/devices/serial.c	/^#define FCR_REG /;"	d	file:
FILESYS_DIRECTORY_H	pintos/src/filesys/directory.h	/^#define FILESYS_DIRECTORY_H$/;"	d
FILESYS_FILESYS_H	pintos/src/filesys/filesys.h	/^#define FILESYS_FILESYS_H$/;"	d
FILESYS_FILE_H	pintos/src/filesys/file.h	/^#define FILESYS_FILE_H$/;"	d
FILESYS_FREE_MAP_H	pintos/src/filesys/free-map.h	/^#define FILESYS_FREE_MAP_H$/;"	d
FILESYS_FSUTIL_H	pintos/src/filesys/fsutil.h	/^#define FILESYS_FSUTIL_H$/;"	d
FILESYS_INODE_H	pintos/src/filesys/inode.h	/^#define FILESYS_INODE_H$/;"	d
FILESYS_OFF_T_H	pintos/src/filesys/off_t.h	/^#define FILESYS_OFF_T_H$/;"	d
FILE_CNT	pintos/src/tests/filesys/extended/grow-dir-lg.c	/^#define FILE_CNT /;"	d	file:
FILE_CNT	pintos/src/tests/filesys/extended/grow-root-lg.c	/^#define FILE_CNT /;"	d	file:
FILE_CNT	pintos/src/tests/filesys/extended/grow-root-sm.c	/^#define FILE_CNT /;"	d	file:
FILE_SIZE	pintos/src/tests/filesys/extended/grow-two-files.c	/^#define FILE_SIZE /;"	d	file:
FLAG_IF	pintos/src/threads/flags.h	/^#define FLAG_IF /;"	d
FLAG_MBS	pintos/src/threads/flags.h	/^#define FLAG_MBS /;"	d
FNV_32_BASIS	pintos/src/lib/kernel/hash.c	/^#define FNV_32_BASIS /;"	d	file:
FNV_32_PRIME	pintos/src/lib/kernel/hash.c	/^#define FNV_32_PRIME /;"	d	file:
FREE_MAP_SECTOR	pintos/src/filesys/filesys.h	/^#define FREE_MAP_SECTOR /;"	d
GRAN_BYTE	pintos/src/userprog/gdt.c	/^    GRAN_BYTE = 0,              \/* Limit has 1-byte granularity. *\/$/;"	e	enum:seg_granularity	file:
GRAN_PAGE	pintos/src/userprog/gdt.c	/^    GRAN_PAGE = 1               \/* Limit has 4 kB granularity. *\/$/;"	e	enum:seg_granularity	file:
GRAY_ON_BLACK	pintos/src/devices/vga.c	/^#define GRAY_ON_BLACK /;"	d	file:
GROUP	pintos/src/lib/stdio.c	/^        GROUP = 1 << 5          \/* '\\'' *\/$/;"	e	enum:printf_conversion::__anonfd63b5620103	file:
IER_RECV	pintos/src/devices/serial.c	/^#define IER_RECV /;"	d	file:
IER_REG	pintos/src/devices/serial.c	/^#define IER_REG /;"	d	file:
IER_XMIT	pintos/src/devices/serial.c	/^#define IER_XMIT /;"	d	file:
IIR_REG	pintos/src/devices/serial.c	/^#define IIR_REG /;"	d	file:
INODE_MAGIC	pintos/src/filesys/inode.c	/^#define INODE_MAGIC /;"	d	file:
INT	pintos/src/lib/stdio.c	/^        INT = 3,                \/* (none) *\/$/;"	e	enum:printf_conversion::__anonfd63b5620203	file:
INT16_MAX	pintos/src/lib/stdint.h	/^#define INT16_MAX /;"	d
INT16_MIN	pintos/src/lib/stdint.h	/^#define INT16_MIN /;"	d
INT32_MAX	pintos/src/lib/stdint.h	/^#define INT32_MAX /;"	d
INT32_MIN	pintos/src/lib/stdint.h	/^#define INT32_MIN /;"	d
INT64_MAX	pintos/src/lib/stdint.h	/^#define INT64_MAX /;"	d
INT64_MIN	pintos/src/lib/stdint.h	/^#define INT64_MIN /;"	d
INT8_MAX	pintos/src/lib/stdint.h	/^#define INT8_MAX /;"	d
INT8_MIN	pintos/src/lib/stdint.h	/^#define INT8_MIN /;"	d
INTMAX	pintos/src/lib/stdio.c	/^        INTMAX = 4,             \/* j *\/$/;"	e	enum:printf_conversion::__anonfd63b5620203	file:
INTMAX_MAX	pintos/src/lib/stdint.h	/^#define INTMAX_MAX /;"	d
INTMAX_MIN	pintos/src/lib/stdint.h	/^#define INTMAX_MIN /;"	d
INTPTR_MAX	pintos/src/lib/stdint.h	/^#define INTPTR_MAX /;"	d
INTPTR_MIN	pintos/src/lib/stdint.h	/^#define INTPTR_MIN /;"	d
INTQ_BUFSIZE	pintos/src/devices/intq.h	/^#define INTQ_BUFSIZE /;"	d
INTR_CNT	pintos/src/threads/interrupt.c	/^#define INTR_CNT /;"	d	file:
INTR_OFF	pintos/src/threads/interrupt.h	/^    INTR_OFF,             \/* Interrupts disabled. *\/$/;"	e	enum:intr_level
INTR_ON	pintos/src/threads/interrupt.h	/^    INTR_ON               \/* Interrupts enabled. *\/$/;"	e	enum:intr_level
INT_MAX	pintos/src/lib/limits.h	/^#define INT_MAX /;"	d
INT_MIN	pintos/src/lib/limits.h	/^#define INT_MIN /;"	d
IO_BASE	pintos/src/devices/serial.c	/^#define IO_BASE /;"	d	file:
ITER_CNT	pintos/src/tests/threads/priority-fifo.c	/^#define ITER_CNT /;"	d	file:
LCR_DLAB	pintos/src/devices/serial.c	/^#define LCR_DLAB /;"	d	file:
LCR_N81	pintos/src/devices/serial.c	/^#define LCR_N81 /;"	d	file:
LCR_REG	pintos/src/devices/serial.c	/^#define LCR_REG /;"	d	file:
LDFLAGS	pintos/src/utils/Makefile	/^LDFLAGS = -lm$/;"	m
LIST_INITIALIZER	pintos/src/lib/kernel/list.h	/^#define LIST_INITIALIZER(/;"	d
LLONG_MAX	pintos/src/lib/limits.h	/^#define LLONG_MAX /;"	d
LLONG_MIN	pintos/src/lib/limits.h	/^#define LLONG_MIN /;"	d
LOADER_ARGS	pintos/src/threads/loader.h	/^#define LOADER_ARGS (LOADER_PARTS - LOADER_ARGS_/;"	d
LOADER_ARGS_LEN	pintos/src/threads/loader.h	/^#define LOADER_ARGS_LEN /;"	d
LOADER_ARG_CNT	pintos/src/threads/loader.h	/^#define LOADER_ARG_CNT (LOADER_ARGS - LOADER_ARG_CNT_/;"	d
LOADER_ARG_CNT_LEN	pintos/src/threads/loader.h	/^#define LOADER_ARG_CNT_LEN /;"	d
LOADER_BASE	pintos/src/threads/loader.h	/^#define LOADER_BASE /;"	d
LOADER_END	pintos/src/threads/loader.h	/^#define LOADER_END /;"	d
LOADER_KERN_BASE	pintos/src/threads/loader.h	/^#define LOADER_KERN_BASE /;"	d
LOADER_PARTS	pintos/src/threads/loader.h	/^#define LOADER_PARTS (LOADER_SIG - LOADER_PARTS_/;"	d
LOADER_PARTS_LEN	pintos/src/threads/loader.h	/^#define LOADER_PARTS_LEN /;"	d
LOADER_PHYS_BASE	pintos/src/threads/loader.h	/^#define LOADER_PHYS_BASE /;"	d
LOADER_SIG	pintos/src/threads/loader.h	/^#define LOADER_SIG (LOADER_END - LOADER_SIG_/;"	d
LOADER_SIG_LEN	pintos/src/threads/loader.h	/^#define LOADER_SIG_LEN /;"	d
LONG	pintos/src/lib/stdio.c	/^        LONG = 5,               \/* l *\/$/;"	e	enum:printf_conversion::__anonfd63b5620203	file:
LONGLONG	pintos/src/lib/stdio.c	/^        LONGLONG = 6,           \/* ll *\/$/;"	e	enum:printf_conversion::__anonfd63b5620203	file:
LONG_MAX	pintos/src/lib/limits.h	/^#define LONG_MAX /;"	d
LONG_MIN	pintos/src/lib/limits.h	/^#define LONG_MIN /;"	d
LSR_DR	pintos/src/devices/serial.c	/^#define LSR_DR /;"	d	file:
LSR_REG	pintos/src/devices/serial.c	/^#define LSR_REG /;"	d	file:
LSR_THRE	pintos/src/devices/serial.c	/^#define LSR_THRE /;"	d	file:
LS_REG	pintos/src/devices/serial.c	/^#define LS_REG /;"	d	file:
MAP_FAILED	pintos/src/lib/user/syscall.h	/^#define MAP_FAILED /;"	d
MAX_CNT	pintos/src/tests/internal/stdlib.c	/^#define MAX_CNT /;"	d	file:
MAX_ELEMS_PER_BUCKET	pintos/src/lib/kernel/hash.c	/^#define MAX_ELEMS_PER_BUCKET /;"	d	file:
MAX_LEVEL	pintos/src/examples/pwd.c	/^#define MAX_LEVEL /;"	d	file:
MAX_SIZE	pintos/src/tests/internal/list.c	/^#define MAX_SIZE /;"	d	file:
MAX_THREAD_CNT	pintos/src/tests/threads/mlfqs-fair.c	/^#define MAX_THREAD_CNT /;"	d	file:
MCR_OUT2	pintos/src/devices/serial.c	/^#define MCR_OUT2 /;"	d	file:
MCR_REG	pintos/src/devices/serial.c	/^#define MCR_REG /;"	d	file:
MINUS	pintos/src/lib/stdio.c	/^        MINUS = 1 << 0,         \/* '-' *\/$/;"	e	enum:printf_conversion::__anonfd63b5620103	file:
MIN_ELEMS_PER_BUCKET	pintos/src/lib/kernel/hash.c	/^#define MIN_ELEMS_PER_BUCKET /;"	d	file:
MS_REG	pintos/src/devices/serial.c	/^#define MS_REG /;"	d	file:
NAME_MAX	pintos/src/filesys/directory.h	/^#define NAME_MAX /;"	d
NESTING_DEPTH	pintos/src/tests/threads/priority-donate-chain.c	/^#define NESTING_DEPTH /;"	d	file:
NOT_REACHED	pintos/src/lib/debug.h	/^#define NOT_REACHED(/;"	d
NO_INLINE	pintos/src/lib/debug.h	/^#define NO_INLINE /;"	d
NO_RETURN	pintos/src/lib/debug.h	/^#define NO_RETURN /;"	d
NO_RETURN	pintos/src/userprog/process.c	/^static thread_func start_process NO_RETURN;$/;"	v	typeref:typename:thread_func start_process	file:
NULL	pintos/src/lib/stddef.h	/^#define NULL /;"	d
PACKED	pintos/src/lib/packed.h	/^#define PACKED /;"	d
PACKED	pintos/src/lib/ustar.c	/^PACKED;$/;"	v	typeref:struct:ustar_header
PAL_ASSERT	pintos/src/threads/palloc.h	/^    PAL_ASSERT = 001,           \/* Panic on failure. *\/$/;"	e	enum:palloc_flags
PAL_USER	pintos/src/threads/palloc.h	/^    PAL_USER = 004              \/* User page. *\/$/;"	e	enum:palloc_flags
PAL_ZERO	pintos/src/threads/palloc.h	/^    PAL_ZERO = 002,             \/* Zero page contents. *\/$/;"	e	enum:palloc_flags
PANIC	pintos/src/lib/debug.h	/^#define PANIC(/;"	d
PDBITS	pintos/src/threads/pte.h	/^#define PDBITS /;"	d
PDMASK	pintos/src/threads/pte.h	/^#define PDMASK /;"	d
PDSHIFT	pintos/src/threads/pte.h	/^#define PDSHIFT /;"	d
PE32Ax	pintos/src/userprog/process.c	/^#define PE32Ax /;"	d	file:
PE32Hx	pintos/src/userprog/process.c	/^#define PE32Hx /;"	d	file:
PE32Ox	pintos/src/userprog/process.c	/^#define PE32Ox /;"	d	file:
PE32Wx	pintos/src/userprog/process.c	/^#define PE32Wx /;"	d	file:
PF_P	pintos/src/userprog/exception.h	/^#define PF_P /;"	d
PF_R	pintos/src/userprog/process.c	/^#define PF_R /;"	d	file:
PF_U	pintos/src/userprog/exception.h	/^#define PF_U /;"	d
PF_W	pintos/src/userprog/exception.h	/^#define PF_W /;"	d
PF_W	pintos/src/userprog/process.c	/^#define PF_W /;"	d	file:
PF_X	pintos/src/userprog/process.c	/^#define PF_X /;"	d	file:
PGBITS	pintos/src/threads/vaddr.h	/^#define PGBITS /;"	d
PGMASK	pintos/src/threads/vaddr.h	/^#define PGMASK /;"	d
PGSHIFT	pintos/src/threads/vaddr.h	/^#define PGSHIFT /;"	d
PGSIZE	pintos/src/threads/vaddr.h	/^#define PGSIZE /;"	d
PHYS_BASE	pintos/src/threads/vaddr.h	/^#define	PHYS_BASE ((void *) LOADER_PHYS_BASE)/;"	d
PIC0_CTRL	pintos/src/threads/interrupt.c	/^#define PIC0_CTRL	/;"	d	file:
PIC0_DATA	pintos/src/threads/interrupt.c	/^#define PIC0_DATA	/;"	d	file:
PIC1_CTRL	pintos/src/threads/interrupt.c	/^#define PIC1_CTRL	/;"	d	file:
PIC1_DATA	pintos/src/threads/interrupt.c	/^#define PIC1_DATA	/;"	d	file:
PID_ERROR	pintos/src/lib/user/syscall.h	/^#define PID_ERROR /;"	d
PIT_HZ	pintos/src/devices/pit.c	/^#define PIT_HZ /;"	d	file:
PIT_PORT_CONTROL	pintos/src/devices/pit.c	/^#define PIT_PORT_CONTROL /;"	d	file:
PIT_PORT_COUNTER	pintos/src/devices/pit.c	/^#define PIT_PORT_COUNTER(/;"	d	file:
PLUS	pintos/src/lib/stdio.c	/^        PLUS = 1 << 1,          \/* '+' *\/$/;"	e	enum:printf_conversion::__anonfd63b5620103	file:
POLL	pintos/src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	e	enum:__anonf98f680b0103	file:
POUND	pintos/src/lib/stdio.c	/^        POUND = 1 << 3,         \/* '#' *\/$/;"	e	enum:printf_conversion::__anonfd63b5620103	file:
PRDSNu	pintos/src/devices/block.h	/^#define PRDSNu /;"	d
PRINTF_FORMAT	pintos/src/lib/debug.h	/^#define PRINTF_FORMAT(/;"	d
PRIX16	pintos/src/lib/inttypes.h	/^#define PRIX16 /;"	d
PRIX32	pintos/src/lib/inttypes.h	/^#define PRIX32 /;"	d
PRIX64	pintos/src/lib/inttypes.h	/^#define PRIX64 /;"	d
PRIX8	pintos/src/lib/inttypes.h	/^#define PRIX8 /;"	d
PRIXMAX	pintos/src/lib/inttypes.h	/^#define PRIXMAX /;"	d
PRIXPTR	pintos/src/lib/inttypes.h	/^#define PRIXPTR /;"	d
PRI_DEFAULT	pintos/src/threads/thread.h	/^#define PRI_DEFAULT /;"	d
PRI_MAX	pintos/src/threads/thread.h	/^#define PRI_MAX /;"	d
PRI_MIN	pintos/src/threads/thread.h	/^#define PRI_MIN /;"	d
PRId16	pintos/src/lib/inttypes.h	/^#define PRId16 /;"	d
PRId32	pintos/src/lib/inttypes.h	/^#define PRId32 /;"	d
PRId64	pintos/src/lib/inttypes.h	/^#define PRId64 /;"	d
PRId8	pintos/src/lib/inttypes.h	/^#define PRId8 /;"	d
PRIdMAX	pintos/src/lib/inttypes.h	/^#define PRIdMAX /;"	d
PRIdPTR	pintos/src/lib/inttypes.h	/^#define PRIdPTR /;"	d
PRIi16	pintos/src/lib/inttypes.h	/^#define PRIi16 /;"	d
PRIi32	pintos/src/lib/inttypes.h	/^#define PRIi32 /;"	d
PRIi64	pintos/src/lib/inttypes.h	/^#define PRIi64 /;"	d
PRIi8	pintos/src/lib/inttypes.h	/^#define PRIi8 /;"	d
PRIiMAX	pintos/src/lib/inttypes.h	/^#define PRIiMAX /;"	d
PRIiPTR	pintos/src/lib/inttypes.h	/^#define PRIiPTR /;"	d
PRIo16	pintos/src/lib/inttypes.h	/^#define PRIo16 /;"	d
PRIo32	pintos/src/lib/inttypes.h	/^#define PRIo32 /;"	d
PRIo64	pintos/src/lib/inttypes.h	/^#define PRIo64 /;"	d
PRIo8	pintos/src/lib/inttypes.h	/^#define PRIo8 /;"	d
PRIoMAX	pintos/src/lib/inttypes.h	/^#define PRIoMAX /;"	d
PRIoPTR	pintos/src/lib/inttypes.h	/^#define PRIoPTR /;"	d
PRIu16	pintos/src/lib/inttypes.h	/^#define PRIu16 /;"	d
PRIu32	pintos/src/lib/inttypes.h	/^#define PRIu32 /;"	d
PRIu64	pintos/src/lib/inttypes.h	/^#define PRIu64 /;"	d
PRIu8	pintos/src/lib/inttypes.h	/^#define PRIu8 /;"	d
PRIuMAX	pintos/src/lib/inttypes.h	/^#define PRIuMAX /;"	d
PRIuPTR	pintos/src/lib/inttypes.h	/^#define PRIuPTR /;"	d
PRIx16	pintos/src/lib/inttypes.h	/^#define PRIx16 /;"	d
PRIx32	pintos/src/lib/inttypes.h	/^#define PRIx32 /;"	d
PRIx64	pintos/src/lib/inttypes.h	/^#define PRIx64 /;"	d
PRIx8	pintos/src/lib/inttypes.h	/^#define PRIx8 /;"	d
PRIxMAX	pintos/src/lib/inttypes.h	/^#define PRIxMAX /;"	d
PRIxPTR	pintos/src/lib/inttypes.h	/^#define PRIxPTR /;"	d
PROGS	pintos/src/examples/Makefile	/^PROGS = cat cmp cp echo halt hex-dump ls mcat mcp mkdir pwd rm shell \\$/;"	m
PROTd	pintos/src/filesys/off_t.h	/^#define PROTd /;"	d
PTBITS	pintos/src/threads/pte.h	/^#define PTBITS /;"	d
PTE_A	pintos/src/threads/pte.h	/^#define PTE_A /;"	d
PTE_ADDR	pintos/src/threads/pte.h	/^#define PTE_ADDR /;"	d
PTE_AVL	pintos/src/threads/pte.h	/^#define PTE_AVL /;"	d
PTE_D	pintos/src/threads/pte.h	/^#define PTE_D /;"	d
PTE_FLAGS	pintos/src/threads/pte.h	/^#define PTE_FLAGS /;"	d
PTE_P	pintos/src/threads/pte.h	/^#define PTE_P /;"	d
PTE_U	pintos/src/threads/pte.h	/^#define PTE_U /;"	d
PTE_W	pintos/src/threads/pte.h	/^#define PTE_W /;"	d
PTMASK	pintos/src/threads/pte.h	/^#define PTMASK /;"	d
PTRDIFFT	pintos/src/lib/stdio.c	/^        PTRDIFFT = 7,           \/* t *\/$/;"	e	enum:printf_conversion::__anonfd63b5620203	file:
PTRDIFF_MAX	pintos/src/lib/stdint.h	/^#define PTRDIFF_MAX /;"	d
PTRDIFF_MIN	pintos/src/lib/stdint.h	/^#define PTRDIFF_MIN /;"	d
PTSHIFT	pintos/src/threads/pte.h	/^#define	PTSHIFT /;"	d
PTSPAN	pintos/src/threads/pte.h	/^#define PTSPAN /;"	d
PT_DYNAMIC	pintos/src/userprog/process.c	/^#define PT_DYNAMIC /;"	d	file:
PT_INTERP	pintos/src/userprog/process.c	/^#define PT_INTERP /;"	d	file:
PT_LOAD	pintos/src/userprog/process.c	/^#define PT_LOAD /;"	d	file:
PT_NOTE	pintos/src/userprog/process.c	/^#define PT_NOTE /;"	d	file:
PT_NULL	pintos/src/userprog/process.c	/^#define PT_NULL /;"	d	file:
PT_PHDR	pintos/src/userprog/process.c	/^#define PT_PHDR /;"	d	file:
PT_SHLIB	pintos/src/userprog/process.c	/^#define PT_SHLIB /;"	d	file:
PT_STACK	pintos/src/userprog/process.c	/^#define PT_STACK /;"	d	file:
QUEUE	pintos/src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	e	enum:__anonf98f680b0103	file:
RBR_REG	pintos/src/devices/serial.c	/^#define RBR_REG /;"	d	file:
READDIR_MAX_LEN	pintos/src/lib/user/syscall.h	/^#define READDIR_MAX_LEN /;"	d
RECURSE	pintos/src/tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	e	enum:child_termination_mode	file:
ROOT_DIR_SECTOR	pintos/src/filesys/filesys.h	/^#define ROOT_DIR_SECTOR /;"	d
ROUND_DOWN	pintos/src/lib/round.h	/^#define ROUND_DOWN(/;"	d
ROUND_UP	pintos/src/lib/round.h	/^#define ROUND_UP(/;"	d
ROW_CNT	pintos/src/devices/vga.c	/^#define ROW_CNT /;"	d	file:
RTCSA_UIP	pintos/src/devices/rtc.c	/^#define RTCSA_UIP	/;"	d	file:
RTCSB_24HR	pintos/src/devices/rtc.c	/^#define RTCSB_24HR	/;"	d	file:
RTCSB_DM	pintos/src/devices/rtc.c	/^#define RTCSB_DM	/;"	d	file:
RTCSB_SET	pintos/src/devices/rtc.c	/^#define	RTCSB_SET	/;"	d	file:
RTC_H	pintos/src/devices/rtc.h	/^#define RTC_H$/;"	d
RTC_REG_A	pintos/src/devices/rtc.c	/^#define RTC_REG_A	/;"	d	file:
RTC_REG_B	pintos/src/devices/rtc.c	/^#define RTC_REG_B	/;"	d	file:
RTC_REG_C	pintos/src/devices/rtc.c	/^#define RTC_REG_C	/;"	d	file:
RTC_REG_D	pintos/src/devices/rtc.c	/^#define RTC_REG_D	/;"	d	file:
RTC_REG_HOUR	pintos/src/devices/rtc.c	/^#define RTC_REG_HOUR	/;"	d	file:
RTC_REG_MDAY	pintos/src/devices/rtc.c	/^#define RTC_REG_MDAY	/;"	d	file:
RTC_REG_MIN	pintos/src/devices/rtc.c	/^#define RTC_REG_MIN	/;"	d	file:
RTC_REG_MON	pintos/src/devices/rtc.c	/^#define RTC_REG_MON	/;"	d	file:
RTC_REG_SEC	pintos/src/devices/rtc.c	/^#define RTC_REG_SEC	/;"	d	file:
RTC_REG_YEAR	pintos/src/devices/rtc.c	/^#define RTC_REG_YEAR	/;"	d	file:
SCHAR_MAX	pintos/src/lib/limits.h	/^#define SCHAR_MAX /;"	d
SCHAR_MIN	pintos/src/lib/limits.h	/^#define SCHAR_MIN /;"	d
SEL_CNT	pintos/src/userprog/gdt.h	/^#define SEL_CNT /;"	d
SEL_KCSEG	pintos/src/threads/loader.h	/^#define SEL_KCSEG /;"	d
SEL_KDSEG	pintos/src/threads/loader.h	/^#define SEL_KDSEG /;"	d
SEL_NULL	pintos/src/threads/loader.h	/^#define SEL_NULL /;"	d
SEL_TSS	pintos/src/userprog/gdt.h	/^#define SEL_TSS /;"	d
SEL_UCSEG	pintos/src/userprog/gdt.h	/^#define SEL_UCSEG /;"	d
SEL_UDSEG	pintos/src/userprog/gdt.h	/^#define SEL_UDSEG /;"	d
SHORT	pintos/src/lib/stdio.c	/^        SHORT = 2,              \/* h *\/$/;"	e	enum:printf_conversion::__anonfd63b5620203	file:
SHRT_MAX	pintos/src/lib/limits.h	/^#define SHRT_MAX /;"	d
SHRT_MIN	pintos/src/lib/limits.h	/^#define SHRT_MIN /;"	d
SHUTDOWN_NONE	pintos/src/devices/shutdown.h	/^    SHUTDOWN_NONE,              \/* Loop forever. *\/$/;"	e	enum:shutdown_type
SHUTDOWN_POWER_OFF	pintos/src/devices/shutdown.h	/^    SHUTDOWN_POWER_OFF,         \/* Power off the machine (if possible). *\/$/;"	e	enum:shutdown_type
SHUTDOWN_REBOOT	pintos/src/devices/shutdown.h	/^    SHUTDOWN_REBOOT,            \/* Reboot the machine (if possible). *\/$/;"	e	enum:shutdown_type
SIZE	pintos/src/tests/vm/child-linear.c	/^#define SIZE /;"	d	file:
SIZE	pintos/src/tests/vm/mmap-shuffle.c	/^#define SIZE /;"	d	file:
SIZE	pintos/src/tests/vm/page-linear.c	/^#define SIZE /;"	d	file:
SIZE	pintos/src/tests/vm/page-shuffle.c	/^#define SIZE /;"	d	file:
SIZET	pintos/src/lib/stdio.c	/^        SIZET = 8               \/* z *\/$/;"	e	enum:printf_conversion::__anonfd63b5620203	file:
SIZE_MAX	pintos/src/lib/stdint.h	/^#define SIZE_MAX /;"	d
SORT_SIZE	pintos/src/examples/bubsort.c	/^#define SORT_SIZE /;"	d	file:
SPACE	pintos/src/lib/stdio.c	/^        SPACE = 1 << 2,         \/* ' ' *\/$/;"	e	enum:printf_conversion::__anonfd63b5620103	file:
SPEAKER_GATE_ENABLE	pintos/src/devices/speaker.c	/^#define SPEAKER_GATE_ENABLE	/;"	d	file:
SPEAKER_PORT_GATE	pintos/src/devices/speaker.c	/^#define SPEAKER_PORT_GATE	/;"	d	file:
SRCDIR	pintos/src/examples/Makefile	/^SRCDIR = ..$/;"	m
STA_BSY	pintos/src/devices/ide.c	/^#define STA_BSY /;"	d	file:
STA_DRDY	pintos/src/devices/ide.c	/^#define STA_DRDY /;"	d	file:
STA_DRQ	pintos/src/devices/ide.c	/^#define STA_DRQ /;"	d	file:
STDIN_FILENO	pintos/src/lib/stdio.h	/^#define STDIN_FILENO /;"	d
STDOUT_FILENO	pintos/src/lib/stdio.h	/^#define STDOUT_FILENO /;"	d
SWITCH_CUR	pintos/src/threads/switch.h	/^#define SWITCH_CUR /;"	d
SWITCH_NEXT	pintos/src/threads/switch.h	/^#define SWITCH_NEXT /;"	d
SYS_CHDIR	pintos/src/lib/syscall-nr.h	/^    SYS_CHDIR,                  \/* Change the current directory. *\/$/;"	e	enum:__anondb85d38c0103
SYS_CLOSE	pintos/src/lib/syscall-nr.h	/^    SYS_CLOSE,                  \/* Close a file. *\/$/;"	e	enum:__anondb85d38c0103
SYS_CREATE	pintos/src/lib/syscall-nr.h	/^    SYS_CREATE,                 \/* Create a file. *\/$/;"	e	enum:__anondb85d38c0103
SYS_EXEC	pintos/src/lib/syscall-nr.h	/^    SYS_EXEC,                   \/* Start another process. *\/$/;"	e	enum:__anondb85d38c0103
SYS_EXIT	pintos/src/lib/syscall-nr.h	/^    SYS_EXIT,                   \/* Terminate this process. *\/$/;"	e	enum:__anondb85d38c0103
SYS_FILESIZE	pintos/src/lib/syscall-nr.h	/^    SYS_FILESIZE,               \/* Obtain a file's size. *\/$/;"	e	enum:__anondb85d38c0103
SYS_HALT	pintos/src/lib/syscall-nr.h	/^    SYS_HALT,                   \/* Halt the operating system. *\/$/;"	e	enum:__anondb85d38c0103
SYS_INUMBER	pintos/src/lib/syscall-nr.h	/^    SYS_INUMBER                 \/* Returns the inode number for a fd. *\/$/;"	e	enum:__anondb85d38c0103
SYS_ISDIR	pintos/src/lib/syscall-nr.h	/^    SYS_ISDIR,                  \/* Tests if a fd represents a directory. *\/$/;"	e	enum:__anondb85d38c0103
SYS_MKDIR	pintos/src/lib/syscall-nr.h	/^    SYS_MKDIR,                  \/* Create a directory. *\/$/;"	e	enum:__anondb85d38c0103
SYS_MMAP	pintos/src/lib/syscall-nr.h	/^    SYS_MMAP,                   \/* Map a file into memory. *\/$/;"	e	enum:__anondb85d38c0103
SYS_MUNMAP	pintos/src/lib/syscall-nr.h	/^    SYS_MUNMAP,                 \/* Remove a memory mapping. *\/$/;"	e	enum:__anondb85d38c0103
SYS_OPEN	pintos/src/lib/syscall-nr.h	/^    SYS_OPEN,                   \/* Open a file. *\/$/;"	e	enum:__anondb85d38c0103
SYS_READ	pintos/src/lib/syscall-nr.h	/^    SYS_READ,                   \/* Read from a file. *\/$/;"	e	enum:__anondb85d38c0103
SYS_READDIR	pintos/src/lib/syscall-nr.h	/^    SYS_READDIR,                \/* Reads a directory entry. *\/$/;"	e	enum:__anondb85d38c0103
SYS_REMOVE	pintos/src/lib/syscall-nr.h	/^    SYS_REMOVE,                 \/* Delete a file. *\/$/;"	e	enum:__anondb85d38c0103
SYS_SEEK	pintos/src/lib/syscall-nr.h	/^    SYS_SEEK,                   \/* Change position in a file. *\/$/;"	e	enum:__anondb85d38c0103
SYS_TELL	pintos/src/lib/syscall-nr.h	/^    SYS_TELL,                   \/* Report current position in a file. *\/$/;"	e	enum:__anondb85d38c0103
SYS_WAIT	pintos/src/lib/syscall-nr.h	/^    SYS_WAIT,                   \/* Wait for a child process to die. *\/$/;"	e	enum:__anondb85d38c0103
SYS_WRITE	pintos/src/lib/syscall-nr.h	/^    SYS_WRITE,                  \/* Write to a file. *\/$/;"	e	enum:__anondb85d38c0103
TAGS	pintos/src/Makefile	/^TAGS::$/;"	t
TAGS_SOURCES	pintos/src/Makefile	/^TAGS_SOURCES = find $(TAGS_SUBDIRS) -name \\*.[chS] -print$/;"	m
TAGS_SUBDIRS	pintos/src/Makefile	/^TAGS_SUBDIRS = $(BUILD_SUBDIRS) devices lib$/;"	m
TESTS_ARC4_H	pintos/src/tests/arc4.h	/^#define TESTS_ARC4_H$/;"	d
TESTS_CKSUM_H	pintos/src/tests/cksum.h	/^#define TESTS_CKSUM_H$/;"	d
TESTS_FILESYS_BASE_SYN_READ_H	pintos/src/tests/filesys/base/syn-read.h	/^#define TESTS_FILESYS_BASE_SYN_READ_H$/;"	d
TESTS_FILESYS_BASE_SYN_WRITE_H	pintos/src/tests/filesys/base/syn-write.h	/^#define TESTS_FILESYS_BASE_SYN_WRITE_H$/;"	d
TESTS_FILESYS_EXTENDED_MK_TREE_H	pintos/src/tests/filesys/extended/mk-tree.h	/^#define TESTS_FILESYS_EXTENDED_MK_TREE_H$/;"	d
TESTS_FILESYS_EXTENDED_SYN_RW_H	pintos/src/tests/filesys/extended/syn-rw.h	/^#define TESTS_FILESYS_EXTENDED_SYN_RW_H$/;"	d
TESTS_FILESYS_SEQ_TEST_H	pintos/src/tests/filesys/seq-test.h	/^#define TESTS_FILESYS_SEQ_TEST_H$/;"	d
TESTS_LIB_H	pintos/src/tests/lib.h	/^#define TESTS_LIB_H$/;"	d
TESTS_MAIN_H	pintos/src/tests/main.h	/^#define TESTS_MAIN_H$/;"	d
TESTS_THREADS_TESTS_H	pintos/src/tests/threads/tests.h	/^#define TESTS_THREADS_TESTS_H$/;"	d
TESTS_USERPROG_BOUNDARY_H	pintos/src/tests/userprog/boundary.h	/^#define TESTS_USERPROG_BOUNDARY_H$/;"	d
TESTS_VM_PARALLEL_MERGE	pintos/src/tests/vm/parallel-merge.h	/^#define TESTS_VM_PARALLEL_MERGE /;"	d
TESTS_VM_QSORT_H	pintos/src/tests/vm/qsort.h	/^#define TESTS_VM_QSORT_H /;"	d
TEST_SIZE	pintos/src/tests/filesys/base/lg-create.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/lg-full.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/lg-random.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/lg-seq-block.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/lg-seq-random.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/sm-create.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/sm-full.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/sm-random.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/sm-seq-block.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/base/sm-seq-random.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/extended/grow-create.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/extended/grow-seq-lg.c	/^#define TEST_SIZE /;"	d	file:
TEST_SIZE	pintos/src/tests/filesys/extended/grow-seq-sm.c	/^#define TEST_SIZE /;"	d	file:
THREADS_FLAGS_H	pintos/src/threads/flags.h	/^#define THREADS_FLAGS_H$/;"	d
THREADS_INIT_H	pintos/src/threads/init.h	/^#define THREADS_INIT_H$/;"	d
THREADS_INTERRUPT_H	pintos/src/threads/interrupt.h	/^#define THREADS_INTERRUPT_H$/;"	d
THREADS_INTR_STUBS_H	pintos/src/threads/intr-stubs.h	/^#define THREADS_INTR_STUBS_H$/;"	d
THREADS_IO_H	pintos/src/threads/io.h	/^#define THREADS_IO_H$/;"	d
THREADS_LOADER_H	pintos/src/threads/loader.h	/^#define THREADS_LOADER_H$/;"	d
THREADS_MALLOC_H	pintos/src/threads/malloc.h	/^#define THREADS_MALLOC_H$/;"	d
THREADS_PALLOC_H	pintos/src/threads/palloc.h	/^#define THREADS_PALLOC_H$/;"	d
THREADS_PTE_H	pintos/src/threads/pte.h	/^#define THREADS_PTE_H$/;"	d
THREADS_SWITCH_H	pintos/src/threads/switch.h	/^#define THREADS_SWITCH_H$/;"	d
THREADS_SYNCH_H	pintos/src/threads/synch.h	/^#define THREADS_SYNCH_H$/;"	d
THREADS_THREAD_H	pintos/src/threads/thread.h	/^#define THREADS_THREAD_H$/;"	d
THREADS_VADDR_H	pintos/src/threads/vaddr.h	/^#define THREADS_VADDR_H$/;"	d
THREAD_BLOCKED	pintos/src/threads/thread.h	/^    THREAD_BLOCKED,     \/* Waiting for an event to trigger. *\/$/;"	e	enum:thread_status
THREAD_CNT	pintos/src/tests/threads/mlfqs-load-60.c	/^#define THREAD_CNT /;"	d	file:
THREAD_CNT	pintos/src/tests/threads/mlfqs-load-avg.c	/^#define THREAD_CNT /;"	d	file:
THREAD_CNT	pintos/src/tests/threads/priority-fifo.c	/^#define THREAD_CNT /;"	d	file:
THREAD_DYING	pintos/src/threads/thread.h	/^    THREAD_DYING        \/* About to be destroyed. *\/$/;"	e	enum:thread_status
THREAD_MAGIC	pintos/src/threads/thread.c	/^#define THREAD_MAGIC /;"	d	file:
THREAD_READY	pintos/src/threads/thread.h	/^    THREAD_READY,       \/* Not running but ready to run. *\/$/;"	e	enum:thread_status
THREAD_RUNNING	pintos/src/threads/thread.h	/^    THREAD_RUNNING,     \/* Running thread. *\/$/;"	e	enum:thread_status
THR_REG	pintos/src/devices/serial.c	/^#define THR_REG /;"	d	file:
TID_ERROR	pintos/src/threads/thread.h	/^#define TID_ERROR /;"	d
TIMER_FREQ	pintos/src/devices/timer.h	/^#define TIMER_FREQ /;"	d
TIME_SLICE	pintos/src/threads/thread.c	/^#define TIME_SLICE /;"	d	file:
UCHAR_MAX	pintos/src/lib/limits.h	/^#define UCHAR_MAX /;"	d
UINT16_MAX	pintos/src/lib/stdint.h	/^#define UINT16_MAX /;"	d
UINT32_MAX	pintos/src/lib/stdint.h	/^#define UINT32_MAX /;"	d
UINT64_MAX	pintos/src/lib/stdint.h	/^#define UINT64_MAX /;"	d
UINT8_MAX	pintos/src/lib/stdint.h	/^#define UINT8_MAX /;"	d
UINTMAX_MAX	pintos/src/lib/stdint.h	/^#define UINTMAX_MAX /;"	d
UINTPTR_MAX	pintos/src/lib/stdint.h	/^#define UINTPTR_MAX /;"	d
UINT_MAX	pintos/src/lib/limits.h	/^#define UINT_MAX /;"	d
ULLONG_MAX	pintos/src/lib/limits.h	/^#define ULLONG_MAX /;"	d
ULONG_MAX	pintos/src/lib/limits.h	/^#define ULONG_MAX /;"	d
UNINIT	pintos/src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	e	enum:__anonf98f680b0103	file:
UNUSED	pintos/src/lib/debug.h	/^#define UNUSED /;"	d
USERPROG_EXCEPTION_H	pintos/src/userprog/exception.h	/^#define USERPROG_EXCEPTION_H$/;"	d
USERPROG_GDT_H	pintos/src/userprog/gdt.h	/^#define USERPROG_GDT_H$/;"	d
USERPROG_PAGEDIR_H	pintos/src/userprog/pagedir.h	/^#define USERPROG_PAGEDIR_H$/;"	d
USERPROG_PROCESS_H	pintos/src/userprog/process.h	/^#define USERPROG_PROCESS_H$/;"	d
USERPROG_SYSCALL_H	pintos/src/userprog/syscall.h	/^#define USERPROG_SYSCALL_H$/;"	d
USERPROG_TSS_H	pintos/src/userprog/tss.h	/^#define USERPROG_TSS_H$/;"	d
USHRT_MAX	pintos/src/lib/limits.h	/^#define USHRT_MAX /;"	d
USTAR_DIRECTORY	pintos/src/lib/ustar.h	/^    USTAR_DIRECTORY = '5',      \/* Directory. *\/$/;"	e	enum:ustar_type
USTAR_EOF	pintos/src/lib/ustar.h	/^    USTAR_EOF = -1              \/* End of archive (not an official value). *\/$/;"	e	enum:ustar_type
USTAR_HEADER_SIZE	pintos/src/lib/ustar.h	/^#define USTAR_HEADER_SIZE /;"	d
USTAR_REGULAR	pintos/src/lib/ustar.h	/^    USTAR_REGULAR = '0',        \/* Ordinary file. *\/$/;"	e	enum:ustar_type
ZERO	pintos/src/lib/stdio.c	/^        ZERO = 1 << 4,          \/* '0' *\/$/;"	e	enum:printf_conversion::__anonfd63b5620103	file:
_GNU_SOURCE	pintos/src/utils/squish-pty.c	/^#define _GNU_SOURCE /;"	d	file:
_GNU_SOURCE	pintos/src/utils/squish-unix.c	/^#define _GNU_SOURCE /;"	d	file:
__LIB_CTYPE_H	pintos/src/lib/ctype.h	/^#define __LIB_CTYPE_H$/;"	d
__LIB_DEBUG_H	pintos/src/lib/debug.h	/^#define __LIB_DEBUG_H$/;"	d
__LIB_INTTYPES_H	pintos/src/lib/inttypes.h	/^#define __LIB_INTTYPES_H$/;"	d
__LIB_KERNEL_BITMAP_H	pintos/src/lib/kernel/bitmap.h	/^#define __LIB_KERNEL_BITMAP_H$/;"	d
__LIB_KERNEL_CONSOLE_H	pintos/src/lib/kernel/console.h	/^#define __LIB_KERNEL_CONSOLE_H$/;"	d
__LIB_KERNEL_HASH_H	pintos/src/lib/kernel/hash.h	/^#define __LIB_KERNEL_HASH_H$/;"	d
__LIB_KERNEL_LIST_H	pintos/src/lib/kernel/list.h	/^#define __LIB_KERNEL_LIST_H$/;"	d
__LIB_KERNEL_STDIO_H	pintos/src/lib/kernel/stdio.h	/^#define __LIB_KERNEL_STDIO_H$/;"	d
__LIB_LIMITS_H	pintos/src/lib/limits.h	/^#define __LIB_LIMITS_H$/;"	d
__LIB_PACKED_H	pintos/src/lib/packed.h	/^#define __LIB_PACKED_H$/;"	d
__LIB_RANDOM_H	pintos/src/lib/random.h	/^#define __LIB_RANDOM_H$/;"	d
__LIB_ROUND_H	pintos/src/lib/round.h	/^#define __LIB_ROUND_H$/;"	d
__LIB_STDARG_H	pintos/src/lib/stdarg.h	/^#define __LIB_STDARG_H$/;"	d
__LIB_STDBOOL_H	pintos/src/lib/stdbool.h	/^#define __LIB_STDBOOL_H$/;"	d
__LIB_STDDEF_H	pintos/src/lib/stddef.h	/^#define __LIB_STDDEF_H$/;"	d
__LIB_STDINT_H	pintos/src/lib/stdint.h	/^#define __LIB_STDINT_H$/;"	d
__LIB_STDIO_H	pintos/src/lib/stdio.h	/^#define __LIB_STDIO_H$/;"	d
__LIB_STDLIB_H	pintos/src/lib/stdlib.h	/^#define __LIB_STDLIB_H$/;"	d
__LIB_STRING_H	pintos/src/lib/string.h	/^#define __LIB_STRING_H$/;"	d
__LIB_SYSCALL_NR_H	pintos/src/lib/syscall-nr.h	/^#define __LIB_SYSCALL_NR_H$/;"	d
__LIB_USER_STDIO_H	pintos/src/lib/user/stdio.h	/^#define __LIB_USER_STDIO_H$/;"	d
__LIB_USER_SYSCALL_H	pintos/src/lib/user/syscall.h	/^#define __LIB_USER_SYSCALL_H$/;"	d
__LIB_USTAR_H	pintos/src/lib/ustar.h	/^#define __LIB_USTAR_H$/;"	d
__anondb85d38c0103	pintos/src/lib/syscall-nr.h	/^  {$/;"	g
__anonf98f680b0103	pintos/src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	g	file:
__anonfd63b5620103	pintos/src/lib/stdio.c	/^      {$/;"	g	struct:printf_conversion	file:
__anonfd63b5620203	pintos/src/lib/stdio.c	/^      {$/;"	g	struct:printf_conversion	file:
__bool_true_false_are_defined	pintos/src/lib/stdbool.h	/^#define __bool_true_false_are_defined	/;"	d
__divdi3	pintos/src/lib/arithmetic.c	/^__divdi3 (long long n, long long d) $/;"	f	typeref:typename:long long
__moddi3	pintos/src/lib/arithmetic.c	/^__moddi3 (long long n, long long d) $/;"	f	typeref:typename:long long
__narrow_bridge_h	pintos/src/tests/threads/narrow-bridge.h	/^#define __narrow_bridge_h$/;"	d
__printf	pintos/src/lib/stdio.c	/^__printf (const char *format,$/;"	f	typeref:typename:void
__udivdi3	pintos/src/lib/arithmetic.c	/^__udivdi3 (unsigned long long n, unsigned long long d) $/;"	f	typeref:typename:unsigned long long
__umoddi3	pintos/src/lib/arithmetic.c	/^__umoddi3 (unsigned long long n, unsigned long long d) $/;"	f	typeref:typename:unsigned long long
__vprintf	pintos/src/lib/stdio.c	/^__vprintf (const char *format, va_list args,$/;"	f	typeref:typename:void
_start	pintos/src/lib/user/entry.c	/^_start (int argc, char *argv[]) $/;"	f	typeref:typename:void
a	pintos/src/tests/threads/priority-donate-nest.c	/^    struct lock *a;$/;"	m	struct:locks	typeref:struct:lock *	file:
a_thread_func	pintos/src/tests/threads/priority-donate-multiple.c	/^a_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
a_thread_func	pintos/src/tests/threads/priority-donate-multiple.c	/^static thread_func a_thread_func;$/;"	v	typeref:typename:thread_func	file:
a_thread_func	pintos/src/tests/threads/priority-donate-multiple2.c	/^a_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
a_thread_func	pintos/src/tests/threads/priority-donate-multiple2.c	/^static thread_func a_thread_func;$/;"	v	typeref:typename:thread_func	file:
acquire1_thread_func	pintos/src/tests/threads/priority-donate-one.c	/^acquire1_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
acquire1_thread_func	pintos/src/tests/threads/priority-donate-one.c	/^static thread_func acquire1_thread_func;$/;"	v	typeref:typename:thread_func	file:
acquire2_thread_func	pintos/src/tests/threads/priority-donate-one.c	/^acquire2_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
acquire2_thread_func	pintos/src/tests/threads/priority-donate-one.c	/^static thread_func acquire2_thread_func;$/;"	v	typeref:typename:thread_func	file:
acquire_console	pintos/src/lib/kernel/console.c	/^acquire_console (void) $/;"	f	typeref:typename:void	file:
acquire_thread_func	pintos/src/tests/threads/priority-donate-lower.c	/^acquire_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
acquire_thread_func	pintos/src/tests/threads/priority-donate-lower.c	/^static thread_func acquire_thread_func;$/;"	v	typeref:typename:thread_func	file:
action	pintos/src/threads/init.c	/^  struct action $/;"	s	function:run_actions	file:
active	pintos/src/utils/squish-pty.c	/^      bool active;$/;"	m	struct:relay::pipe	typeref:typename:bool	file:
active	pintos/src/utils/squish-unix.c	/^      bool active;$/;"	m	struct:relay::pipe	typeref:typename:bool	file:
active_pd	pintos/src/userprog/pagedir.c	/^active_pd (void) $/;"	f	typeref:typename:uint32_t *	file:
add_char	pintos/src/lib/user/console.c	/^add_char (char c, void *aux_) $/;"	f	typeref:typename:void	file:
adj	pintos/src/examples/insult.c	/^char *adj[] = { "3", "4", "2", ",", "1" };$/;"	v	typeref:typename:char * []
adj1	pintos/src/examples/insult.c	/^char *adj1[] =$/;"	v	typeref:typename:char * []
adj1Loc	pintos/src/examples/insult.c	/^char adj1Loc[] =$/;"	v	typeref:typename:char[]
adj2	pintos/src/examples/insult.c	/^char *adj2[] =$/;"	v	typeref:typename:char * []
adj2Loc	pintos/src/examples/insult.c	/^char adj2Loc[] =$/;"	v	typeref:typename:char[]
adj3	pintos/src/examples/insult.c	/^char *adj3[] = { "3", "4" };$/;"	v	typeref:typename:char * []
adj3Loc	pintos/src/examples/insult.c	/^char adj3Loc[] = { 2, 0, 1, 2 };$/;"	v	typeref:typename:char[]
adjLoc	pintos/src/examples/insult.c	/^char adjLoc[] = { 3, 0, 1, 2, 5 };$/;"	v	typeref:typename:char[]
adv	pintos/src/examples/insult.c	/^char *adv[] =$/;"	v	typeref:typename:char * []
advLoc	pintos/src/examples/insult.c	/^char advLoc[] = { 8, 0, 1, 2, 3, 4, 11, 12, 18, 19 };$/;"	v	typeref:typename:char[]
afflictors	pintos/src/examples/insult.c	/^char *afflictors[] =$/;"	v	typeref:typename:char * []
afflictorsLoc	pintos/src/examples/insult.c	/^char afflictorsLoc[] = { 6, 0, 2, 4, 6, 8, 12, 16 };$/;"	v	typeref:typename:char[]
alarm_priority_thread	pintos/src/tests/threads/alarm-priority.c	/^alarm_priority_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
alarm_priority_thread	pintos/src/tests/threads/alarm-priority.c	/^static thread_func alarm_priority_thread;$/;"	v	typeref:typename:thread_func	file:
all	pintos/src/Makefile	/^all::$/;"	t
all	pintos/src/utils/Makefile	/^all: setitimer-helper squish-pty squish-unix$/;"	t
all_blocks	pintos/src/devices/block.c	/^static struct list all_blocks = LIST_INITIALIZER (all_blocks);$/;"	v	typeref:struct:list	file:
all_list	pintos/src/threads/thread.c	/^static struct list all_list;$/;"	v	typeref:struct:list	file:
allelem	pintos/src/threads/thread.h	/^    struct list_elem allelem;           \/* List element for all threads list. *\/$/;"	m	struct:thread	typeref:struct:list_elem
alloc_frame	pintos/src/threads/thread.c	/^alloc_frame (struct thread *t, size_t size) $/;"	f	typeref:typename:void *	file:
allocate_tid	pintos/src/threads/thread.c	/^allocate_tid (void) $/;"	f	typeref:typename:tid_t	file:
animal	pintos/src/examples/insult.c	/^char *animal[] =$/;"	v	typeref:typename:char * []
animalLoc	pintos/src/examples/insult.c	/^char animalLoc[] = { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };$/;"	v	typeref:typename:char[]
arc4	pintos/src/tests/arc4.h	/^struct arc4$/;"	s
arc4_crypt	pintos/src/tests/arc4.c	/^arc4_crypt (struct arc4 *arc4, void *buf_, size_t size)$/;"	f	typeref:typename:void
arc4_init	pintos/src/tests/arc4.c	/^arc4_init (struct arc4 *arc4, const void *key_, size_t size)$/;"	f	typeref:typename:void
archive_directory	pintos/src/tests/filesys/extended/tar.c	/^archive_directory (char file_name[], size_t file_name_size, int file_fd,$/;"	f	typeref:typename:bool	file:
archive_file	pintos/src/tests/filesys/extended/tar.c	/^archive_file (char file_name[], size_t file_name_size,$/;"	f	typeref:typename:bool	file:
archive_ordinary_file	pintos/src/tests/filesys/extended/tar.c	/^archive_ordinary_file (const char *file_name, int file_fd,$/;"	f	typeref:typename:bool	file:
arena	pintos/src/threads/malloc.c	/^struct arena $/;"	s	file:
arena_to_block	pintos/src/threads/malloc.c	/^arena_to_block (struct arena *a, size_t idx) $/;"	f	typeref:struct:block *	file:
argc	pintos/src/threads/init.c	/^      int argc;                         \/* # of args, including action name. *\/$/;"	m	struct:run_actions::action	typeref:typename:int	file:
args_type	pintos/src/tests/threads/tests.c	/^    enum test_args_type args_type;$/;"	m	struct:test	typeref:enum:test_args_type	file:
arrive_bridge	pintos/src/tests/threads/narrow-bridge.c	/^void arrive_bridge(enum car_priority prio UNUSED, enum car_direction dir UNUSED)$/;"	f	typeref:typename:void
ata_disk	pintos/src/devices/ide.c	/^struct ata_disk$/;"	s	file:
atoi	pintos/src/lib/stdlib.c	/^atoi (const char *s) $/;"	f	typeref:typename:int
aux	pintos/src/devices/block.c	/^    void *aux;                          \/* Extra data owned by driver. *\/$/;"	m	struct:block	typeref:typename:void *	file:
aux	pintos/src/lib/kernel/hash.h	/^    void *aux;                  \/* Auxiliary data for `hash' and `less'. *\/$/;"	m	struct:hash	typeref:typename:void *
aux	pintos/src/threads/thread.c	/^    void *aux;                  \/* Auxiliary data for function. *\/$/;"	m	struct:kernel_thread_frame	typeref:typename:void *	file:
b	pintos/src/tests/threads/priority-donate-nest.c	/^    struct lock *b;$/;"	m	struct:locks	typeref:struct:lock *	file:
b_thread_func	pintos/src/tests/threads/priority-donate-multiple.c	/^b_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
b_thread_func	pintos/src/tests/threads/priority-donate-multiple.c	/^static thread_func b_thread_func;$/;"	v	typeref:typename:thread_func	file:
b_thread_func	pintos/src/tests/threads/priority-donate-multiple2.c	/^b_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
b_thread_func	pintos/src/tests/threads/priority-donate-multiple2.c	/^static thread_func b_thread_func;$/;"	v	typeref:typename:thread_func	file:
back_link	pintos/src/userprog/tss.c	/^    uint16_t back_link, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
backspace	pintos/src/examples/shell.c	/^backspace (char **pos, char line[]) $/;"	f	typeref:typename:bool	file:
bad_action	pintos/src/examples/insult.c	/^char *bad_action[] =$/;"	v	typeref:typename:char * []
bad_actionLoc	pintos/src/examples/insult.c	/^char bad_actionLoc[] =$/;"	v	typeref:typename:char[]
bad_place	pintos/src/examples/insult.c	/^char *bad_place[] =$/;"	v	typeref:typename:char * []
bad_placeLoc	pintos/src/examples/insult.c	/^char bad_placeLoc[] = { 6, 0, 2, 3, 5, 7, 8, 9 };$/;"	v	typeref:typename:char[]
barrier	pintos/src/examples/loops.c	/^#define barrier(/;"	d	file:
barrier	pintos/src/threads/synch.h	/^#define barrier(/;"	d
base	pintos/src/lib/stdio.c	/^    int base;                   \/* Base. *\/$/;"	m	struct:integer_base	typeref:typename:int	file:
base	pintos/src/threads/palloc.c	/^    uint8_t *base;                      \/* Base of pool. *\/$/;"	m	struct:pool	typeref:typename:uint8_t *	file:
base_X	pintos/src/lib/stdio.c	/^static const struct integer_base base_X = {16, "0123456789ABCDEF", 'X', 4};$/;"	v	typeref:typename:const struct integer_base	file:
base_d	pintos/src/lib/stdio.c	/^static const struct integer_base base_d = {10, "0123456789", 0, 3};$/;"	v	typeref:typename:const struct integer_base	file:
base_o	pintos/src/lib/stdio.c	/^static const struct integer_base base_o = {8, "01234567", 0, 3};$/;"	v	typeref:typename:const struct integer_base	file:
base_x	pintos/src/lib/stdio.c	/^static const struct integer_base base_x = {16, "0123456789abcdef", 'x', 4};$/;"	v	typeref:typename:const struct integer_base	file:
bcd_to_bin	pintos/src/devices/rtc.c	/^bcd_to_bin (uint8_t x)$/;"	f	typeref:typename:int	file:
bear	pintos/src/tests/threads/bear.c	/^static void bear(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
beasties	pintos/src/examples/insult.c	/^char *beasties[] =$/;"	v	typeref:typename:char * []
beastiesLoc	pintos/src/examples/insult.c	/^char beastiesLoc[] =$/;"	v	typeref:typename:char[]
bee	pintos/src/tests/threads/bear.c	/^static void bee(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
bgrun_SRC	pintos/src/examples/Makefile	/^bgrun_SRC = bgrun.c$/;"	m
binary_search	pintos/src/lib/stdlib.c	/^binary_search (const void *key, const void *array, size_t cnt, size_t size,$/;"	f	typeref:typename:void *
bird	pintos/src/tests/threads/birds.c	/^static void bird(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
bit_cnt	pintos/src/lib/kernel/bitmap.c	/^    size_t bit_cnt;     \/* Number of bits. *\/$/;"	m	struct:bitmap	typeref:typename:size_t	file:
bit_mask	pintos/src/lib/kernel/bitmap.c	/^bit_mask (size_t bit_idx) $/;"	f	typeref:typename:elem_type	file:
bitmap	pintos/src/lib/kernel/bitmap.c	/^struct bitmap$/;"	s	file:
bitmap	pintos/src/userprog/tss.c	/^    uint16_t trace, bitmap;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
bitmap_all	pintos/src/lib/kernel/bitmap.c	/^bitmap_all (const struct bitmap *b, size_t start, size_t cnt) $/;"	f	typeref:typename:bool
bitmap_any	pintos/src/lib/kernel/bitmap.c	/^bitmap_any (const struct bitmap *b, size_t start, size_t cnt) $/;"	f	typeref:typename:bool
bitmap_buf_size	pintos/src/lib/kernel/bitmap.c	/^bitmap_buf_size (size_t bit_cnt) $/;"	f	typeref:typename:size_t
bitmap_contains	pintos/src/lib/kernel/bitmap.c	/^bitmap_contains (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f	typeref:typename:bool
bitmap_count	pintos/src/lib/kernel/bitmap.c	/^bitmap_count (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f	typeref:typename:size_t
bitmap_create	pintos/src/lib/kernel/bitmap.c	/^bitmap_create (size_t bit_cnt) $/;"	f	typeref:struct:bitmap *
bitmap_create_in_buf	pintos/src/lib/kernel/bitmap.c	/^bitmap_create_in_buf (size_t bit_cnt, void *block, size_t block_size UNUSED)$/;"	f	typeref:struct:bitmap *
bitmap_destroy	pintos/src/lib/kernel/bitmap.c	/^bitmap_destroy (struct bitmap *b) $/;"	f	typeref:typename:void
bitmap_dump	pintos/src/lib/kernel/bitmap.c	/^bitmap_dump (const struct bitmap *b) $/;"	f	typeref:typename:void
bitmap_file_size	pintos/src/lib/kernel/bitmap.c	/^bitmap_file_size (const struct bitmap *b) $/;"	f	typeref:typename:size_t
bitmap_flip	pintos/src/lib/kernel/bitmap.c	/^bitmap_flip (struct bitmap *b, size_t bit_idx) $/;"	f	typeref:typename:void
bitmap_mark	pintos/src/lib/kernel/bitmap.c	/^bitmap_mark (struct bitmap *b, size_t bit_idx) $/;"	f	typeref:typename:void
bitmap_none	pintos/src/lib/kernel/bitmap.c	/^bitmap_none (const struct bitmap *b, size_t start, size_t cnt) $/;"	f	typeref:typename:bool
bitmap_read	pintos/src/lib/kernel/bitmap.c	/^bitmap_read (struct bitmap *b, struct file *file) $/;"	f	typeref:typename:bool
bitmap_reset	pintos/src/lib/kernel/bitmap.c	/^bitmap_reset (struct bitmap *b, size_t bit_idx) $/;"	f	typeref:typename:void
bitmap_scan	pintos/src/lib/kernel/bitmap.c	/^bitmap_scan (const struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f	typeref:typename:size_t
bitmap_scan_and_flip	pintos/src/lib/kernel/bitmap.c	/^bitmap_scan_and_flip (struct bitmap *b, size_t start, size_t cnt, bool value)$/;"	f	typeref:typename:size_t
bitmap_set	pintos/src/lib/kernel/bitmap.c	/^bitmap_set (struct bitmap *b, size_t idx, bool value) $/;"	f	typeref:typename:void
bitmap_set_all	pintos/src/lib/kernel/bitmap.c	/^bitmap_set_all (struct bitmap *b, bool value) $/;"	f	typeref:typename:void
bitmap_set_multiple	pintos/src/lib/kernel/bitmap.c	/^bitmap_set_multiple (struct bitmap *b, size_t start, size_t cnt, bool value) $/;"	f	typeref:typename:void
bitmap_size	pintos/src/lib/kernel/bitmap.c	/^bitmap_size (const struct bitmap *b)$/;"	f	typeref:typename:size_t
bitmap_test	pintos/src/lib/kernel/bitmap.c	/^bitmap_test (const struct bitmap *b, size_t idx) $/;"	f	typeref:typename:bool
bitmap_write	pintos/src/lib/kernel/bitmap.c	/^bitmap_write (const struct bitmap *b, struct file *file)$/;"	f	typeref:typename:bool
bits	pintos/src/lib/kernel/bitmap.c	/^    elem_type *bits;    \/* Elements that represent bits. *\/$/;"	m	struct:bitmap	typeref:typename:elem_type *	file:
block	pintos/src/devices/block.c	/^struct block$/;"	s	file:
block	pintos/src/devices/partition.c	/^    struct block *block;                \/* Underlying block device. *\/$/;"	m	struct:partition	typeref:struct:block *	file:
block	pintos/src/threads/malloc.c	/^struct block $/;"	s	file:
block_by_role	pintos/src/devices/block.c	/^static struct block *block_by_role[BLOCK_ROLE_CNT];$/;"	v	typeref:struct:block * []	file:
block_first	pintos/src/devices/block.c	/^block_first (void)$/;"	f	typeref:struct:block *
block_get_by_name	pintos/src/devices/block.c	/^block_get_by_name (const char *name)$/;"	f	typeref:struct:block *
block_get_role	pintos/src/devices/block.c	/^block_get_role (enum block_type role)$/;"	f	typeref:struct:block *
block_name	pintos/src/devices/block.c	/^block_name (struct block *block)$/;"	f	typeref:typename:const char *
block_next	pintos/src/devices/block.c	/^block_next (struct block *block)$/;"	f	typeref:struct:block *
block_operations	pintos/src/devices/block.h	/^struct block_operations$/;"	s
block_print_stats	pintos/src/devices/block.c	/^block_print_stats (void)$/;"	f	typeref:typename:void
block_read	pintos/src/devices/block.c	/^block_read (struct block *block, block_sector_t sector, void *buffer)$/;"	f	typeref:typename:void
block_register	pintos/src/devices/block.c	/^block_register (const char *name, enum block_type type,$/;"	f	typeref:struct:block *
block_sector_t	pintos/src/devices/block.h	/^typedef uint32_t block_sector_t;$/;"	t	typeref:typename:uint32_t
block_set_role	pintos/src/devices/block.c	/^block_set_role (enum block_type role, struct block *block)$/;"	f	typeref:typename:void
block_size	pintos/src/devices/block.c	/^block_size (struct block *block)$/;"	f	typeref:typename:block_sector_t
block_size	pintos/src/threads/malloc.c	/^    size_t block_size;          \/* Size of each element in bytes. *\/$/;"	m	struct:desc	typeref:typename:size_t	file:
block_size	pintos/src/threads/malloc.c	/^block_size (void *block) $/;"	f	typeref:typename:size_t	file:
block_thread	pintos/src/tests/threads/mlfqs-block.c	/^block_thread (void *lock_) $/;"	f	typeref:typename:void	file:
block_to_arena	pintos/src/threads/malloc.c	/^block_to_arena (struct block *b)$/;"	f	typeref:struct:arena *	file:
block_type	pintos/src/devices/block.c	/^block_type (struct block *block)$/;"	f	typeref:enum:block_type
block_type	pintos/src/devices/block.h	/^enum block_type$/;"	g
block_type_name	pintos/src/devices/block.c	/^block_type_name (enum block_type type)$/;"	f	typeref:typename:const char *
block_write	pintos/src/devices/block.c	/^block_write (struct block *block, block_sector_t sector, const void *buffer)$/;"	f	typeref:typename:void
blocks_per_arena	pintos/src/threads/malloc.c	/^    size_t blocks_per_arena;    \/* Number of blocks in an arena. *\/$/;"	m	struct:desc	typeref:typename:size_t	file:
body_parts	pintos/src/examples/insult.c	/^char *body_parts[] =$/;"	v	typeref:typename:char * []
body_partsLoc	pintos/src/examples/insult.c	/^char body_partsLoc[] = { 6, 0, 1, 2, 3, 4, 5, 6 };$/;"	v	typeref:typename:char[]
bool	pintos/src/lib/stdbool.h	/^#define bool	/;"	d
bootable	pintos/src/devices/partition.c	/^      uint8_t bootable;         \/* 0x00=not bootable, 0x80=bootable. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint8_t	file:
bsearch	pintos/src/lib/stdlib.c	/^bsearch (const void *key, const void *array, size_t cnt,$/;"	f	typeref:typename:void *
bss_init	pintos/src/threads/init.c	/^bss_init (void) $/;"	f	typeref:typename:void	file:
bubsort_SRC	pintos/src/examples/Makefile	/^bubsort_SRC = bubsort.c$/;"	m
bucket	pintos/src/lib/kernel/hash.h	/^    struct list *bucket;        \/* Current bucket. *\/$/;"	m	struct:hash_iterator	typeref:struct:list *
bucket_cnt	pintos/src/lib/kernel/hash.h	/^    size_t bucket_cnt;          \/* Number of buckets, a power of 2. *\/$/;"	m	struct:hash	typeref:typename:size_t
buckets	pintos/src/lib/kernel/hash.h	/^    struct list *buckets;       \/* Array of `bucket_cnt' lists. *\/$/;"	m	struct:hash	typeref:struct:list *
buf	pintos/src/devices/intq.h	/^    uint8_t buf[INTQ_BUFSIZE];  \/* Buffer. *\/$/;"	m	struct:intq	typeref:typename:uint8_t[]
buf	pintos/src/lib/user/console.c	/^    char buf[64];       \/* Character buffer. *\/$/;"	m	struct:vhprintf_aux	typeref:typename:char[64]	file:
buf	pintos/src/tests/filesys/base/child-syn-read.c	/^static char buf[BUF_SIZE];$/;"	v	typeref:typename:char[]	file:
buf	pintos/src/tests/filesys/base/child-syn-wrt.c	/^char buf[BUF_SIZE];$/;"	v	typeref:typename:char[]
buf	pintos/src/tests/filesys/base/syn-read.c	/^static char buf[BUF_SIZE];$/;"	v	typeref:typename:char[]	file:
buf	pintos/src/tests/filesys/extended/grow-file-size.c	/^static char buf[2134];$/;"	v	typeref:typename:char[2134]	file:
buf	pintos/src/tests/filesys/extended/grow-sparse.c	/^static char buf[76543];$/;"	v	typeref:typename:char[76543]	file:
buf	pintos/src/tests/filesys/extended/grow-tell.c	/^static char buf[2134];$/;"	v	typeref:typename:char[2134]	file:
buf	pintos/src/tests/filesys/extended/syn-rw.c	/^char buf[BUF_SIZE];$/;"	v	typeref:typename:char[]
buf	pintos/src/tests/vm/child-linear.c	/^static char buf[SIZE];$/;"	v	typeref:typename:char[]	file:
buf	pintos/src/tests/vm/child-sort.c	/^unsigned char buf[128 * 1024];$/;"	v	typeref:typename:unsigned char[]
buf	pintos/src/tests/vm/mmap-shuffle.c	/^static char *buf = (char *) 0x10000000;$/;"	v	typeref:typename:char *	file:
buf	pintos/src/tests/vm/page-linear.c	/^static char buf[SIZE];$/;"	v	typeref:typename:char[]	file:
buf	pintos/src/tests/vm/page-shuffle.c	/^static char buf[SIZE];$/;"	v	typeref:typename:char[]	file:
buf	pintos/src/utils/squish-pty.c	/^      char buf[BUFSIZ];$/;"	m	struct:relay::pipe	typeref:typename:char[]	file:
buf	pintos/src/utils/squish-unix.c	/^      char buf[BUFSIZ];$/;"	m	struct:relay::pipe	typeref:typename:char[]	file:
buf1	pintos/src/tests/filesys/base/syn-remove.c	/^char buf1[1234];$/;"	v	typeref:typename:char[1234]
buf1	pintos/src/tests/filesys/base/syn-write.c	/^char buf1[BUF_SIZE];$/;"	v	typeref:typename:char[]
buf1	pintos/src/tests/filesys/extended/child-syn-rw.c	/^static char buf1[BUF_SIZE];$/;"	v	typeref:typename:char[]	file:
buf1	pintos/src/tests/vm/page-merge-seq.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v	typeref:typename:unsigned char[]
buf1	pintos/src/tests/vm/parallel-merge.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v	typeref:typename:unsigned char[]
buf2	pintos/src/tests/filesys/base/syn-remove.c	/^char buf2[1234];$/;"	v	typeref:typename:char[1234]
buf2	pintos/src/tests/filesys/base/syn-write.c	/^char buf2[BUF_SIZE];$/;"	v	typeref:typename:char[]
buf2	pintos/src/tests/filesys/extended/child-syn-rw.c	/^static char buf2[BUF_SIZE];$/;"	v	typeref:typename:char[]	file:
buf2	pintos/src/tests/vm/page-merge-seq.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v	typeref:typename:unsigned char[]
buf2	pintos/src/tests/vm/parallel-merge.c	/^unsigned char buf1[DATA_SIZE], buf2[DATA_SIZE];$/;"	v	typeref:typename:unsigned char[]
buf_a	pintos/src/tests/filesys/extended/grow-two-files.c	/^static char buf_a[FILE_SIZE];$/;"	v	typeref:typename:char[]	file:
buf_b	pintos/src/tests/filesys/extended/grow-two-files.c	/^static char buf_b[FILE_SIZE];$/;"	v	typeref:typename:char[]	file:
buffer	pintos/src/devices/input.c	/^static struct intq buffer;$/;"	v	typeref:struct:intq	file:
busy_wait	pintos/src/devices/timer.c	/^busy_wait (int64_t loops) $/;"	f	typeref:typename:void NO_INLINE	file:
byte_cnt	pintos/src/lib/kernel/bitmap.c	/^byte_cnt (size_t bit_cnt)$/;"	f	typeref:typename:size_t	file:
byte_to_sector	pintos/src/filesys/inode.c	/^byte_to_sector (const struct inode *inode, off_t pos) $/;"	f	typeref:typename:block_sector_t	file:
bytes_to_sectors	pintos/src/filesys/inode.c	/^bytes_to_sectors (off_t size)$/;"	f	typeref:typename:size_t	file:
c_thread_func	pintos/src/tests/threads/priority-donate-multiple2.c	/^c_thread_func (void *a_ UNUSED) $/;"	f	typeref:typename:void	file:
c_thread_func	pintos/src/tests/threads/priority-donate-multiple2.c	/^static thread_func c_thread_func;$/;"	v	typeref:typename:thread_func	file:
calc_SRC	pintos/src/examples/Makefile	/^calc_SRC = calc.c$/;"	m
calculate_chksum	pintos/src/lib/ustar.c	/^calculate_chksum (const struct ustar_header *h)$/;"	f	typeref:typename:unsigned int	file:
call_test	pintos/src/tests/threads/tests.c	/^void call_test(const struct test* t, const char* name_args)$/;"	f	typeref:typename:void
calloc	pintos/src/threads/malloc.c	/^calloc (size_t a, size_t b) $/;"	f	typeref:typename:void *
caps_lock	pintos/src/devices/kbd.c	/^static bool caps_lock;$/;"	v	typeref:typename:bool	file:
car_direction	pintos/src/tests/threads/narrow-bridge.h	/^enum car_direction$/;"	g
car_emergency	pintos/src/tests/threads/narrow-bridge.h	/^   car_emergency = 1    \/\/ High priority car$/;"	e	enum:car_priority
car_normal	pintos/src/tests/threads/narrow-bridge.h	/^   car_normal = 0,     \/\/ Low priority car$/;"	e	enum:car_priority
car_priority	pintos/src/tests/threads/narrow-bridge.h	/^enum car_priority$/;"	g
carriage	pintos/src/tests/threads/rolcoast.c	/^static void carriage(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
cat_SRC	pintos/src/examples/Makefile	/^cat_SRC = cat.c$/;"	m
changing_thread	pintos/src/tests/threads/priority-change.c	/^changing_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
changing_thread	pintos/src/tests/threads/priority-change.c	/^static thread_func changing_thread;$/;"	v	typeref:typename:thread_func	file:
channel	pintos/src/devices/ide.c	/^    struct channel *channel;    \/* Channel that disk is attached to. *\/$/;"	m	struct:ata_disk	typeref:struct:channel *	file:
channel	pintos/src/devices/ide.c	/^struct channel$/;"	s	file:
channels	pintos/src/devices/ide.c	/^static struct channel channels[CHANNEL_CNT];$/;"	v	typeref:struct:channel[]	file:
char_cnt	pintos/src/lib/user/console.c	/^    int char_cnt;       \/* Total characters written so far. *\/$/;"	m	struct:vhprintf_aux	typeref:typename:int	file:
chars	pintos/src/devices/kbd.c	/^    const char *chars;          \/* chars[0] has scancode first_scancode,$/;"	m	struct:keymap	typeref:typename:const char *	file:
chdir	pintos/src/lib/user/syscall.c	/^chdir (const char *dir)$/;"	f	typeref:typename:bool
check_args_count	pintos/src/tests/threads/tests.c	/^static int check_args_count(unsigned int need, unsigned int cnt)$/;"	f	typeref:typename:int	file:
check_device_type	pintos/src/devices/ide.c	/^check_device_type (struct ata_disk *d) $/;"	f	typeref:typename:bool	file:
check_file	pintos/src/tests/lib.c	/^check_file (const char *file_name, const void *buf, size_t size) $/;"	f	typeref:typename:void
check_file_handle	pintos/src/tests/lib.c	/^check_file_handle (int fd,$/;"	f	typeref:typename:void
check_file_size	pintos/src/tests/filesys/extended/grow-file-size.c	/^check_file_size (int fd, long ofs) $/;"	f	typeref:typename:void	file:
check_sector	pintos/src/devices/block.c	/^check_sector (struct block *block, block_sector_t sector)$/;"	f	typeref:typename:void	file:
check_tell	pintos/src/tests/filesys/extended/grow-tell.c	/^check_tell (int fd, long ofs) $/;"	f	typeref:typename:void	file:
checkf	pintos/src/tests/internal/stdio.c	/^checkf (const char *expect, const char *format, ...) $/;"	f	typeref:typename:void	file:
checkseq_SRC	pintos/src/examples/Makefile	/^checkseq_SRC = checkseq.c$/;"	m
chick	pintos/src/tests/threads/birds.c	/^static void chick(void* arg)$/;"	f	typeref:typename:void	file:
child_termination_mode	pintos/src/tests/userprog/no-vm/multi-oom.c	/^enum child_termination_mode { RECURSE, CRASH };$/;"	g	file:
chksum	pintos/src/lib/ustar.c	/^    char chksum[8];             \/* Sum of octets in header as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
cksum	pintos/src/tests/cksum.c	/^cksum (const void *b_, size_t n)$/;"	f	typeref:typename:unsigned long
clean	pintos/src/Makefile	/^clean::$/;"	t
clean	pintos/src/utils/Makefile	/^clean: $/;"	t
clear_row	pintos/src/devices/vga.c	/^clear_row (size_t y) $/;"	f	typeref:typename:void	file:
client	pintos/src/tests/threads/hair.c	/^static void client(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
close	pintos/src/lib/user/syscall.c	/^close (int fd)$/;"	f	typeref:typename:void
cls	pintos/src/devices/vga.c	/^cls (void)$/;"	f	typeref:typename:void	file:
cmos_read	pintos/src/devices/rtc.c	/^cmos_read (uint8_t index)$/;"	f	typeref:typename:uint8_t	file:
cmp_SRC	pintos/src/examples/Makefile	/^cmp_SRC = cmp.c$/;"	m
compare_bytes	pintos/src/tests/lib.c	/^compare_bytes (const void *read_data_, const void *expected_data_, size_t size,$/;"	f	typeref:typename:void
compare_ints	pintos/src/tests/internal/stdlib.c	/^compare_ints (const void *a_, const void *b_) $/;"	f	typeref:typename:int	file:
compare_thunk	pintos/src/lib/stdlib.c	/^compare_thunk (const void *a, const void *b, void *aux) $/;"	f	typeref:typename:int	file:
completion_wait	pintos/src/devices/ide.c	/^    struct semaphore completion_wait;   \/* Up'd by interrupt handler. *\/$/;"	m	struct:channel	typeref:struct:semaphore	file:
component	pintos/src/tests/threads/smokers.c	/^enum component$/;"	g	file:
cond_broadcast	pintos/src/threads/synch.c	/^cond_broadcast (struct condition *cond, struct lock *lock) $/;"	f	typeref:typename:void
cond_init	pintos/src/threads/synch.c	/^cond_init (struct condition *cond)$/;"	f	typeref:typename:void
cond_signal	pintos/src/threads/synch.c	/^cond_signal (struct condition *cond, struct lock *lock UNUSED) $/;"	f	typeref:typename:void
cond_wait	pintos/src/threads/synch.c	/^cond_wait (struct condition *cond, struct lock *lock) $/;"	f	typeref:typename:void
condition	pintos/src/examples/insult.c	/^char *condition[] =$/;"	v	typeref:typename:char * []
condition	pintos/src/tests/threads/priority-condvar.c	/^static struct condition condition;$/;"	v	typeref:struct:condition	file:
condition	pintos/src/threads/synch.h	/^struct condition $/;"	s
conditionLoc	pintos/src/examples/insult.c	/^char conditionLoc[] = { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };$/;"	v	typeref:typename:char[]
console_init	pintos/src/lib/kernel/console.c	/^console_init (void) $/;"	f	typeref:typename:void
console_lock	pintos/src/lib/kernel/console.c	/^static struct lock console_lock;$/;"	v	typeref:struct:lock	file:
console_lock_depth	pintos/src/lib/kernel/console.c	/^static int console_lock_depth;$/;"	v	typeref:typename:int	file:
console_locked_by_current_thread	pintos/src/lib/kernel/console.c	/^console_locked_by_current_thread (void) $/;"	f	typeref:typename:bool	file:
console_panic	pintos/src/lib/kernel/console.c	/^console_panic (void) $/;"	f	typeref:typename:void
console_print_stats	pintos/src/lib/kernel/console.c	/^console_print_stats (void) $/;"	f	typeref:typename:void
consume_some_resources	pintos/src/tests/userprog/no-vm/multi-oom.c	/^consume_some_resources (void)$/;"	f	typeref:typename:void	file:
consume_some_resources_and_die	pintos/src/tests/userprog/no-vm/multi-oom.c	/^consume_some_resources_and_die (int seed)$/;"	f	typeref:typename:int NO_INLINE	file:
copy_string_across_boundary	pintos/src/tests/userprog/boundary.c	/^copy_string_across_boundary (const char *src) $/;"	f	typeref:typename:char *
cp_SRC	pintos/src/examples/Makefile	/^cp_SRC = cp.c$/;"	m
cr3	pintos/src/userprog/tss.c	/^    uint32_t cr3;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
crctab	pintos/src/tests/cksum.c	/^static unsigned long crctab[] = {$/;"	v	typeref:typename:unsigned long[]	file:
create	pintos/src/lib/user/syscall.c	/^create (const char *file, unsigned initial_size)$/;"	f	typeref:typename:bool
create_vehicles	pintos/src/tests/threads/narrow-bridge-test.c	/^void create_vehicles(unsigned int count, thread_func* func)$/;"	f	typeref:typename:void
cross_bridge	pintos/src/tests/threads/narrow-bridge-test.c	/^void cross_bridge(enum car_priority prio, enum car_direction dir)$/;"	f	typeref:typename:void
cs	pintos/src/threads/interrupt.h	/^    uint16_t cs, :16;           \/* Code segment for eip. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
cs	pintos/src/userprog/tss.c	/^    uint16_t cs, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
cscope	pintos/src/Makefile	/^cscope:: cscope.files$/;"	t
cscope.files	pintos/src/Makefile	/^cscope.files::$/;"	t
cur	pintos/src/threads/switch.h	/^    struct thread *cur;         \/* 20: switch_threads()'s CUR argument. *\/$/;"	m	struct:switch_threads_frame	typeref:struct:thread *
curse	pintos/src/examples/insult.c	/^char *curse[] =$/;"	v	typeref:typename:char * []
curseLoc	pintos/src/examples/insult.c	/^char curseLoc[] = { 4, 0, 3, 7, 13, 20 };$/;"	v	typeref:typename:char[]
cx	pintos/src/devices/vga.c	/^static size_t cx, cy;$/;"	v	typeref:typename:size_t	file:
cy	pintos/src/devices/vga.c	/^static size_t cx, cy;$/;"	v	typeref:typename:size_t	file:
daGLoc	pintos/src/examples/insult.c	/^char *daGLoc[27];$/;"	v	typeref:typename:char * [27]
daGrammar	pintos/src/examples/insult.c	/^char **daGrammar[27];$/;"	v	typeref:typename:char ** [27]
data	pintos/src/filesys/inode.c	/^    struct inode_disk data;             \/* Inode content. *\/$/;"	m	struct:inode	typeref:struct:inode_disk	file:
dead_child_fd	pintos/src/utils/squish-pty.c	/^static int dead_child_fd;$/;"	v	typeref:typename:int	file:
debug_backtrace	pintos/src/lib/debug.c	/^debug_backtrace (void) $/;"	f	typeref:typename:void
debug_backtrace_all	pintos/src/lib/kernel/debug.c	/^debug_backtrace_all (void)$/;"	f	typeref:typename:void
debug_panic	pintos/src/lib/kernel/debug.c	/^debug_panic (const char *file, int line, const char *function,$/;"	f	typeref:typename:void
debug_panic	pintos/src/lib/user/debug.c	/^debug_panic (const char *file, int line, const char *function,$/;"	f	typeref:typename:void
deny_write	pintos/src/filesys/file.c	/^    bool deny_write;            \/* Has file_deny_write() been called? *\/$/;"	m	struct:file	typeref:typename:bool	file:
deny_write_cnt	pintos/src/filesys/inode.c	/^    int deny_write_cnt;                 \/* 0: writes ok, >0: deny writes. *\/$/;"	m	struct:inode	typeref:typename:int	file:
desc	pintos/src/threads/malloc.c	/^    struct desc *desc;          \/* Owning descriptor, null for big block. *\/$/;"	m	struct:arena	typeref:struct:desc *	file:
desc	pintos/src/threads/malloc.c	/^struct desc$/;"	s	file:
desc_cnt	pintos/src/threads/malloc.c	/^static size_t desc_cnt;         \/* Number of descriptors. *\/$/;"	v	typeref:typename:size_t	file:
descramble_ata_string	pintos/src/devices/ide.c	/^descramble_ata_string (char *string, int size) $/;"	f	typeref:typename:char *	file:
descs	pintos/src/threads/malloc.c	/^static struct desc descs[10];   \/* Descriptors. *\/$/;"	v	typeref:struct:desc[10]	file:
dev_no	pintos/src/devices/ide.c	/^    int dev_no;                 \/* Device 0 or 1 for master or slave. *\/$/;"	m	struct:ata_disk	typeref:typename:int	file:
devices	pintos/src/devices/ide.c	/^    struct ata_disk devices[2];     \/* The devices on this channel. *\/$/;"	m	struct:channel	typeref:struct:ata_disk[2]	file:
devmajor	pintos/src/lib/ustar.c	/^    char devmajor[8];           \/* Device major number as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
devminor	pintos/src/lib/ustar.c	/^    char devminor[8];           \/* Device minor number as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
digits	pintos/src/lib/stdio.c	/^    const char *digits;         \/* Collection of digits. *\/$/;"	m	struct:integer_base	typeref:typename:const char *	file:
digset_SRC	pintos/src/examples/Makefile	/^digset_SRC = digset.c$/;"	m
dir	pintos/src/filesys/directory.c	/^struct dir $/;"	s	file:
dir_add	pintos/src/filesys/directory.c	/^dir_add (struct dir *dir, const char *name, block_sector_t inode_sector)$/;"	f	typeref:typename:bool
dir_close	pintos/src/filesys/directory.c	/^dir_close (struct dir *dir) $/;"	f	typeref:typename:void
dir_create	pintos/src/filesys/directory.c	/^dir_create (block_sector_t sector, size_t entry_cnt)$/;"	f	typeref:typename:bool
dir_entry	pintos/src/filesys/directory.c	/^struct dir_entry $/;"	s	file:
dir_get_inode	pintos/src/filesys/directory.c	/^dir_get_inode (struct dir *dir) $/;"	f	typeref:struct:inode *
dir_left	pintos/src/tests/threads/narrow-bridge.h	/^   dir_left = 0,        \/\/ Going from left -> right$/;"	e	enum:car_direction
dir_lookup	pintos/src/filesys/directory.c	/^dir_lookup (const struct dir *dir, const char *name,$/;"	f	typeref:typename:bool
dir_open	pintos/src/filesys/directory.c	/^dir_open (struct inode *inode) $/;"	f	typeref:struct:dir *
dir_open_root	pintos/src/filesys/directory.c	/^dir_open_root (void)$/;"	f	typeref:struct:dir *
dir_readdir	pintos/src/filesys/directory.c	/^dir_readdir (struct dir *dir, char name[NAME_MAX + 1])$/;"	f	typeref:typename:bool
dir_remove	pintos/src/filesys/directory.c	/^dir_remove (struct dir *dir, const char *name) $/;"	f	typeref:typename:bool
dir_reopen	pintos/src/filesys/directory.c	/^dir_reopen (struct dir *dir) $/;"	f	typeref:struct:dir *
dir_right	pintos/src/tests/threads/narrow-bridge.h	/^   dir_right = 1        \/\/ Going from right -> left$/;"	e	enum:car_direction
distclean	pintos/src/Makefile	/^distclean:: clean$/;"	t
divl	pintos/src/lib/arithmetic.c	/^divl (uint64_t n, uint32_t d)$/;"	f	typeref:typename:uint32_t	file:
do_compare	pintos/src/lib/stdlib.c	/^do_compare (unsigned char *array, size_t a_idx, size_t b_idx, size_t size,$/;"	f	typeref:typename:int	file:
do_format	pintos/src/filesys/filesys.c	/^do_format (void)$/;"	f	typeref:typename:void	file:
do_mkdir	pintos/src/tests/filesys/extended/mk-tree.c	/^do_mkdir (const char *format, ...) $/;"	f	typeref:typename:void	file:
do_remove	pintos/src/tests/filesys/extended/dir-rm-tree.c	/^do_remove (const char *format, ...) $/;"	f	typeref:typename:void	file:
do_swap	pintos/src/lib/stdlib.c	/^do_swap (unsigned char *array, size_t a_idx, size_t b_idx, size_t size)$/;"	f	typeref:typename:void	file:
do_touch	pintos/src/tests/filesys/extended/mk-tree.c	/^do_touch (const char *format, ...)$/;"	f	typeref:typename:void	file:
do_write	pintos/src/tests/filesys/extended/tar.c	/^do_write (int fd, const char *buffer, int size, bool *write_error) $/;"	f	typeref:typename:bool	file:
donor_thread_func	pintos/src/tests/threads/priority-donate-chain.c	/^donor_thread_func (void *locks_) $/;"	f	typeref:typename:void	file:
donor_thread_func	pintos/src/tests/threads/priority-donate-chain.c	/^static thread_func donor_thread_func;$/;"	v	typeref:typename:thread_func	file:
ds	pintos/src/threads/interrupt.h	/^    uint16_t ds, :16;           \/* Saved DS segment register. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
ds	pintos/src/userprog/tss.c	/^    uint16_t ds, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
dst	pintos/src/tests/userprog/boundary.c	/^static char dst[8192];$/;"	v	typeref:typename:char[8192]	file:
duration	pintos/src/tests/threads/alarm-wait.c	/^    int duration;               \/* Number of ticks to sleep. *\/$/;"	m	struct:sleep_thread	typeref:typename:int	file:
e_ehsize	pintos/src/userprog/process.c	/^    Elf32_Half    e_ehsize;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_entry	pintos/src/userprog/process.c	/^    Elf32_Addr    e_entry;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Addr	file:
e_flags	pintos/src/userprog/process.c	/^    Elf32_Word    e_flags;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Word	file:
e_ident	pintos/src/userprog/process.c	/^    unsigned char e_ident[16];$/;"	m	struct:Elf32_Ehdr	typeref:typename:unsigned char[16]	file:
e_machine	pintos/src/userprog/process.c	/^    Elf32_Half    e_machine;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_phentsize	pintos/src/userprog/process.c	/^    Elf32_Half    e_phentsize;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_phnum	pintos/src/userprog/process.c	/^    Elf32_Half    e_phnum;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_phoff	pintos/src/userprog/process.c	/^    Elf32_Off     e_phoff;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Off	file:
e_shentsize	pintos/src/userprog/process.c	/^    Elf32_Half    e_shentsize;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_shnum	pintos/src/userprog/process.c	/^    Elf32_Half    e_shnum;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_shoff	pintos/src/userprog/process.c	/^    Elf32_Off     e_shoff;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Off	file:
e_shstrndx	pintos/src/userprog/process.c	/^    Elf32_Half    e_shstrndx;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_type	pintos/src/userprog/process.c	/^    Elf32_Half    e_type;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Half	file:
e_version	pintos/src/userprog/process.c	/^    Elf32_Word    e_version;$/;"	m	struct:Elf32_Ehdr	typeref:typename:Elf32_Word	file:
eax	pintos/src/threads/interrupt.h	/^    uint32_t eax;               \/* Saved EAX. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
eax	pintos/src/userprog/tss.c	/^    uint32_t eax, ecx, edx, ebx;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
ebp	pintos/src/threads/interrupt.h	/^    uint32_t ebp;               \/* Saved EBP. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
ebp	pintos/src/threads/switch.h	/^    uint32_t ebp;               \/*  8: Saved %ebp. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:uint32_t
ebp	pintos/src/userprog/tss.c	/^    uint32_t esp, ebp, esi, edi;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
ebx	pintos/src/threads/interrupt.h	/^    uint32_t ebx;               \/* Saved EBX. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
ebx	pintos/src/threads/switch.h	/^    uint32_t ebx;               \/* 12: Saved %ebx. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:uint32_t
ebx	pintos/src/userprog/tss.c	/^    uint32_t eax, ecx, edx, ebx;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
echo_SRC	pintos/src/examples/Makefile	/^echo_SRC = echo.c$/;"	m
ecx	pintos/src/threads/interrupt.h	/^    uint32_t ecx;               \/* Saved ECX. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
ecx	pintos/src/userprog/tss.c	/^    uint32_t eax, ecx, edx, ebx;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
edi	pintos/src/threads/interrupt.h	/^    uint32_t edi;               \/* Saved EDI. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
edi	pintos/src/threads/switch.h	/^    uint32_t edi;               \/*  0: Saved %edi. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:uint32_t
edi	pintos/src/userprog/tss.c	/^    uint32_t esp, ebp, esi, edi;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
editor_SRC	pintos/src/examples/Makefile	/^editor_SRC = editor.c$/;"	m
edx	pintos/src/threads/interrupt.h	/^    uint32_t edx;               \/* Saved EDX. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
edx	pintos/src/userprog/tss.c	/^    uint32_t eax, ecx, edx, ebx;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
eflags	pintos/src/threads/interrupt.h	/^    uint32_t eflags;            \/* Saved CPU flags. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
eflags	pintos/src/userprog/tss.c	/^    uint32_t eflags;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
eip	pintos/src/threads/interrupt.h	/^    void (*eip) (void);         \/* Next instruction to execute. *\/$/;"	m	struct:intr_frame	typeref:typename:void (*)(void)
eip	pintos/src/threads/switch.h	/^    void (*eip) (void);         \/* 16: Return address. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:void (*)(void)
eip	pintos/src/threads/switch.h	/^    void (*eip) (void);$/;"	m	struct:switch_entry_frame	typeref:typename:void (*)(void)
eip	pintos/src/threads/thread.c	/^    void *eip;                  \/* Return address. *\/$/;"	m	struct:kernel_thread_frame	typeref:typename:void *	file:
eip	pintos/src/userprog/tss.c	/^    void (*eip) (void);$/;"	m	struct:tss	typeref:typename:void (*)(void)	file:
elem	pintos/src/filesys/inode.c	/^    struct list_elem elem;              \/* Element in inode list. *\/$/;"	m	struct:inode	typeref:struct:list_elem	file:
elem	pintos/src/lib/kernel/hash.h	/^    struct hash_elem *elem;     \/* Current hash element in current bucket. *\/$/;"	m	struct:hash_iterator	typeref:struct:hash_elem *
elem	pintos/src/tests/internal/list.c	/^    struct list_elem elem;      \/* List element. *\/$/;"	m	struct:value	typeref:struct:list_elem	file:
elem	pintos/src/threads/synch.c	/^    struct list_elem elem;              \/* List element. *\/$/;"	m	struct:semaphore_elem	typeref:struct:list_elem	file:
elem	pintos/src/threads/thread.h	/^    struct list_elem elem;              \/* List element. *\/$/;"	m	struct:thread	typeref:struct:list_elem
elem_cnt	pintos/src/lib/kernel/bitmap.c	/^elem_cnt (size_t bit_cnt)$/;"	f	typeref:typename:size_t	file:
elem_cnt	pintos/src/lib/kernel/hash.h	/^    size_t elem_cnt;            \/* Number of elements in table. *\/$/;"	m	struct:hash	typeref:typename:size_t
elem_idx	pintos/src/lib/kernel/bitmap.c	/^elem_idx (size_t bit_idx) $/;"	f	typeref:typename:size_t	file:
elem_type	pintos/src/lib/kernel/bitmap.c	/^typedef unsigned long elem_type;$/;"	t	typeref:typename:unsigned long	file:
end_chs	pintos/src/devices/partition.c	/^      uint8_t end_chs[3];       \/* Encoded ending cylinder, head, sector. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint8_t[3]	file:
error_code	pintos/src/threads/interrupt.h	/^    uint32_t error_code;        \/* Error code. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
es	pintos/src/threads/interrupt.h	/^    uint16_t es, :16;           \/* Saved ES segment register. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
es	pintos/src/userprog/tss.c	/^    uint16_t es, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
esi	pintos/src/threads/interrupt.h	/^    uint32_t esi;               \/* Saved ESI. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
esi	pintos/src/threads/switch.h	/^    uint32_t esi;               \/*  4: Saved %esi. *\/$/;"	m	struct:switch_threads_frame	typeref:typename:uint32_t
esi	pintos/src/userprog/tss.c	/^    uint32_t esp, ebp, esi, edi;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
esp	pintos/src/threads/interrupt.h	/^    void *esp;                  \/* Saved stack pointer. *\/$/;"	m	struct:intr_frame	typeref:typename:void *
esp	pintos/src/userprog/tss.c	/^    uint32_t esp, ebp, esi, edi;$/;"	m	struct:tss	typeref:typename:uint32_t	file:
esp0	pintos/src/userprog/tss.c	/^    void *esp0;                         \/* Ring 0 stack virtual address. *\/$/;"	m	struct:tss	typeref:typename:void *	file:
esp1	pintos/src/userprog/tss.c	/^    void *esp1;$/;"	m	struct:tss	typeref:typename:void *	file:
esp2	pintos/src/userprog/tss.c	/^    void *esp2;$/;"	m	struct:tss	typeref:typename:void *	file:
esp_dummy	pintos/src/threads/interrupt.h	/^    uint32_t esp_dummy;         \/* Not used. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
exception_init	pintos/src/userprog/exception.c	/^exception_init (void) $/;"	f	typeref:typename:void
exception_print_stats	pintos/src/userprog/exception.c	/^exception_print_stats (void) $/;"	f	typeref:typename:void
exec	pintos/src/lib/user/syscall.c	/^exec (const char *file)$/;"	f	typeref:typename:pid_t
exec_children	pintos/src/tests/lib.c	/^exec_children (const char *child_name, pid_t pids[], size_t child_cnt) $/;"	f	typeref:typename:void
exit	pintos/src/lib/user/syscall.c	/^exit (int status)$/;"	f	typeref:typename:void
exit_bridge	pintos/src/tests/threads/narrow-bridge.c	/^void exit_bridge(enum car_priority prio UNUSED, enum car_direction dir UNUSED)$/;"	f	typeref:typename:void
expand	pintos/src/examples/insult.c	/^expand (int num, char **grammar[], char *location[], int handle)$/;"	f	typeref:typename:void
expecting_interrupt	pintos/src/devices/ide.c	/^    bool expecting_interrupt;   \/* True if an interrupt is expected, false if$/;"	m	struct:channel	typeref:typename:bool	file:
fail	pintos/src/tests/lib.c	/^fail (const char *format, ...) $/;"	f	typeref:typename:void
fail	pintos/src/tests/threads/tests.c	/^fail (const char *format, ...) $/;"	f	typeref:typename:void
fail_io	pintos/src/utils/squish-pty.c	/^fail_io (const char *msg, ...)$/;"	f	typeref:typename:void	file:
fail_io	pintos/src/utils/squish-unix.c	/^fail_io (const char *msg, ...)$/;"	f	typeref:typename:void	file:
failure_cnt	pintos/src/tests/internal/stdio.c	/^static int failure_cnt;$/;"	v	typeref:typename:int	file:
false	pintos/src/lib/stdbool.h	/^#define false	/;"	d
fb	pintos/src/devices/vga.c	/^static uint8_t (*fb)[COL_CNT][2];$/;"	v	typeref:typename:uint8_t (*)[]	file:
file	pintos/src/filesys/file.c	/^struct file $/;"	s	file:
file_allow_write	pintos/src/filesys/file.c	/^file_allow_write (struct file *file) $/;"	f	typeref:typename:void
file_close	pintos/src/filesys/file.c	/^file_close (struct file *file) $/;"	f	typeref:typename:void
file_deny_write	pintos/src/filesys/file.c	/^file_deny_write (struct file *file) $/;"	f	typeref:typename:void
file_get_inode	pintos/src/filesys/file.c	/^file_get_inode (struct file *file) $/;"	f	typeref:struct:inode *
file_length	pintos/src/filesys/file.c	/^file_length (struct file *file) $/;"	f	typeref:typename:off_t
file_name	pintos/src/tests/filesys/base/syn-read.h	/^static const char file_name[] = "data";$/;"	v	typeref:typename:const char[]
file_name	pintos/src/tests/filesys/base/syn-write.h	/^static const char file_name[] = "stuff";$/;"	v	typeref:typename:const char[]
file_name	pintos/src/tests/filesys/extended/syn-rw.h	/^static const char file_name[] = "logfile";$/;"	v	typeref:typename:const char[]
file_open	pintos/src/filesys/file.c	/^file_open (struct inode *inode) $/;"	f	typeref:struct:file *
file_read	pintos/src/filesys/file.c	/^file_read (struct file *file, void *buffer, off_t size) $/;"	f	typeref:typename:off_t
file_read_at	pintos/src/filesys/file.c	/^file_read_at (struct file *file, void *buffer, off_t size, off_t file_ofs) $/;"	f	typeref:typename:off_t
file_reopen	pintos/src/filesys/file.c	/^file_reopen (struct file *file) $/;"	f	typeref:struct:file *
file_seek	pintos/src/filesys/file.c	/^file_seek (struct file *file, off_t new_pos)$/;"	f	typeref:typename:void
file_tell	pintos/src/filesys/file.c	/^file_tell (struct file *file) $/;"	f	typeref:typename:off_t
file_write	pintos/src/filesys/file.c	/^file_write (struct file *file, const void *buffer, off_t size) $/;"	f	typeref:typename:off_t
file_write_at	pintos/src/filesys/file.c	/^file_write_at (struct file *file, const void *buffer, off_t size,$/;"	f	typeref:typename:off_t
filesize	pintos/src/lib/user/syscall.c	/^filesize (int fd) $/;"	f	typeref:typename:int
filesys_bdev_name	pintos/src/threads/init.c	/^static const char *filesys_bdev_name;$/;"	v	typeref:typename:const char *	file:
filesys_create	pintos/src/filesys/filesys.c	/^filesys_create (const char *name, off_t initial_size) $/;"	f	typeref:typename:bool
filesys_done	pintos/src/filesys/filesys.c	/^filesys_done (void) $/;"	f	typeref:typename:void
filesys_init	pintos/src/filesys/filesys.c	/^filesys_init (bool format) $/;"	f	typeref:typename:void
filesys_open	pintos/src/filesys/filesys.c	/^filesys_open (const char *name)$/;"	f	typeref:struct:file *
filesys_remove	pintos/src/filesys/filesys.c	/^filesys_remove (const char *name) $/;"	f	typeref:typename:bool
find_bucket	pintos/src/lib/kernel/hash.c	/^find_bucket (struct hash *h, struct hash_elem *e) $/;"	f	typeref:struct:list *	file:
find_cursor	pintos/src/devices/vga.c	/^find_cursor (size_t *x, size_t *y) $/;"	f	typeref:typename:void	file:
find_elem	pintos/src/lib/kernel/hash.c	/^find_elem (struct hash *h, struct list *bucket, struct hash_elem *e) $/;"	f	typeref:struct:hash_elem *	file:
find_end_of_run	pintos/src/lib/kernel/list.c	/^find_end_of_run (struct list_elem *a, struct list_elem *b,$/;"	f	typeref:struct:list_elem *	file:
first	pintos/src/tests/threads/priority-donate-chain.c	/^    struct lock *first;$/;"	m	struct:lock_pair	typeref:struct:lock *	file:
first_scancode	pintos/src/devices/kbd.c	/^    uint8_t first_scancode;     \/* First scancode. *\/$/;"	m	struct:keymap	typeref:typename:uint8_t	file:
flags	pintos/src/lib/stdio.c	/^    flags;$/;"	m	struct:printf_conversion	typeref:enum:printf_conversion::__anonfd63b5620103	file:
flush	pintos/src/lib/user/console.c	/^flush (struct vhprintf_aux *aux)$/;"	f	typeref:typename:void	file:
force	pintos/src/examples/insult.c	/^char *force[] = { "force", "fury", "power", "rage" };$/;"	v	typeref:typename:char * []
forceLoc	pintos/src/examples/insult.c	/^char forceLoc[] = { 4, 0, 1, 2, 3, 4 };$/;"	v	typeref:typename:char[]
format_filesys	pintos/src/threads/init.c	/^static bool format_filesys;$/;"	v	typeref:typename:bool	file:
format_integer	pintos/src/lib/stdio.c	/^format_integer (uintmax_t value, bool is_signed, bool negative, $/;"	f	typeref:typename:void	file:
format_string	pintos/src/lib/stdio.c	/^format_string (const char *string, int length,$/;"	f	typeref:typename:void	file:
found_partition	pintos/src/devices/partition.c	/^found_partition (struct block *block, uint8_t part_type,$/;"	f	typeref:typename:void	file:
frame_pointer	pintos/src/threads/interrupt.h	/^    void *frame_pointer;        \/* Saved EBP (frame pointer). *\/$/;"	m	struct:intr_frame	typeref:typename:void *
free	pintos/src/threads/malloc.c	/^free (void *p) $/;"	f	typeref:typename:void
free_cnt	pintos/src/threads/malloc.c	/^    size_t free_cnt;            \/* Free blocks; pages in big block. *\/$/;"	m	struct:arena	typeref:typename:size_t	file:
free_elem	pintos/src/threads/malloc.c	/^    struct list_elem free_elem; \/* Free list element. *\/$/;"	m	struct:block	typeref:struct:list_elem	file:
free_list	pintos/src/threads/malloc.c	/^    struct list free_list;      \/* List of free blocks. *\/$/;"	m	struct:desc	typeref:struct:list	file:
free_map	pintos/src/filesys/free-map.c	/^static struct bitmap *free_map;      \/* Free map, one bit per sector. *\/$/;"	v	typeref:struct:bitmap *	file:
free_map_allocate	pintos/src/filesys/free-map.c	/^free_map_allocate (size_t cnt, block_sector_t *sectorp)$/;"	f	typeref:typename:bool
free_map_close	pintos/src/filesys/free-map.c	/^free_map_close (void) $/;"	f	typeref:typename:void
free_map_create	pintos/src/filesys/free-map.c	/^free_map_create (void) $/;"	f	typeref:typename:void
free_map_file	pintos/src/filesys/free-map.c	/^static struct file *free_map_file;   \/* Free map file. *\/$/;"	v	typeref:struct:file *	file:
free_map_init	pintos/src/filesys/free-map.c	/^free_map_init (void) $/;"	f	typeref:typename:void
free_map_open	pintos/src/filesys/free-map.c	/^free_map_open (void) $/;"	f	typeref:typename:void
free_map_release	pintos/src/filesys/free-map.c	/^free_map_release (block_sector_t sector, size_t cnt)$/;"	f	typeref:typename:void
fs	pintos/src/threads/interrupt.h	/^    uint16_t fs, :16;           \/* Saved FS segment register. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
fs	pintos/src/userprog/tss.c	/^    uint16_t fs, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
fs_device	pintos/src/filesys/filesys.c	/^struct block *fs_device;$/;"	v	typeref:struct:block *
fs_device	pintos/src/filesys/filesys.h	/^struct block *fs_device;$/;"	v	typeref:struct:block *
fsinfo_SRC	pintos/src/examples/Makefile	/^fsinfo_SRC = fsinfo.c$/;"	m
fsutil_append	pintos/src/filesys/fsutil.c	/^fsutil_append (char **argv)$/;"	f	typeref:typename:void
fsutil_cat	pintos/src/filesys/fsutil.c	/^fsutil_cat (char **argv)$/;"	f	typeref:typename:void
fsutil_extract	pintos/src/filesys/fsutil.c	/^fsutil_extract (char **argv UNUSED) $/;"	f	typeref:typename:void
fsutil_ls	pintos/src/filesys/fsutil.c	/^fsutil_ls (char **argv UNUSED) $/;"	f	typeref:typename:void
fsutil_rm	pintos/src/filesys/fsutil.c	/^fsutil_rm (char **argv) $/;"	f	typeref:typename:void
function	pintos/src/tests/threads/tests.c	/^    void* function;$/;"	m	struct:test	typeref:typename:void *	file:
function	pintos/src/threads/init.c	/^      void (*function) (char **argv);   \/* Function to execute action. *\/$/;"	m	struct:run_actions::action	typeref:typename:void (*)(char ** argv)	file:
function	pintos/src/threads/thread.c	/^    thread_func *function;      \/* Function to call. *\/$/;"	m	struct:kernel_thread_frame	typeref:typename:thread_func *	file:
gdt	pintos/src/userprog/gdt.c	/^static uint64_t gdt[SEL_CNT];$/;"	v	typeref:typename:uint64_t[]	file:
gdt_init	pintos/src/userprog/gdt.c	/^gdt_init (void)$/;"	f	typeref:typename:void
get_boundary_area	pintos/src/tests/userprog/boundary.c	/^get_boundary_area (void) $/;"	f	typeref:typename:void *
get_inumber	pintos/src/examples/pwd.c	/^get_inumber (const char *file_name, int *inum) $/;"	f	typeref:typename:bool	file:
getcwd	pintos/src/examples/pwd.c	/^getcwd (char *cwd, size_t cwd_size) $/;"	f	typeref:typename:bool	file:
gid	pintos/src/lib/ustar.c	/^    char gid[8];                \/* Group ID as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
gname	pintos/src/lib/ustar.c	/^    char gname[32];             \/* Group name, always null-terminated. *\/$/;"	m	struct:ustar_header	typeref:typename:char[32]	file:
good_verb	pintos/src/examples/insult.c	/^char *good_verb[] =$/;"	v	typeref:typename:char * []
good_verbLoc	pintos/src/examples/insult.c	/^char good_verbLoc[] = { 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 };$/;"	v	typeref:typename:char[]
group	pintos/src/lib/stdio.c	/^    int group;                  \/* Number of digits to group with ' flag. *\/$/;"	m	struct:integer_base	typeref:typename:int	file:
gs	pintos/src/threads/interrupt.h	/^    uint16_t gs, :16;           \/* Saved GS segment register. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
gs	pintos/src/userprog/tss.c	/^    uint16_t gs, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
h_thread_func	pintos/src/tests/threads/priority-donate-sema.c	/^h_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
h_thread_func	pintos/src/tests/threads/priority-donate-sema.c	/^static thread_func h_thread_func;$/;"	v	typeref:typename:thread_func	file:
hairdresser	pintos/src/tests/threads/hair.c	/^static void hairdresser(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
halt	pintos/src/lib/user/syscall.c	/^halt (void) $/;"	f	typeref:typename:void
halt_SRC	pintos/src/examples/Makefile	/^halt_SRC = halt.c$/;"	m
handle	pintos/src/lib/user/console.c	/^    int handle;         \/* Output file handle. *\/$/;"	m	struct:vhprintf_aux	typeref:typename:int	file:
handle_error	pintos/src/utils/squish-pty.c	/^handle_error (ssize_t retval, int *fd, bool fd_is_pty, const char *call)$/;"	f	typeref:typename:void	file:
handle_error	pintos/src/utils/squish-unix.c	/^handle_error (ssize_t retval, int *fd, bool fd_is_sock, const char *call)$/;"	f	typeref:typename:bool	file:
hanoi_SRC	pintos/src/examples/Makefile	/^hanoi_SRC = hanoi.c$/;"	m
hash	pintos/src/lib/kernel/hash.h	/^    hash_hash_func *hash;       \/* Hash function. *\/$/;"	m	struct:hash	typeref:typename:hash_hash_func *
hash	pintos/src/lib/kernel/hash.h	/^    struct hash *hash;          \/* The hash table. *\/$/;"	m	struct:hash_iterator	typeref:struct:hash *
hash	pintos/src/lib/kernel/hash.h	/^struct hash $/;"	s
hash_action_func	pintos/src/lib/kernel/hash.h	/^typedef void hash_action_func (struct hash_elem *e, void *aux);$/;"	t	typeref:typename:void ()(struct hash_elem * e,void * aux)
hash_apply	pintos/src/lib/kernel/hash.c	/^hash_apply (struct hash *h, hash_action_func *action) $/;"	f	typeref:typename:void
hash_bytes	pintos/src/lib/kernel/hash.c	/^hash_bytes (const void *buf_, size_t size)$/;"	f	typeref:typename:unsigned
hash_clear	pintos/src/lib/kernel/hash.c	/^hash_clear (struct hash *h, hash_action_func *destructor) $/;"	f	typeref:typename:void
hash_cur	pintos/src/lib/kernel/hash.c	/^hash_cur (struct hash_iterator *i) $/;"	f	typeref:struct:hash_elem *
hash_delete	pintos/src/lib/kernel/hash.c	/^hash_delete (struct hash *h, struct hash_elem *e)$/;"	f	typeref:struct:hash_elem *
hash_destroy	pintos/src/lib/kernel/hash.c	/^hash_destroy (struct hash *h, hash_action_func *destructor) $/;"	f	typeref:typename:void
hash_elem	pintos/src/lib/kernel/hash.h	/^struct hash_elem $/;"	s
hash_empty	pintos/src/lib/kernel/hash.c	/^hash_empty (struct hash *h) $/;"	f	typeref:typename:bool
hash_entry	pintos/src/lib/kernel/hash.h	/^#define hash_entry(/;"	d
hash_find	pintos/src/lib/kernel/hash.c	/^hash_find (struct hash *h, struct hash_elem *e) $/;"	f	typeref:struct:hash_elem *
hash_first	pintos/src/lib/kernel/hash.c	/^hash_first (struct hash_iterator *i, struct hash *h) $/;"	f	typeref:typename:void
hash_hash_func	pintos/src/lib/kernel/hash.h	/^typedef unsigned hash_hash_func (const struct hash_elem *e, void *aux);$/;"	t	typeref:typename:unsigned ()(const struct hash_elem * e,void * aux)
hash_init	pintos/src/lib/kernel/hash.c	/^hash_init (struct hash *h,$/;"	f	typeref:typename:bool
hash_insert	pintos/src/lib/kernel/hash.c	/^hash_insert (struct hash *h, struct hash_elem *new)$/;"	f	typeref:struct:hash_elem *
hash_int	pintos/src/lib/kernel/hash.c	/^hash_int (int i) $/;"	f	typeref:typename:unsigned
hash_iterator	pintos/src/lib/kernel/hash.h	/^struct hash_iterator $/;"	s
hash_less_func	pintos/src/lib/kernel/hash.h	/^typedef bool hash_less_func (const struct hash_elem *a,$/;"	t	typeref:typename:bool ()(const struct hash_elem * a,const struct hash_elem * b,void * aux)
hash_next	pintos/src/lib/kernel/hash.c	/^hash_next (struct hash_iterator *i)$/;"	f	typeref:struct:hash_elem *
hash_replace	pintos/src/lib/kernel/hash.c	/^hash_replace (struct hash *h, struct hash_elem *new) $/;"	f	typeref:struct:hash_elem *
hash_size	pintos/src/lib/kernel/hash.c	/^hash_size (struct hash *h) $/;"	f	typeref:typename:size_t
hash_string	pintos/src/lib/kernel/hash.c	/^hash_string (const char *s_) $/;"	f	typeref:typename:unsigned
head	pintos/src/devices/intq.h	/^    int head;                   \/* New data is written here. *\/$/;"	m	struct:intq	typeref:typename:int
head	pintos/src/lib/kernel/list.h	/^    struct list_elem head;      \/* List head. *\/$/;"	m	struct:list	typeref:struct:list_elem
heapify	pintos/src/lib/stdlib.c	/^heapify (unsigned char *array, size_t i, size_t cnt, size_t size,$/;"	f	typeref:typename:void	file:
hex-dump_SRC	pintos/src/examples/Makefile	/^hex-dump_SRC = hex-dump.c$/;"	m
hex_dump	pintos/src/lib/stdio.c	/^hex_dump (uintptr_t ofs, const void *buf_, size_t size, bool ascii)$/;"	f	typeref:typename:void
high_thread_func	pintos/src/tests/threads/priority-donate-nest.c	/^high_thread_func (void *lock_) $/;"	f	typeref:typename:void	file:
high_thread_func	pintos/src/tests/threads/priority-donate-nest.c	/^static thread_func high_thread_func;$/;"	v	typeref:typename:thread_func	file:
histogram	pintos/src/tests/vm/child-sort.c	/^size_t histogram[256];$/;"	v	typeref:typename:size_t[256]
histogram	pintos/src/tests/vm/page-merge-seq.c	/^size_t histogram[256];$/;"	v	typeref:typename:size_t[256]
histogram	pintos/src/tests/vm/parallel-merge.c	/^size_t histogram[256];$/;"	v	typeref:typename:size_t[256]
holder	pintos/src/threads/synch.h	/^    struct thread *holder;      \/* Thread holding lock (for debugging). *\/$/;"	m	struct:lock	typeref:struct:thread *
how	pintos/src/devices/shutdown.c	/^static enum shutdown_type how = SHUTDOWN_NONE;$/;"	v	typeref:enum:shutdown_type	file:
hprintf	pintos/src/lib/user/console.c	/^hprintf (int handle, const char *format, ...) $/;"	f	typeref:typename:int
hydrogen	pintos/src/tests/threads/molec.c	/^static void hydrogen(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
i	pintos/src/tests/arc4.h	/^    uint8_t i, j;$/;"	m	struct:arc4	typeref:typename:uint8_t
id	pintos/src/tests/threads/alarm-wait.c	/^    int id;                     \/* Sleeper ID. *\/$/;"	m	struct:sleep_thread	typeref:typename:int	file:
id	pintos/src/tests/threads/priority-fifo.c	/^    int id;                     \/* Sleeper ID. *\/$/;"	m	struct:simple_thread_data	typeref:typename:int	file:
ide_init	pintos/src/devices/ide.c	/^ide_init (void) $/;"	f	typeref:typename:void
ide_operations	pintos/src/devices/ide.c	/^static struct block_operations ide_operations =$/;"	v	typeref:struct:block_operations	file:
ide_operations	pintos/src/devices/ide.c	/^static struct block_operations ide_operations;$/;"	v	typeref:struct:block_operations	file:
ide_read	pintos/src/devices/ide.c	/^ide_read (void *d_, block_sector_t sec_no, void *buffer)$/;"	f	typeref:typename:void	file:
ide_write	pintos/src/devices/ide.c	/^ide_write (void *d_, block_sector_t sec_no, const void *buffer)$/;"	f	typeref:typename:void	file:
identify_ata_device	pintos/src/devices/ide.c	/^identify_ata_device (struct ata_disk *d) $/;"	f	typeref:typename:void	file:
idle	pintos/src/threads/thread.c	/^idle (void *idle_started_ UNUSED) $/;"	f	typeref:typename:void	file:
idle_thread	pintos/src/threads/thread.c	/^static struct thread *idle_thread;$/;"	v	typeref:struct:thread *	file:
idle_ticks	pintos/src/threads/thread.c	/^static long long idle_ticks;    \/* # of timer ticks spent idle. *\/$/;"	v	typeref:typename:long long	file:
idt	pintos/src/threads/interrupt.c	/^static uint64_t idt[INTR_CNT];$/;"	v	typeref:typename:uint64_t[]	file:
in	pintos/src/utils/squish-pty.c	/^      int in, out;$/;"	m	struct:relay::pipe	typeref:typename:int	file:
in	pintos/src/utils/squish-unix.c	/^      int in, out;$/;"	m	struct:relay::pipe	typeref:typename:int	file:
in_external_intr	pintos/src/threads/interrupt.c	/^static bool in_external_intr;   \/* Are we processing an external interrupt? *\/$/;"	v	typeref:typename:bool	file:
in_something	pintos/src/examples/insult.c	/^char *in_something[] =$/;"	v	typeref:typename:char * []
in_somethingLoc	pintos/src/examples/insult.c	/^char in_somethingLoc[] = { 8, 0, 1, 3, 4, 5, 6, 8, 9, 10 };$/;"	v	typeref:typename:char[]
in_use	pintos/src/filesys/directory.c	/^    bool in_use;                        \/* In use or free? *\/$/;"	m	struct:dir_entry	typeref:typename:bool	file:
inb	pintos/src/threads/io.h	/^inb (uint16_t port)$/;"	f	typeref:typename:uint8_t
init	pintos/src/devices/vga.c	/^init (void)$/;"	f	typeref:typename:void	file:
init	pintos/src/tests/threads/bear.c	/^static void init(unsigned int pot_size UNUSED)$/;"	f	typeref:typename:void	file:
init	pintos/src/tests/threads/birds.c	/^static void init(unsigned int dish_size UNUSED)$/;"	f	typeref:typename:void	file:
init	pintos/src/tests/threads/hair.c	/^static void init(void)$/;"	f	typeref:typename:void	file:
init	pintos/src/tests/threads/molec.c	/^static void init(void)$/;"	f	typeref:typename:void	file:
init	pintos/src/tests/threads/rolcoast.c	/^static void init(unsigned int carriage_size UNUSED)$/;"	f	typeref:typename:void	file:
init	pintos/src/tests/threads/shower.c	/^static void init(void)$/;"	f	typeref:typename:void	file:
init	pintos/src/tests/threads/smokers.c	/^static void init(void)$/;"	f	typeref:typename:void	file:
init	pintos/src/tests/vm/page-merge-seq.c	/^init (void) $/;"	f	typeref:typename:void	file:
init	pintos/src/tests/vm/parallel-merge.c	/^init (void) $/;"	f	typeref:typename:void	file:
init_grammar	pintos/src/examples/insult.c	/^init_grammar (void)$/;"	f	typeref:typename:void	file:
init_page_dir	pintos/src/threads/init.c	/^uint32_t *init_page_dir;$/;"	v	typeref:typename:uint32_t *
init_poll	pintos/src/devices/serial.c	/^init_poll (void) $/;"	f	typeref:typename:void	file:
init_pool	pintos/src/threads/palloc.c	/^init_pool (struct pool *p, void *base, size_t page_cnt, const char *name) $/;"	f	typeref:typename:void	file:
init_thread	pintos/src/threads/thread.c	/^init_thread (struct thread *t, const char *name, int priority)$/;"	f	typeref:typename:void	file:
inited	pintos/src/lib/random.c	/^static bool inited;     $/;"	v	typeref:typename:bool	file:
initial_thread	pintos/src/threads/thread.c	/^static struct thread *initial_thread;$/;"	v	typeref:struct:thread *	file:
inl	pintos/src/threads/io.h	/^inl (uint16_t port)$/;"	f	typeref:typename:uint32_t
inode	pintos/src/filesys/directory.c	/^    struct inode *inode;                \/* Backing store. *\/$/;"	m	struct:dir	typeref:struct:inode *	file:
inode	pintos/src/filesys/file.c	/^    struct inode *inode;        \/* File's inode. *\/$/;"	m	struct:file	typeref:struct:inode *	file:
inode	pintos/src/filesys/inode.c	/^struct inode $/;"	s	file:
inode_allow_write	pintos/src/filesys/inode.c	/^inode_allow_write (struct inode *inode) $/;"	f	typeref:typename:void
inode_close	pintos/src/filesys/inode.c	/^inode_close (struct inode *inode) $/;"	f	typeref:typename:void
inode_create	pintos/src/filesys/inode.c	/^inode_create (block_sector_t sector, off_t length)$/;"	f	typeref:typename:bool
inode_deny_write	pintos/src/filesys/inode.c	/^inode_deny_write (struct inode *inode) $/;"	f	typeref:typename:void
inode_disk	pintos/src/filesys/inode.c	/^struct inode_disk$/;"	s	file:
inode_get_inumber	pintos/src/filesys/inode.c	/^inode_get_inumber (const struct inode *inode)$/;"	f	typeref:typename:block_sector_t
inode_init	pintos/src/filesys/inode.c	/^inode_init (void) $/;"	f	typeref:typename:void
inode_length	pintos/src/filesys/inode.c	/^inode_length (const struct inode *inode)$/;"	f	typeref:typename:off_t
inode_open	pintos/src/filesys/inode.c	/^inode_open (block_sector_t sector)$/;"	f	typeref:struct:inode *
inode_read_at	pintos/src/filesys/inode.c	/^inode_read_at (struct inode *inode, void *buffer_, off_t size, off_t offset) $/;"	f	typeref:typename:off_t
inode_remove	pintos/src/filesys/inode.c	/^inode_remove (struct inode *inode) $/;"	f	typeref:typename:void
inode_reopen	pintos/src/filesys/inode.c	/^inode_reopen (struct inode *inode)$/;"	f	typeref:struct:inode *
inode_sector	pintos/src/filesys/directory.c	/^    block_sector_t inode_sector;        \/* Sector number of header. *\/$/;"	m	struct:dir_entry	typeref:typename:block_sector_t	file:
inode_write_at	pintos/src/filesys/inode.c	/^inode_write_at (struct inode *inode, const void *buffer_, off_t size,$/;"	f	typeref:typename:off_t
inplace_merge	pintos/src/lib/kernel/list.c	/^inplace_merge (struct list_elem *a0, struct list_elem *a1b0,$/;"	f	typeref:typename:void	file:
input_full	pintos/src/devices/input.c	/^input_full (void) $/;"	f	typeref:typename:bool
input_getc	pintos/src/devices/input.c	/^input_getc (void) $/;"	f	typeref:typename:uint8_t
input_init	pintos/src/devices/input.c	/^input_init (void) $/;"	f	typeref:typename:void
input_putc	pintos/src/devices/input.c	/^input_putc (uint8_t key) $/;"	f	typeref:typename:void
input_sector	pintos/src/devices/ide.c	/^input_sector (struct channel *c, void *sector) $/;"	f	typeref:typename:void	file:
insb	pintos/src/threads/io.h	/^insb (uint16_t port, void *addr, size_t cnt)$/;"	f	typeref:typename:void
insert_elem	pintos/src/lib/kernel/hash.c	/^insert_elem (struct hash *h, struct list *bucket, struct hash_elem *e) $/;"	f	typeref:typename:void	file:
insl	pintos/src/threads/io.h	/^insl (uint16_t port, void *addr, size_t cnt)$/;"	f	typeref:typename:void
install_page	pintos/src/userprog/process.c	/^install_page (void *upage, void *kpage, bool writable)$/;"	f	typeref:typename:bool	file:
insult_SRC	pintos/src/examples/Makefile	/^insult_SRC = insult.c$/;"	m
insw	pintos/src/threads/io.h	/^insw (uint16_t port, void *addr, size_t cnt)$/;"	f	typeref:typename:void
int16_t	pintos/src/lib/stdint.h	/^typedef signed short int int16_t;$/;"	t	typeref:typename:signed short int
int32_t	pintos/src/lib/stdint.h	/^typedef signed int int32_t;$/;"	t	typeref:typename:signed int
int64_t	pintos/src/lib/stdint.h	/^typedef signed long long int int64_t;$/;"	t	typeref:typename:signed long long int
int8_t	pintos/src/lib/stdint.h	/^typedef signed char int8_t;$/;"	t	typeref:typename:signed char
integer_base	pintos/src/lib/stdio.c	/^struct integer_base $/;"	s	file:
interloper_thread_func	pintos/src/tests/threads/priority-donate-chain.c	/^interloper_thread_func (void *arg_ UNUSED)$/;"	f	typeref:typename:void	file:
interloper_thread_func	pintos/src/tests/threads/priority-donate-chain.c	/^static thread_func interloper_thread_func;$/;"	v	typeref:typename:thread_func	file:
interrupt_handler	pintos/src/devices/ide.c	/^interrupt_handler (struct intr_frame *f) $/;"	f	typeref:typename:void	file:
intmax_t	pintos/src/lib/stdint.h	/^typedef int64_t intmax_t;$/;"	t	typeref:typename:int64_t
intptr_t	pintos/src/lib/stdint.h	/^typedef int32_t intptr_t;$/;"	t	typeref:typename:int32_t
intq	pintos/src/devices/intq.h	/^struct intq$/;"	s
intq_empty	pintos/src/devices/intq.c	/^intq_empty (const struct intq *q) $/;"	f	typeref:typename:bool
intq_full	pintos/src/devices/intq.c	/^intq_full (const struct intq *q) $/;"	f	typeref:typename:bool
intq_getc	pintos/src/devices/intq.c	/^intq_getc (struct intq *q) $/;"	f	typeref:typename:uint8_t
intq_init	pintos/src/devices/intq.c	/^intq_init (struct intq *q) $/;"	f	typeref:typename:void
intq_putc	pintos/src/devices/intq.c	/^intq_putc (struct intq *q, uint8_t byte) $/;"	f	typeref:typename:void
intr_context	pintos/src/threads/interrupt.c	/^intr_context (void) $/;"	f	typeref:typename:bool
intr_disable	pintos/src/threads/interrupt.c	/^intr_disable (void) $/;"	f	typeref:enum:intr_level
intr_dump_frame	pintos/src/threads/interrupt.c	/^intr_dump_frame (const struct intr_frame *f) $/;"	f	typeref:typename:void
intr_enable	pintos/src/threads/interrupt.c	/^intr_enable (void) $/;"	f	typeref:enum:intr_level
intr_frame	pintos/src/threads/interrupt.h	/^struct intr_frame$/;"	s
intr_get_level	pintos/src/threads/interrupt.c	/^intr_get_level (void) $/;"	f	typeref:enum:intr_level
intr_handler	pintos/src/threads/interrupt.c	/^intr_handler (struct intr_frame *frame) $/;"	f	typeref:typename:void
intr_handler_func	pintos/src/threads/interrupt.h	/^typedef void intr_handler_func (struct intr_frame *);$/;"	t	typeref:typename:void ()(struct intr_frame *)
intr_handlers	pintos/src/threads/interrupt.c	/^static intr_handler_func *intr_handlers[INTR_CNT];$/;"	v	typeref:typename:intr_handler_func * []	file:
intr_init	pintos/src/threads/interrupt.c	/^intr_init (void)$/;"	f	typeref:typename:void
intr_level	pintos/src/threads/interrupt.h	/^enum intr_level $/;"	g
intr_name	pintos/src/threads/interrupt.c	/^intr_name (uint8_t vec) $/;"	f	typeref:typename:const char *
intr_names	pintos/src/threads/interrupt.c	/^static const char *intr_names[INTR_CNT];$/;"	v	typeref:typename:const char * []	file:
intr_register_ext	pintos/src/threads/interrupt.c	/^intr_register_ext (uint8_t vec_no, intr_handler_func *handler,$/;"	f	typeref:typename:void
intr_register_int	pintos/src/threads/interrupt.c	/^intr_register_int (uint8_t vec_no, int dpl, enum intr_level level,$/;"	f	typeref:typename:void
intr_set_level	pintos/src/threads/interrupt.c	/^intr_set_level (enum intr_level level) $/;"	f	typeref:enum:intr_level
intr_stub_func	pintos/src/threads/intr-stubs.h	/^typedef void intr_stub_func (void);$/;"	t	typeref:typename:void ()(void)
intr_yield_on_return	pintos/src/threads/interrupt.c	/^intr_yield_on_return (void) $/;"	f	typeref:typename:void
inumber	pintos/src/lib/user/syscall.c	/^inumber (int fd) $/;"	f	typeref:typename:int
invalidate_pagedir	pintos/src/userprog/pagedir.c	/^invalidate_pagedir (uint32_t *pd) $/;"	f	typeref:typename:void	file:
invariant_keymap	pintos/src/devices/kbd.c	/^static const struct keymap invariant_keymap[] = $/;"	v	typeref:typename:const struct keymap[]	file:
inw	pintos/src/threads/io.h	/^inw (uint16_t port)$/;"	f	typeref:typename:uint16_t
iplog_SRC	pintos/src/examples/Makefile	/^iplog_SRC = iplog.c$/;"	m
irq	pintos/src/devices/ide.c	/^    uint8_t irq;                \/* Interrupt in use. *\/$/;"	m	struct:channel	typeref:typename:uint8_t	file:
is_all_zeros	pintos/src/lib/ustar.c	/^is_all_zeros (const char *block, size_t cnt)$/;"	f	typeref:typename:bool	file:
is_ata	pintos/src/devices/ide.c	/^    bool is_ata;                \/* Is device an ATA disk? *\/$/;"	m	struct:ata_disk	typeref:typename:bool	file:
is_head	pintos/src/lib/kernel/list.c	/^is_head (struct list_elem *elem)$/;"	f	typeref:typename:bool	file:
is_interior	pintos/src/lib/kernel/list.c	/^is_interior (struct list_elem *elem)$/;"	f	typeref:typename:bool	file:
is_kernel_vaddr	pintos/src/threads/vaddr.h	/^is_kernel_vaddr (const void *vaddr) $/;"	f	typeref:typename:bool
is_partitioned	pintos/src/tests/vm/qsort.c	/^is_partitioned (const unsigned char *array, size_t size,$/;"	f	typeref:typename:bool	file:
is_power_of_2	pintos/src/lib/kernel/hash.c	/^is_power_of_2 (size_t x) $/;"	f	typeref:typename:size_t	file:
is_sorted	pintos/src/lib/kernel/list.c	/^is_sorted (struct list_elem *a, struct list_elem *b,$/;"	f	typeref:typename:bool	file:
is_sorted	pintos/src/tests/vm/qsort.c	/^is_sorted (const unsigned char *buf, size_t size) $/;"	f	typeref:typename:bool	file:
is_tail	pintos/src/lib/kernel/list.c	/^is_tail (struct list_elem *elem)$/;"	f	typeref:typename:bool	file:
is_thread	pintos/src/threads/thread.c	/^is_thread (struct thread *t)$/;"	f	typeref:typename:bool	file:
is_user_vaddr	pintos/src/threads/vaddr.h	/^is_user_vaddr (const void *vaddr) $/;"	f	typeref:typename:bool
isalnum	pintos/src/lib/ctype.h	/^static inline int isalnum (int c) { return isalpha (c) || isdigit (c); }$/;"	f	typeref:typename:int
isalpha	pintos/src/lib/ctype.h	/^static inline int isalpha (int c) { return islower (c) || isupper (c); }$/;"	f	typeref:typename:int
isascii	pintos/src/lib/ctype.h	/^static inline int isascii (int c) { return c >= 0 && c < 128; }$/;"	f	typeref:typename:int
isblank	pintos/src/lib/ctype.h	/^static inline int isblank (int c) { return c == ' ' || c == '\\t'; }$/;"	f	typeref:typename:int
iscntrl	pintos/src/lib/ctype.h	/^static inline int iscntrl (int c) { return (c >= 0 && c < 32) || c == 127; }$/;"	f	typeref:typename:int
isdigit	pintos/src/lib/ctype.h	/^static inline int isdigit (int c) { return c >= '0' && c <= '9'; }$/;"	f	typeref:typename:int
isdir	pintos/src/lib/user/syscall.c	/^isdir (int fd) $/;"	f	typeref:typename:bool
isgraph	pintos/src/lib/ctype.h	/^static inline int isgraph (int c) { return c > 32 && c < 127; }$/;"	f	typeref:typename:int
islower	pintos/src/lib/ctype.h	/^static inline int islower (int c) { return c >= 'a' && c <= 'z'; }$/;"	f	typeref:typename:int
isprint	pintos/src/lib/ctype.h	/^static inline int isprint (int c) { return c >= 32 && c < 127; }$/;"	f	typeref:typename:int
ispunct	pintos/src/lib/ctype.h	/^static inline int ispunct (int c) {$/;"	f	typeref:typename:int
isspace	pintos/src/lib/ctype.h	/^static inline int isspace (int c) {$/;"	f	typeref:typename:int
issue_pio_command	pintos/src/devices/ide.c	/^issue_pio_command (struct channel *c, uint8_t command) $/;"	f	typeref:typename:void	file:
isupper	pintos/src/lib/ctype.h	/^static inline int isupper (int c) { return c >= 'A' && c <= 'Z'; }$/;"	f	typeref:typename:int
isxdigit	pintos/src/lib/ctype.h	/^static inline int isxdigit (int c) {$/;"	f	typeref:typename:int
iterations	pintos/src/tests/threads/alarm-simultaneous.c	/^    int iterations;             \/* Number of iterations per thread. *\/$/;"	m	struct:sleep_test	typeref:typename:int	file:
iterations	pintos/src/tests/threads/alarm-wait.c	/^    int iterations;             \/* Iterations counted so far. *\/$/;"	m	struct:sleep_thread	typeref:typename:int	file:
iterations	pintos/src/tests/threads/alarm-wait.c	/^    int iterations;             \/* Number of iterations per thread. *\/$/;"	m	struct:sleep_test	typeref:typename:int	file:
iterations	pintos/src/tests/threads/priority-fifo.c	/^    int iterations;             \/* Iterations so far. *\/$/;"	m	struct:simple_thread_data	typeref:typename:int	file:
j	pintos/src/tests/arc4.h	/^    uint8_t i, j;$/;"	m	struct:arc4	typeref:typename:uint8_t
kbd_init	pintos/src/devices/kbd.c	/^kbd_init (void) $/;"	f	typeref:typename:void
kbd_print_stats	pintos/src/devices/kbd.c	/^kbd_print_stats (void) $/;"	f	typeref:typename:void
kernel_pool	pintos/src/threads/palloc.c	/^static struct pool kernel_pool, user_pool;$/;"	v	typeref:struct:pool	file:
kernel_thread	pintos/src/threads/thread.c	/^kernel_thread (thread_func *function, void *aux) $/;"	f	typeref:typename:void	file:
kernel_thread_frame	pintos/src/threads/thread.c	/^struct kernel_thread_frame $/;"	s	file:
kernel_ticks	pintos/src/threads/thread.c	/^static long long kernel_ticks;  \/* # of timer ticks in kernel threads. *\/$/;"	v	typeref:typename:long long	file:
key_cnt	pintos/src/devices/kbd.c	/^static int64_t key_cnt;$/;"	v	typeref:typename:int64_t	file:
keyboard_interrupt	pintos/src/devices/kbd.c	/^keyboard_interrupt (struct intr_frame *args UNUSED) $/;"	f	typeref:typename:void	file:
keyboard_interrupt	pintos/src/devices/kbd.c	/^static intr_handler_func keyboard_interrupt;$/;"	v	typeref:typename:intr_handler_func	file:
keymap	pintos/src/devices/kbd.c	/^struct keymap$/;"	s	file:
kill	pintos/src/userprog/exception.c	/^kill (struct intr_frame *f) $/;"	f	typeref:typename:void	file:
kjump_SRC	pintos/src/examples/Makefile	/^kjump_SRC = kjump.c$/;"	m
knight_SRC	pintos/src/examples/Makefile	/^knight_SRC = knight.c$/;"	m
l_thread_func	pintos/src/tests/threads/priority-donate-sema.c	/^l_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
l_thread_func	pintos/src/tests/threads/priority-donate-sema.c	/^static thread_func l_thread_func;$/;"	v	typeref:typename:thread_func	file:
last_mask	pintos/src/lib/kernel/bitmap.c	/^last_mask (const struct bitmap *b) $/;"	f	typeref:typename:elem_type	file:
ldt	pintos/src/userprog/tss.c	/^    uint16_t ldt, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
left_alt	pintos/src/devices/kbd.c	/^static bool left_alt, right_alt;        \/* Left and right Alt keys. *\/$/;"	v	typeref:typename:bool	file:
left_ctrl	pintos/src/devices/kbd.c	/^static bool left_ctrl, right_ctrl;      \/* Left and right Ctl keys. *\/$/;"	v	typeref:typename:bool	file:
left_shift	pintos/src/devices/kbd.c	/^static bool left_shift, right_shift;    \/* Left and right Shift keys. *\/$/;"	v	typeref:typename:bool	file:
length	pintos/src/filesys/inode.c	/^    off_t length;                       \/* File size in bytes. *\/$/;"	m	struct:inode_disk	typeref:typename:off_t	file:
length	pintos/src/lib/stdio.c	/^    int length;         \/* Length of output string. *\/$/;"	m	struct:vsnprintf_aux	typeref:typename:int	file:
less	pintos/src/lib/kernel/hash.h	/^    hash_less_func *less;       \/* Comparison function. *\/$/;"	m	struct:hash	typeref:typename:hash_less_func *
lineup_SRC	pintos/src/examples/Makefile	/^lineup_SRC = lineup.c$/;"	m
linkname	pintos/src/lib/ustar.c	/^    char linkname[100];         \/* Name of link target.$/;"	m	struct:ustar_header	typeref:typename:char[100]	file:
list	pintos/src/lib/kernel/list.h	/^struct list $/;"	s
list_back	pintos/src/lib/kernel/list.c	/^list_back (struct list *list)$/;"	f	typeref:struct:list_elem *
list_begin	pintos/src/lib/kernel/list.c	/^list_begin (struct list *list)$/;"	f	typeref:struct:list_elem *
list_dir	pintos/src/examples/ls.c	/^list_dir (const char *dir, bool verbose) $/;"	f	typeref:typename:bool	file:
list_elem	pintos/src/devices/block.c	/^    struct list_elem list_elem;         \/* Element in all_blocks. *\/$/;"	m	struct:block	typeref:struct:list_elem	file:
list_elem	pintos/src/lib/kernel/hash.h	/^    struct list_elem list_elem;$/;"	m	struct:hash_elem	typeref:struct:list_elem
list_elem	pintos/src/lib/kernel/list.h	/^struct list_elem $/;"	s
list_elem_to_block	pintos/src/devices/block.c	/^list_elem_to_block (struct list_elem *list_elem)$/;"	f	typeref:struct:block *	file:
list_elem_to_hash_elem	pintos/src/lib/kernel/hash.c	/^#define list_elem_to_hash_elem(/;"	d	file:
list_empty	pintos/src/lib/kernel/list.c	/^list_empty (struct list *list)$/;"	f	typeref:typename:bool
list_end	pintos/src/lib/kernel/list.c	/^list_end (struct list *list)$/;"	f	typeref:struct:list_elem *
list_entry	pintos/src/lib/kernel/list.h	/^#define list_entry(/;"	d
list_front	pintos/src/lib/kernel/list.c	/^list_front (struct list *list)$/;"	f	typeref:struct:list_elem *
list_head	pintos/src/lib/kernel/list.c	/^list_head (struct list *list) $/;"	f	typeref:struct:list_elem *
list_init	pintos/src/lib/kernel/list.c	/^list_init (struct list *list)$/;"	f	typeref:typename:void
list_insert	pintos/src/lib/kernel/list.c	/^list_insert (struct list_elem *before, struct list_elem *elem)$/;"	f	typeref:typename:void
list_insert_ordered	pintos/src/lib/kernel/list.c	/^list_insert_ordered (struct list *list, struct list_elem *elem,$/;"	f	typeref:typename:void
list_less_func	pintos/src/lib/kernel/list.h	/^typedef bool list_less_func (const struct list_elem *a,$/;"	t	typeref:typename:bool ()(const struct list_elem * a,const struct list_elem * b,void * aux)
list_max	pintos/src/lib/kernel/list.c	/^list_max (struct list *list, list_less_func *less, void *aux)$/;"	f	typeref:struct:list_elem *
list_min	pintos/src/lib/kernel/list.c	/^list_min (struct list *list, list_less_func *less, void *aux)$/;"	f	typeref:struct:list_elem *
list_next	pintos/src/lib/kernel/list.c	/^list_next (struct list_elem *elem)$/;"	f	typeref:struct:list_elem *
list_pop_back	pintos/src/lib/kernel/list.c	/^list_pop_back (struct list *list)$/;"	f	typeref:struct:list_elem *
list_pop_front	pintos/src/lib/kernel/list.c	/^list_pop_front (struct list *list)$/;"	f	typeref:struct:list_elem *
list_prev	pintos/src/lib/kernel/list.c	/^list_prev (struct list_elem *elem)$/;"	f	typeref:struct:list_elem *
list_push_back	pintos/src/lib/kernel/list.c	/^list_push_back (struct list *list, struct list_elem *elem)$/;"	f	typeref:typename:void
list_push_front	pintos/src/lib/kernel/list.c	/^list_push_front (struct list *list, struct list_elem *elem)$/;"	f	typeref:typename:void
list_rbegin	pintos/src/lib/kernel/list.c	/^list_rbegin (struct list *list) $/;"	f	typeref:struct:list_elem *
list_remove	pintos/src/lib/kernel/list.c	/^list_remove (struct list_elem *elem)$/;"	f	typeref:struct:list_elem *
list_rend	pintos/src/lib/kernel/list.c	/^list_rend (struct list *list) $/;"	f	typeref:struct:list_elem *
list_reverse	pintos/src/lib/kernel/list.c	/^list_reverse (struct list *list)$/;"	f	typeref:typename:void
list_size	pintos/src/lib/kernel/list.c	/^list_size (struct list *list)$/;"	f	typeref:typename:size_t
list_sort	pintos/src/lib/kernel/list.c	/^list_sort (struct list *list, list_less_func *less, void *aux)$/;"	f	typeref:typename:void
list_splice	pintos/src/lib/kernel/list.c	/^list_splice (struct list_elem *before,$/;"	f	typeref:typename:void
list_tail	pintos/src/lib/kernel/list.c	/^list_tail (struct list *list) $/;"	f	typeref:struct:list_elem *
list_unique	pintos/src/lib/kernel/list.c	/^list_unique (struct list *list, struct list *duplicates,$/;"	f	typeref:typename:void
load	pintos/src/userprog/process.c	/^load (const char *file_name, void (**eip) (void), void **esp) $/;"	f	typeref:typename:bool
load_segment	pintos/src/userprog/process.c	/^load_segment (struct file *file, off_t ofs, uint8_t *upage,$/;"	f	typeref:typename:bool	file:
load_thread	pintos/src/tests/threads/mlfqs-fair.c	/^load_thread (void *ti_) $/;"	f	typeref:typename:void	file:
load_thread	pintos/src/tests/threads/mlfqs-load-60.c	/^load_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
load_thread	pintos/src/tests/threads/mlfqs-load-avg.c	/^load_thread (void *seq_no_) $/;"	f	typeref:typename:void	file:
loader	pintos/src/devices/partition.c	/^      uint8_t loader[446];      \/* Loader, in top-level partition table. *\/$/;"	m	struct:read_partition_table::partition_table	typeref:typename:uint8_t[446]	file:
locate_block_device	pintos/src/threads/init.c	/^locate_block_device (enum block_type role, const char *name)$/;"	f	typeref:typename:void	file:
locate_block_devices	pintos/src/threads/init.c	/^locate_block_devices (void)$/;"	f	typeref:typename:void	file:
lock	pintos/src/devices/ide.c	/^    struct lock lock;           \/* Must acquire to access the controller. *\/$/;"	m	struct:channel	typeref:struct:lock	file:
lock	pintos/src/devices/intq.h	/^    struct lock lock;           \/* Only one thread may wait at once. *\/$/;"	m	struct:intq	typeref:struct:lock
lock	pintos/src/tests/threads/priority-condvar.c	/^static struct lock lock;$/;"	v	typeref:struct:lock	file:
lock	pintos/src/tests/threads/priority-donate-sema.c	/^    struct lock lock;$/;"	m	struct:lock_and_sema	typeref:struct:lock	file:
lock	pintos/src/tests/threads/priority-fifo.c	/^    struct lock *lock;          \/* Lock on output. *\/$/;"	m	struct:simple_thread_data	typeref:struct:lock *	file:
lock	pintos/src/threads/malloc.c	/^    struct lock lock;           \/* Lock. *\/$/;"	m	struct:desc	typeref:struct:lock	file:
lock	pintos/src/threads/palloc.c	/^    struct lock lock;                   \/* Mutual exclusion. *\/$/;"	m	struct:pool	typeref:struct:lock	file:
lock	pintos/src/threads/synch.h	/^struct lock $/;"	s
lock_acquire	pintos/src/threads/synch.c	/^lock_acquire (struct lock *lock)$/;"	f	typeref:typename:void
lock_and_sema	pintos/src/tests/threads/priority-donate-sema.c	/^struct lock_and_sema $/;"	s	file:
lock_held_by_current_thread	pintos/src/threads/synch.c	/^lock_held_by_current_thread (const struct lock *lock) $/;"	f	typeref:typename:bool
lock_init	pintos/src/threads/synch.c	/^lock_init (struct lock *lock)$/;"	f	typeref:typename:void
lock_pair	pintos/src/tests/threads/priority-donate-chain.c	/^struct lock_pair$/;"	s	file:
lock_release	pintos/src/threads/synch.c	/^lock_release (struct lock *lock) $/;"	f	typeref:typename:void
lock_try_acquire	pintos/src/threads/synch.c	/^lock_try_acquire (struct lock *lock)$/;"	f	typeref:typename:bool
locks	pintos/src/tests/threads/priority-donate-nest.c	/^struct locks $/;"	s	file:
lookup	pintos/src/filesys/directory.c	/^lookup (const struct dir *dir, const char *name,$/;"	f	typeref:typename:bool	file:
lookup_page	pintos/src/userprog/pagedir.c	/^lookup_page (uint32_t *pd, const void *vaddr, bool create)$/;"	f	typeref:typename:uint32_t *	file:
loops_SRC	pintos/src/examples/Makefile	/^loops_SRC = loops.c$/;"	m
loops_per_tick	pintos/src/devices/timer.c	/^static unsigned loops_per_tick;$/;"	v	typeref:typename:unsigned	file:
ls_SRC	pintos/src/examples/Makefile	/^ls_SRC = ls.c$/;"	m
m_thread_func	pintos/src/tests/threads/priority-donate-sema.c	/^m_thread_func (void *ls_) $/;"	f	typeref:typename:void	file:
m_thread_func	pintos/src/tests/threads/priority-donate-sema.c	/^static thread_func m_thread_func;$/;"	v	typeref:typename:thread_func	file:
magic	pintos/src/filesys/inode.c	/^    unsigned magic;                     \/* Magic number. *\/$/;"	m	struct:inode_disk	typeref:typename:unsigned	file:
magic	pintos/src/lib/ustar.c	/^    char magic[6];              \/* "ustar\\0" *\/$/;"	m	struct:ustar_header	typeref:typename:char[6]	file:
magic	pintos/src/threads/malloc.c	/^    unsigned magic;             \/* Always set to ARENA_MAGIC. *\/$/;"	m	struct:arena	typeref:typename:unsigned	file:
magic	pintos/src/threads/thread.h	/^    unsigned magic;                     \/* Detects stack overflow. *\/$/;"	m	struct:thread	typeref:typename:unsigned
main	pintos/src/examples/bgrun.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/bubsort.c	/^main (void)$/;"	f	typeref:typename:int
main	pintos/src/examples/calc.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/cat.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/checkseq.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/cmp.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/cp.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/digset.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/echo.c	/^main (int argc, char **argv)$/;"	f	typeref:typename:int
main	pintos/src/examples/editor.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/fsinfo.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/halt.c	/^main (void)$/;"	f	typeref:typename:int
main	pintos/src/examples/hanoi.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/hex-dump.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/insult.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	pintos/src/examples/iplog.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/kjump.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/knight.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/lineup.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	pintos/src/examples/loops.c	/^main(int argc, const char* argv[])$/;"	f	typeref:typename:int
main	pintos/src/examples/ls.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/matmult.c	/^main (void)$/;"	f	typeref:typename:int
main	pintos/src/examples/mcat.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/mcp.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/memstat.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/mkdir.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/nodnok.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/nsum.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/primes.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/psinfo.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/pwd.c	/^main (void) $/;"	f	typeref:typename:int
main	pintos/src/examples/queen.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/recursor.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	pintos/src/examples/replace.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/rm.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/examples/rndgen.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/shell.c	/^main (void)$/;"	f	typeref:typename:int
main	pintos/src/examples/snconv.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/sortdig.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/subsets.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/examples/translate.c	/^main(int argc UNUSED, const char* argv[] UNUSED)$/;"	f	typeref:typename:int
main	pintos/src/tests/cksum.c	/^main (void) $/;"	f	typeref:typename:int
main	pintos/src/tests/filesys/base/child-syn-read.c	/^main (int argc, const char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/filesys/base/child-syn-wrt.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	pintos/src/tests/filesys/extended/child-syn-rw.c	/^main (int argc, const char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/filesys/extended/tar.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/main.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/userprog/args.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/userprog/child-close.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/userprog/child-rox.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/userprog/child-simple.c	/^main (void) $/;"	f	typeref:typename:int
main	pintos/src/tests/userprog/multi-recurse.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/userprog/no-vm/multi-oom.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	pintos/src/tests/vm/child-linear.c	/^main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	pintos/src/tests/vm/child-qsort-mm.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/vm/child-qsort.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/tests/vm/child-sort.c	/^main (int argc UNUSED, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/threads/init.c	/^main (void)$/;"	f	typeref:typename:int
main	pintos/src/utils/setitimer-helper.c	/^main (int argc, char *argv[]) $/;"	f	typeref:typename:int
main	pintos/src/utils/squish-pty.c	/^main (int argc __attribute__ ((unused)), char *argv[])$/;"	f	typeref:typename:int
main	pintos/src/utils/squish-unix.c	/^main (int argc __attribute__ ((unused)), char *argv[])$/;"	f	typeref:typename:int
make_code_desc	pintos/src/userprog/gdt.c	/^make_code_desc (int dpl)$/;"	f	typeref:typename:uint64_t	file:
make_data_desc	pintos/src/userprog/gdt.c	/^make_data_desc (int dpl)$/;"	f	typeref:typename:uint64_t	file:
make_gate	pintos/src/threads/interrupt.c	/^make_gate (void (*function) (void), int dpl, int type)$/;"	f	typeref:typename:uint64_t	file:
make_gdtr_operand	pintos/src/userprog/gdt.c	/^make_gdtr_operand (uint16_t limit, void *base)$/;"	f	typeref:typename:uint64_t	file:
make_idtr_operand	pintos/src/threads/interrupt.c	/^make_idtr_operand (uint16_t limit, void *base)$/;"	f	typeref:typename:uint64_t	file:
make_intr_gate	pintos/src/threads/interrupt.c	/^make_intr_gate (void (*function) (void), int dpl)$/;"	f	typeref:typename:uint64_t	file:
make_nonblocking	pintos/src/utils/squish-pty.c	/^make_nonblocking (int fd, bool nonblocking) $/;"	f	typeref:typename:void	file:
make_nonblocking	pintos/src/utils/squish-unix.c	/^make_nonblocking (int fd, bool nonblocking) $/;"	f	typeref:typename:void	file:
make_noncanon	pintos/src/utils/squish-pty.c	/^make_noncanon (int fd, int vmin, int vtime)$/;"	f	typeref:typename:void	file:
make_noncanon	pintos/src/utils/squish-unix.c	/^make_noncanon (int fd, int vmin, int vtime)$/;"	f	typeref:typename:void	file:
make_seg_desc	pintos/src/userprog/gdt.c	/^make_seg_desc (uint32_t base,$/;"	f	typeref:typename:uint64_t	file:
make_tar_archive	pintos/src/tests/filesys/extended/tar.c	/^make_tar_archive (const char *archive_name, char *files[], size_t file_cnt) $/;"	f	typeref:typename:bool	file:
make_trap_gate	pintos/src/threads/interrupt.c	/^make_trap_gate (void (*function) (void), int dpl)$/;"	f	typeref:typename:uint64_t	file:
make_tree	pintos/src/tests/filesys/extended/mk-tree.c	/^make_tree (int at, int bt, int ct, int dt) $/;"	f	typeref:typename:void
make_tss_desc	pintos/src/userprog/gdt.c	/^make_tss_desc (void *laddr)$/;"	f	typeref:typename:uint64_t	file:
malloc	pintos/src/threads/malloc.c	/^malloc (size_t size) $/;"	f	typeref:typename:void *
malloc_init	pintos/src/threads/malloc.c	/^malloc_init (void) $/;"	f	typeref:typename:void
man	pintos/src/tests/threads/shower.c	/^static void man(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
map_key	pintos/src/devices/kbd.c	/^map_key (const struct keymap k[], unsigned scancode, uint8_t *c) $/;"	f	typeref:typename:bool	file:
mapid_t	pintos/src/lib/user/syscall.h	/^typedef int mapid_t;$/;"	t	typeref:typename:int
matches	pintos/src/tests/threads/smokers.c	/^   matches$/;"	e	enum:component	file:
matmult_SRC	pintos/src/examples/Makefile	/^matmult_SRC = matmult.c$/;"	m
max_length	pintos/src/lib/stdio.c	/^    int max_length;     \/* Max length of output string. *\/$/;"	m	struct:vsnprintf_aux	typeref:typename:int	file:
mcat_SRC	pintos/src/examples/Makefile	/^mcat_SRC = mcat.c$/;"	m
mcp_SRC	pintos/src/examples/Makefile	/^mcp_SRC = mcp.c$/;"	m
mediator	pintos/src/tests/threads/smokers.c	/^static void mediator(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
medium_thread_func	pintos/src/tests/threads/priority-donate-nest.c	/^medium_thread_func (void *locks_) $/;"	f	typeref:typename:void	file:
medium_thread_func	pintos/src/tests/threads/priority-donate-nest.c	/^static thread_func medium_thread_func;$/;"	v	typeref:typename:thread_func	file:
memchr	pintos/src/lib/string.c	/^memchr (const void *block_, int ch_, size_t size) $/;"	f	typeref:typename:void *
memcmp	pintos/src/lib/string.c	/^memcmp (const void *a_, const void *b_, size_t size) $/;"	f	typeref:typename:int
memcpy	pintos/src/lib/string.c	/^memcpy (void *dst_, const void *src_, size_t size) $/;"	f	typeref:typename:void *
memmove	pintos/src/lib/string.c	/^memmove (void *dst_, const void *src_, size_t size) $/;"	f	typeref:typename:void *
memset	pintos/src/lib/string.c	/^memset (void *dst_, int value, size_t size) $/;"	f	typeref:typename:void *
memstat_SRC	pintos/src/examples/Makefile	/^memstat_SRC = memstat.c$/;"	m
merge	pintos/src/tests/vm/page-merge-seq.c	/^merge (void) $/;"	f	typeref:typename:void	file:
merge	pintos/src/tests/vm/parallel-merge.c	/^merge (void) $/;"	f	typeref:typename:void	file:
metaphor	pintos/src/examples/insult.c	/^char *metaphor[] =$/;"	v	typeref:typename:char * []
metaphorLoc	pintos/src/examples/insult.c	/^char metaphorLoc[] = { 6, 0, 3, 5, 7, 9, 20, 23 };$/;"	v	typeref:typename:char[]
mkdir	pintos/src/lib/user/syscall.c	/^mkdir (const char *dir)$/;"	f	typeref:typename:bool
mkdir_SRC	pintos/src/examples/Makefile	/^mkdir_SRC = mkdir.c$/;"	m
mmap	pintos/src/lib/user/syscall.c	/^mmap (int fd, void *addr)$/;"	f	typeref:typename:mapid_t
mode	pintos/src/devices/serial.c	/^static enum { UNINIT, POLL, QUEUE } mode;$/;"	v	typeref:enum:__anonf98f680b0103	file:
mode	pintos/src/lib/ustar.c	/^    char mode[8];               \/* Permissions as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
move_cursor	pintos/src/devices/vga.c	/^move_cursor (void) $/;"	f	typeref:typename:void	file:
msg	pintos/src/tests/lib.c	/^msg (const char *format, ...) $/;"	f	typeref:typename:void
msg	pintos/src/tests/threads/tests.c	/^msg (const char *format, ...) $/;"	f	typeref:typename:void
mtime	pintos/src/lib/ustar.c	/^    char mtime[12];             \/* Modification time in seconds$/;"	m	struct:ustar_header	typeref:typename:char[12]	file:
munmap	pintos/src/lib/user/syscall.c	/^munmap (mapid_t mapid)$/;"	f	typeref:typename:void
name	pintos/src/devices/block.c	/^    char name[16];                      \/* Block device name. *\/$/;"	m	struct:block	typeref:typename:char[16]	file:
name	pintos/src/devices/ide.c	/^    char name[8];               \/* Name, e.g. "hda". *\/$/;"	m	struct:ata_disk	typeref:typename:char[8]	file:
name	pintos/src/devices/ide.c	/^    char name[8];               \/* Name, e.g. "ide0". *\/$/;"	m	struct:channel	typeref:typename:char[8]	file:
name	pintos/src/examples/insult.c	/^char *name[] =$/;"	v	typeref:typename:char * []
name	pintos/src/filesys/directory.c	/^    char name[NAME_MAX + 1];            \/* Null terminated file name. *\/$/;"	m	struct:dir_entry	typeref:typename:char[]	file:
name	pintos/src/lib/ustar.c	/^    char name[100];             \/* File name.  Null-terminated if room. *\/$/;"	m	struct:ustar_header	typeref:typename:char[100]	file:
name	pintos/src/tests/threads/tests.c	/^    const char *name;$/;"	m	struct:test	typeref:typename:const char *	file:
name	pintos/src/threads/init.c	/^      char *name;                       \/* Action name. *\/$/;"	m	struct:run_actions::action	typeref:typename:char *	file:
name	pintos/src/threads/thread.h	/^    char name[16];                      \/* Name (for debugging purposes). *\/$/;"	m	struct:thread	typeref:typename:char[16]
nameLoc	pintos/src/examples/insult.c	/^char nameLoc[] = { 7, 0, 1, 6, 10, 16, 21, 23, 27 };$/;"	v	typeref:typename:char[]
narrow_bridge_init	pintos/src/tests/threads/narrow-bridge.c	/^void narrow_bridge_init(void)$/;"	f	typeref:typename:void
newline	pintos/src/devices/vga.c	/^newline (void)$/;"	f	typeref:typename:void	file:
next	pintos/src/devices/intq.c	/^next (int pos) $/;"	f	typeref:typename:int	file:
next	pintos/src/lib/kernel/list.h	/^    struct list_elem *next;     \/* Next list element. *\/$/;"	m	struct:list_elem	typeref:struct:list_elem *
next	pintos/src/threads/switch.h	/^    struct thread *next;        \/* 24: switch_threads()'s NEXT argument. *\/$/;"	m	struct:switch_threads_frame	typeref:struct:thread *
next_thread_to_run	pintos/src/threads/thread.c	/^next_thread_to_run (void) $/;"	f	typeref:struct:thread *	file:
nice	pintos/src/tests/threads/mlfqs-fair.c	/^    int nice;$/;"	m	struct:thread_info	typeref:typename:int	file:
nlz	pintos/src/lib/arithmetic.c	/^nlz (uint32_t x) $/;"	f	typeref:typename:int	file:
nodnok_SRC	pintos/src/examples/Makefile	/^nodnok_SRC = nodnok.c$/;"	m
not_empty	pintos/src/devices/intq.h	/^    struct thread *not_empty;   \/* Thread waiting for not-empty condition. *\/$/;"	m	struct:intq	typeref:struct:thread *
not_full	pintos/src/devices/intq.h	/^    struct thread *not_full;    \/* Thread waiting for not-full condition. *\/$/;"	m	struct:intq	typeref:struct:thread *
noun	pintos/src/examples/insult.c	/^char *noun[] =$/;"	v	typeref:typename:char * []
nounLoc	pintos/src/examples/insult.c	/^char nounLoc[] = { 13, 0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v	typeref:typename:char[]
noun_and_prep	pintos/src/examples/insult.c	/^char *noun_and_prep[] =$/;"	v	typeref:typename:char * []
noun_and_prepLoc	pintos/src/examples/insult.c	/^char noun_and_prepLoc[] =$/;"	v	typeref:typename:char[]
nsum_SRC	pintos/src/examples/Makefile	/^nsum_SRC = nsum.c$/;"	m
numbers	pintos/src/examples/insult.c	/^char *numbers[] =$/;"	v	typeref:typename:char * []
numbersLoc	pintos/src/examples/insult.c	/^char numbersLoc[] = { 7, 0, 2, 4, 5, 7, 8, 10, 13 };$/;"	v	typeref:typename:char[]
off_t	pintos/src/filesys/off_t.h	/^typedef int32_t off_t;$/;"	t	typeref:typename:int32_t
offset	pintos/src/devices/partition.c	/^      uint32_t offset;          \/* Start sector offset from partition table. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint32_t	file:
offsetof	pintos/src/lib/stddef.h	/^#define offsetof(/;"	d
ofs	pintos/src/utils/squish-pty.c	/^      size_t size, ofs;$/;"	m	struct:relay::pipe	typeref:typename:size_t	file:
ofs	pintos/src/utils/squish-unix.c	/^      size_t size, ofs;$/;"	m	struct:relay::pipe	typeref:typename:size_t	file:
one_vehicle	pintos/src/tests/threads/narrow-bridge-test.c	/^void one_vehicle(enum car_priority prio, enum car_direction dir)$/;"	f	typeref:typename:void
op	pintos/src/tests/threads/priority-fifo.c	/^    int **op;                   \/* Output buffer position. *\/$/;"	m	struct:simple_thread_data	typeref:typename:int **	file:
open	pintos/src/lib/user/syscall.c	/^open (const char *file)$/;"	f	typeref:typename:int
open_cnt	pintos/src/filesys/inode.c	/^    int open_cnt;                       \/* Number of openers. *\/$/;"	m	struct:inode	typeref:typename:int	file:
open_inodes	pintos/src/filesys/inode.c	/^static struct list open_inodes;$/;"	v	typeref:struct:list	file:
ops	pintos/src/devices/block.c	/^    const struct block_operations *ops;  \/* Driver operations. *\/$/;"	m	struct:block	typeref:typename:const struct block_operations *	file:
organics	pintos/src/examples/insult.c	/^char *organics[] =$/;"	v	typeref:typename:char * []
organicsLoc	pintos/src/examples/insult.c	/^char organicsLoc[] =$/;"	v	typeref:typename:char[]
out	pintos/src/utils/squish-pty.c	/^      int in, out;$/;"	m	struct:relay::pipe	typeref:typename:int	file:
out	pintos/src/utils/squish-unix.c	/^      int in, out;$/;"	m	struct:relay::pipe	typeref:typename:int	file:
outb	pintos/src/threads/io.h	/^outb (uint16_t port, uint8_t data)$/;"	f	typeref:typename:void
outl	pintos/src/threads/io.h	/^outl (uint16_t port, uint32_t data)$/;"	f	typeref:typename:void
output_dup	pintos/src/lib/stdio.c	/^output_dup (char ch, size_t cnt, void (*output) (char, void *), void *aux) $/;"	f	typeref:typename:void	file:
output_lock	pintos/src/tests/threads/alarm-wait.c	/^    struct lock output_lock;    \/* Lock protecting output buffer. *\/$/;"	m	struct:sleep_test	typeref:struct:lock	file:
output_pos	pintos/src/tests/threads/alarm-simultaneous.c	/^    int *output_pos;            \/* Current position in output buffer. *\/$/;"	m	struct:sleep_test	typeref:typename:int *	file:
output_pos	pintos/src/tests/threads/alarm-wait.c	/^    int *output_pos;            \/* Current position in output buffer. *\/$/;"	m	struct:sleep_test	typeref:typename:int *	file:
output_sector	pintos/src/devices/ide.c	/^output_sector (struct channel *c, const void *sector) $/;"	f	typeref:typename:void	file:
outsb	pintos/src/threads/io.h	/^outsb (uint16_t port, const void *addr, size_t cnt)$/;"	f	typeref:typename:void
outsl	pintos/src/threads/io.h	/^outsl (uint16_t port, const void *addr, size_t cnt)$/;"	f	typeref:typename:void
outsw	pintos/src/threads/io.h	/^outsw (uint16_t port, const void *addr, size_t cnt)$/;"	f	typeref:typename:void
outw	pintos/src/threads/io.h	/^outw (uint16_t port, uint16_t data)$/;"	f	typeref:typename:void
oxygen	pintos/src/tests/threads/molec.c	/^static void oxygen(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
p	pintos/src/lib/stdio.c	/^    char *p;            \/* Current output position. *\/$/;"	m	struct:vsnprintf_aux	typeref:typename:char *	file:
p	pintos/src/lib/user/console.c	/^    char *p;            \/* Current position in buffer. *\/$/;"	m	struct:vhprintf_aux	typeref:typename:char *	file:
p_align	pintos/src/userprog/process.c	/^    Elf32_Word p_align;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_filesz	pintos/src/userprog/process.c	/^    Elf32_Word p_filesz;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_flags	pintos/src/userprog/process.c	/^    Elf32_Word p_flags;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_memsz	pintos/src/userprog/process.c	/^    Elf32_Word p_memsz;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_offset	pintos/src/userprog/process.c	/^    Elf32_Off  p_offset;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Off	file:
p_paddr	pintos/src/userprog/process.c	/^    Elf32_Addr p_paddr;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Addr	file:
p_type	pintos/src/userprog/process.c	/^    Elf32_Word p_type;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Word	file:
p_vaddr	pintos/src/userprog/process.c	/^    Elf32_Addr p_vaddr;$/;"	m	struct:Elf32_Phdr	typeref:typename:Elf32_Addr	file:
padding	pintos/src/lib/ustar.c	/^    char padding[12];           \/* Pad to 512 bytes. *\/$/;"	m	struct:ustar_header	typeref:typename:char[12]	file:
page_fault	pintos/src/userprog/exception.c	/^page_fault (struct intr_frame *f) $/;"	f	typeref:typename:void	file:
page_fault_cnt	pintos/src/userprog/exception.c	/^static long long page_fault_cnt;$/;"	v	typeref:typename:long long	file:
page_from_pool	pintos/src/threads/palloc.c	/^page_from_pool (const struct pool *pool, void *page) $/;"	f	typeref:typename:bool	file:
pagedir	pintos/src/threads/thread.h	/^    uint32_t *pagedir;                  \/* Page directory. *\/$/;"	m	struct:thread	typeref:typename:uint32_t *
pagedir_activate	pintos/src/userprog/pagedir.c	/^pagedir_activate (uint32_t *pd) $/;"	f	typeref:typename:void
pagedir_clear_page	pintos/src/userprog/pagedir.c	/^pagedir_clear_page (uint32_t *pd, void *upage) $/;"	f	typeref:typename:void
pagedir_create	pintos/src/userprog/pagedir.c	/^pagedir_create (void) $/;"	f	typeref:typename:uint32_t *
pagedir_destroy	pintos/src/userprog/pagedir.c	/^pagedir_destroy (uint32_t *pd) $/;"	f	typeref:typename:void
pagedir_get_page	pintos/src/userprog/pagedir.c	/^pagedir_get_page (uint32_t *pd, const void *uaddr) $/;"	f	typeref:typename:void *
pagedir_is_accessed	pintos/src/userprog/pagedir.c	/^pagedir_is_accessed (uint32_t *pd, const void *vpage) $/;"	f	typeref:typename:bool
pagedir_is_dirty	pintos/src/userprog/pagedir.c	/^pagedir_is_dirty (uint32_t *pd, const void *vpage) $/;"	f	typeref:typename:bool
pagedir_set_accessed	pintos/src/userprog/pagedir.c	/^pagedir_set_accessed (uint32_t *pd, const void *vpage, bool accessed) $/;"	f	typeref:typename:void
pagedir_set_dirty	pintos/src/userprog/pagedir.c	/^pagedir_set_dirty (uint32_t *pd, const void *vpage, bool dirty) $/;"	f	typeref:typename:void
pagedir_set_page	pintos/src/userprog/pagedir.c	/^pagedir_set_page (uint32_t *pd, void *upage, void *kpage, bool writable)$/;"	f	typeref:typename:bool
paging_init	pintos/src/threads/init.c	/^paging_init (void)$/;"	f	typeref:typename:void	file:
palloc_flags	pintos/src/threads/palloc.h	/^enum palloc_flags$/;"	g
palloc_free_multiple	pintos/src/threads/palloc.c	/^palloc_free_multiple (void *pages, size_t page_cnt) $/;"	f	typeref:typename:void
palloc_free_page	pintos/src/threads/palloc.c	/^palloc_free_page (void *page) $/;"	f	typeref:typename:void
palloc_get_multiple	pintos/src/threads/palloc.c	/^palloc_get_multiple (enum palloc_flags flags, size_t page_cnt)$/;"	f	typeref:typename:void *
palloc_get_page	pintos/src/threads/palloc.c	/^palloc_get_page (enum palloc_flags flags) $/;"	f	typeref:typename:void *
palloc_init	pintos/src/threads/palloc.c	/^palloc_init (size_t user_page_limit)$/;"	f	typeref:typename:void
paper	pintos/src/tests/threads/smokers.c	/^   paper = 0,$/;"	e	enum:component	file:
parallel_merge	pintos/src/tests/vm/parallel-merge.c	/^parallel_merge (const char *child_name, int exit_status)$/;"	f	typeref:typename:void
parse_conversion	pintos/src/lib/stdio.c	/^parse_conversion (const char *format, struct printf_conversion *c,$/;"	f	typeref:typename:const char *	file:
parse_octal_field	pintos/src/lib/ustar.c	/^parse_octal_field (const char *s, size_t size, unsigned long int *value)$/;"	f	typeref:typename:bool	file:
parse_options	pintos/src/threads/init.c	/^parse_options (char **argv) $/;"	f	typeref:typename:char **	file:
partition	pintos/src/devices/partition.c	/^struct partition$/;"	s	file:
partition	pintos/src/tests/vm/qsort.c	/^partition (unsigned char *array, size_t size, int pivot) $/;"	f	typeref:typename:size_t	file:
partition_operations	pintos/src/devices/partition.c	/^static struct block_operations partition_operations =$/;"	v	typeref:struct:block_operations	file:
partition_operations	pintos/src/devices/partition.c	/^static struct block_operations partition_operations;$/;"	v	typeref:struct:block_operations	file:
partition_read	pintos/src/devices/partition.c	/^partition_read (void *p_, block_sector_t sector, void *buffer)$/;"	f	typeref:typename:void	file:
partition_scan	pintos/src/devices/partition.c	/^partition_scan (struct block *block)$/;"	f	typeref:typename:void
partition_table	pintos/src/devices/partition.c	/^  struct partition_table$/;"	s	function:read_partition_table	file:
partition_table_entry	pintos/src/devices/partition.c	/^  struct partition_table_entry$/;"	s	function:read_partition_table	file:
partition_type_name	pintos/src/devices/partition.c	/^partition_type_name (uint8_t type)$/;"	f	typeref:typename:const char *	file:
partition_write	pintos/src/devices/partition.c	/^partition_write (void *p_, block_sector_t sector, const void *buffer)$/;"	f	typeref:typename:void	file:
partitions	pintos/src/devices/partition.c	/^      struct partition_table_entry partitions[4];       \/* Table entries. *\/$/;"	m	struct:read_partition_table::partition_table	typeref:struct:partition_table_entry[4]	file:
pass	pintos/src/tests/threads/tests.c	/^pass (void) $/;"	f	typeref:typename:void
passenger	pintos/src/tests/threads/rolcoast.c	/^static void passenger(void* arg)$/;"	f	typeref:typename:void	file:
pd_no	pintos/src/threads/pte.h	/^static inline uintptr_t pd_no (const void *va) {$/;"	f	typeref:typename:uintptr_t
pde_create	pintos/src/threads/pte.h	/^static inline uint32_t pde_create (uint32_t *pt) {$/;"	f	typeref:typename:uint32_t
pde_get_pt	pintos/src/threads/pte.h	/^static inline uint32_t *pde_get_pt (uint32_t pde) {$/;"	f	typeref:typename:uint32_t *
pg_no	pintos/src/threads/vaddr.h	/^static inline uintptr_t pg_no (const void *va) {$/;"	f	typeref:typename:uintptr_t
pg_ofs	pintos/src/threads/vaddr.h	/^static inline unsigned pg_ofs (const void *va) {$/;"	f	typeref:typename:unsigned
pg_round_down	pintos/src/threads/vaddr.h	/^static inline void *pg_round_down (const void *va) {$/;"	f	typeref:typename:void *
pg_round_up	pintos/src/threads/vaddr.h	/^static inline void *pg_round_up (const void *va) {$/;"	f	typeref:typename:void *
pic_end_of_interrupt	pintos/src/threads/interrupt.c	/^pic_end_of_interrupt (int irq) $/;"	f	typeref:typename:void	file:
pic_init	pintos/src/threads/interrupt.c	/^pic_init (void)$/;"	f	typeref:typename:void	file:
pick_pivot	pintos/src/tests/vm/qsort.c	/^pick_pivot (unsigned char *buf, size_t size) $/;"	f	typeref:typename:unsigned char	file:
pid_t	pintos/src/lib/user/syscall.h	/^typedef int pid_t;$/;"	t	typeref:typename:int
pipe	pintos/src/utils/squish-pty.c	/^  struct pipe $/;"	s	function:relay	file:
pipe	pintos/src/utils/squish-unix.c	/^  struct pipe $/;"	s	function:relay	file:
pit_configure_channel	pintos/src/devices/pit.c	/^pit_configure_channel (int channel, int mode, int frequency)$/;"	f	typeref:typename:void
place	pintos/src/examples/insult.c	/^char *place[] =$/;"	v	typeref:typename:char * []
placeLoc	pintos/src/examples/insult.c	/^char placeLoc[] = { 5, 0, 3, 7, 11, 17, 20 };$/;"	v	typeref:typename:char[]
pool	pintos/src/threads/palloc.c	/^struct pool$/;"	s	file:
pos	pintos/src/filesys/directory.c	/^    off_t pos;                          \/* Current position. *\/$/;"	m	struct:dir	typeref:typename:off_t	file:
pos	pintos/src/filesys/file.c	/^    off_t pos;                  \/* Current position. *\/$/;"	m	struct:file	typeref:typename:off_t	file:
precision	pintos/src/lib/stdio.c	/^    int precision;$/;"	m	struct:printf_conversion	typeref:typename:int	file:
prefix	pintos/src/lib/ustar.c	/^    char prefix[155];           \/* Prefix to file name.$/;"	m	struct:ustar_header	typeref:typename:char[155]	file:
prepend	pintos/src/examples/pwd.c	/^prepend (const char *prefix,$/;"	f	typeref:typename:bool	file:
prev	pintos/src/lib/kernel/list.h	/^    struct list_elem *prev;     \/* Previous list element. *\/$/;"	m	struct:list_elem	typeref:struct:list_elem *
primes_SRC	pintos/src/examples/Makefile	/^primes_SRC = primes.c$/;"	m
print_human_readable_size	pintos/src/lib/stdio.c	/^print_human_readable_size (uint64_t size) $/;"	f	typeref:typename:void
print_stacktrace	pintos/src/lib/kernel/debug.c	/^print_stacktrace(struct thread *t, void *aux UNUSED)$/;"	f	typeref:typename:void	file:
print_stats	pintos/src/devices/shutdown.c	/^print_stats (void)$/;"	f	typeref:typename:void	file:
printf	pintos/src/lib/stdio.c	/^printf (const char *format, ...) $/;"	f	typeref:typename:int
printf_conversion	pintos/src/lib/stdio.c	/^struct printf_conversion $/;"	s	file:
priority	pintos/src/threads/thread.h	/^    int priority;                       \/* Priority. *\/$/;"	m	struct:thread	typeref:typename:int
priority_condvar_thread	pintos/src/tests/threads/priority-condvar.c	/^priority_condvar_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
priority_condvar_thread	pintos/src/tests/threads/priority-condvar.c	/^static thread_func priority_condvar_thread;$/;"	v	typeref:typename:thread_func	file:
priority_sema_thread	pintos/src/tests/threads/priority-sema.c	/^priority_sema_thread (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
priority_sema_thread	pintos/src/tests/threads/priority-sema.c	/^static thread_func priority_sema_thread;$/;"	v	typeref:typename:thread_func	file:
process_activate	pintos/src/userprog/process.c	/^process_activate (void)$/;"	f	typeref:typename:void
process_execute	pintos/src/userprog/process.c	/^process_execute (const char *file_name) $/;"	f	typeref:typename:tid_t
process_exit	pintos/src/userprog/process.c	/^process_exit (void)$/;"	f	typeref:typename:void
process_wait	pintos/src/userprog/process.c	/^process_wait (tid_t child_tid UNUSED) $/;"	f	typeref:typename:int
psinfo_SRC	pintos/src/examples/Makefile	/^psinfo_SRC = psinfo.c$/;"	m
pt_no	pintos/src/threads/pte.h	/^static inline unsigned pt_no (const void *va) {$/;"	f	typeref:typename:unsigned
pte_create_kernel	pintos/src/threads/pte.h	/^static inline uint32_t pte_create_kernel (void *page, bool writable) {$/;"	f	typeref:typename:uint32_t
pte_create_user	pintos/src/threads/pte.h	/^static inline uint32_t pte_create_user (void *page, bool writable) {$/;"	f	typeref:typename:uint32_t
pte_get_page	pintos/src/threads/pte.h	/^static inline void *pte_get_page (uint32_t pte) {$/;"	f	typeref:typename:void *
ptov	pintos/src/threads/vaddr.h	/^ptov (uintptr_t paddr)$/;"	f	typeref:typename:void *
ptrdiff_t	pintos/src/lib/stddef.h	/^typedef __PTRDIFF_TYPE__ ptrdiff_t;$/;"	t	typeref:typename:__PTRDIFF_TYPE__
putbuf	pintos/src/lib/kernel/console.c	/^putbuf (const char *buffer, size_t n) $/;"	f	typeref:typename:void
putc_poll	pintos/src/devices/serial.c	/^putc_poll (uint8_t byte) $/;"	f	typeref:typename:void	file:
putchar	pintos/src/lib/kernel/console.c	/^putchar (int c) $/;"	f	typeref:typename:int
putchar	pintos/src/lib/user/console.c	/^putchar (int c) $/;"	f	typeref:typename:int
putchar_have_lock	pintos/src/lib/kernel/console.c	/^putchar_have_lock (uint8_t c) $/;"	f	typeref:typename:void	file:
puts	pintos/src/lib/kernel/console.c	/^puts (const char *s) $/;"	f	typeref:typename:int
puts	pintos/src/lib/user/console.c	/^puts (const char *s) $/;"	f	typeref:typename:int
pwd_SRC	pintos/src/examples/Makefile	/^pwd_SRC = pwd.c$/;"	m
qsort	pintos/src/lib/stdlib.c	/^qsort (void *array, size_t cnt, size_t size,$/;"	f	typeref:typename:void
qsort_bytes	pintos/src/tests/vm/qsort.c	/^qsort_bytes (unsigned char *buf, size_t size) $/;"	f	typeref:typename:void
quantity	pintos/src/examples/insult.c	/^char *quantity[] =$/;"	v	typeref:typename:char * []
quantityLoc	pintos/src/examples/insult.c	/^char quantityLoc[] = { 10, 0, 4, 8, 11, 14, 15, 18, 22, 26, 32, 33 };$/;"	v	typeref:typename:char[]
queen_SRC	pintos/src/examples/Makefile	/^queen_SRC = queen.c$/;"	m
quiet	pintos/src/tests/lib.c	/^bool quiet = false;$/;"	v	typeref:typename:bool
random_bytes	pintos/src/lib/random.c	/^random_bytes (void *buf_, size_t size) $/;"	f	typeref:typename:void
random_init	pintos/src/lib/random.c	/^random_init (unsigned seed)$/;"	f	typeref:typename:void
random_ulong	pintos/src/lib/random.c	/^random_ulong (void) $/;"	f	typeref:typename:unsigned long
read	pintos/src/devices/block.h	/^    void (*read) (void *aux, block_sector_t, void *buffer);$/;"	m	struct:block_operations	typeref:typename:void (*)(void * aux,block_sector_t,void * buffer)
read	pintos/src/lib/user/syscall.c	/^read (int fd, void *buffer, unsigned size)$/;"	f	typeref:typename:int
read_cnt	pintos/src/devices/block.c	/^    unsigned long long read_cnt;        \/* Number of sectors read. *\/$/;"	m	struct:block	typeref:typename:unsigned long long	file:
read_command_line	pintos/src/threads/init.c	/^read_command_line (void) $/;"	f	typeref:typename:char **	file:
read_line	pintos/src/examples/shell.c	/^read_line (char line[], size_t size) $/;"	f	typeref:typename:void	file:
read_partition_table	pintos/src/devices/partition.c	/^read_partition_table (struct block *block, block_sector_t sector,$/;"	f	typeref:typename:void	file:
readdir	pintos/src/lib/user/syscall.c	/^readdir (int fd, char name[READDIR_MAX_LEN + 1]) $/;"	f	typeref:typename:bool
ready_list	pintos/src/threads/thread.c	/^static struct list ready_list;$/;"	v	typeref:struct:list	file:
real_time_delay	pintos/src/devices/timer.c	/^real_time_delay (int64_t num, int32_t denom)$/;"	f	typeref:typename:void	file:
real_time_sleep	pintos/src/devices/timer.c	/^real_time_sleep (int64_t num, int32_t denom) $/;"	f	typeref:typename:void	file:
realloc	pintos/src/threads/malloc.c	/^realloc (void *old_block, size_t new_size) $/;"	f	typeref:typename:void *
recursor_SRC	pintos/src/examples/Makefile	/^recursor_SRC = recursor.c$/;"	m
reg_alt_status	pintos/src/devices/ide.c	/^#define reg_alt_status(/;"	d	file:
reg_base	pintos/src/devices/ide.c	/^    uint16_t reg_base;          \/* Base I\/O port. *\/$/;"	m	struct:channel	typeref:typename:uint16_t	file:
reg_command	pintos/src/devices/ide.c	/^#define reg_command(/;"	d	file:
reg_ctl	pintos/src/devices/ide.c	/^#define reg_ctl(/;"	d	file:
reg_data	pintos/src/devices/ide.c	/^#define reg_data(/;"	d	file:
reg_device	pintos/src/devices/ide.c	/^#define reg_device(/;"	d	file:
reg_error	pintos/src/devices/ide.c	/^#define reg_error(/;"	d	file:
reg_lbah	pintos/src/devices/ide.c	/^#define reg_lbah(/;"	d	file:
reg_lbal	pintos/src/devices/ide.c	/^#define reg_lbal(/;"	d	file:
reg_lbam	pintos/src/devices/ide.c	/^#define reg_lbam(/;"	d	file:
reg_nsect	pintos/src/devices/ide.c	/^#define reg_nsect(/;"	d	file:
reg_status	pintos/src/devices/ide.c	/^#define reg_status(/;"	d	file:
register_handler	pintos/src/threads/interrupt.c	/^register_handler (uint8_t vec_no, int dpl, enum intr_level level,$/;"	f	typeref:typename:void	file:
rehash	pintos/src/lib/kernel/hash.c	/^rehash (struct hash *h) $/;"	f	typeref:typename:void	file:
relation	pintos/src/examples/insult.c	/^char *relation[] =$/;"	v	typeref:typename:char * []
relationLoc	pintos/src/examples/insult.c	/^char relationLoc[] = { 6, 0, 1, 2, 3, 5, 7, 9 };$/;"	v	typeref:typename:char[]
relay	pintos/src/utils/squish-pty.c	/^relay (int pty, int dead_child_fd) $/;"	f	typeref:typename:void	file:
relay	pintos/src/utils/squish-unix.c	/^relay (int sock) $/;"	f	typeref:typename:void	file:
release_console	pintos/src/lib/kernel/console.c	/^release_console (void) $/;"	f	typeref:typename:void	file:
remove	pintos/src/lib/user/syscall.c	/^remove (const char *file)$/;"	f	typeref:typename:bool
remove_elem	pintos/src/lib/kernel/hash.c	/^remove_elem (struct hash *h, struct hash_elem *e) $/;"	f	typeref:typename:void	file:
remove_tree	pintos/src/tests/filesys/extended/dir-rm-tree.c	/^remove_tree (int at, int bt, int ct, int dt) $/;"	f	typeref:typename:void	file:
removed	pintos/src/filesys/inode.c	/^    bool removed;                       \/* True if deleted, false otherwise. *\/$/;"	m	struct:inode	typeref:typename:bool	file:
replace_SRC	pintos/src/examples/Makefile	/^replace_SRC = replace.c$/;"	m
reset_channel	pintos/src/devices/ide.c	/^reset_channel (struct channel *c) $/;"	f	typeref:typename:void	file:
return_block_size	pintos/src/tests/filesys/extended/grow-file-size.c	/^return_block_size (void) $/;"	f	typeref:typename:size_t	file:
return_block_size	pintos/src/tests/filesys/extended/grow-tell.c	/^return_block_size (void) $/;"	f	typeref:typename:size_t	file:
right_alt	pintos/src/devices/kbd.c	/^static bool left_alt, right_alt;        \/* Left and right Alt keys. *\/$/;"	v	typeref:typename:bool	file:
right_ctrl	pintos/src/devices/kbd.c	/^static bool left_ctrl, right_ctrl;      \/* Left and right Ctl keys. *\/$/;"	v	typeref:typename:bool	file:
right_shift	pintos/src/devices/kbd.c	/^static bool left_shift, right_shift;    \/* Left and right Shift keys. *\/$/;"	v	typeref:typename:bool	file:
rm_SRC	pintos/src/examples/Makefile	/^rm_SRC = rm.c$/;"	m
rndgen_SRC	pintos/src/examples/Makefile	/^rndgen_SRC = rndgen.c$/;"	m
rtc_get_time	pintos/src/devices/rtc.c	/^rtc_get_time (void)$/;"	f	typeref:typename:time_t
run_actions	pintos/src/threads/init.c	/^run_actions (char **argv) $/;"	f	typeref:typename:void	file:
run_task	pintos/src/threads/init.c	/^run_task (char **argv)$/;"	f	typeref:typename:void	file:
run_test	pintos/src/tests/threads/tests.c	/^run_test (const char *name) $/;"	f	typeref:typename:void
running_thread	pintos/src/threads/thread.c	/^running_thread (void) $/;"	f	typeref:struct:thread *
s	pintos/src/lib/random.c	/^static uint8_t s[256];          \/* S[]. *\/$/;"	v	typeref:typename:uint8_t[256]	file:
s	pintos/src/tests/arc4.h	/^    uint8_t s[256];$/;"	m	struct:arc4	typeref:typename:uint8_t[256]
s_i	pintos/src/lib/random.c	/^static uint8_t s_i, s_j;        \/* i, j. *\/$/;"	v	typeref:typename:uint8_t	file:
s_j	pintos/src/lib/random.c	/^static uint8_t s_i, s_j;        \/* i, j. *\/$/;"	v	typeref:typename:uint8_t	file:
scancode	pintos/src/devices/kbd.c	/^          unsigned scancode;$/;"	m	struct:keyboard_interrupt::shift_key	typeref:typename:unsigned	file:
schedule	pintos/src/threads/thread.c	/^schedule (void) $/;"	f	typeref:typename:void	file:
scratch_bdev_name	pintos/src/threads/init.c	/^static const char *scratch_bdev_name;$/;"	v	typeref:typename:const char *	file:
sdiv64	pintos/src/lib/arithmetic.c	/^sdiv64 (int64_t n, int64_t d)$/;"	f	typeref:typename:int64_t	file:
second	pintos/src/tests/threads/priority-donate-chain.c	/^    struct lock *second;$/;"	m	struct:lock_pair	typeref:struct:lock *	file:
sector	pintos/src/filesys/inode.c	/^    block_sector_t sector;              \/* Sector number of disk location. *\/$/;"	m	struct:inode	typeref:typename:block_sector_t	file:
seek	pintos/src/lib/user/syscall.c	/^seek (int fd, unsigned position) $/;"	f	typeref:typename:void
seg_class	pintos/src/userprog/gdt.c	/^enum seg_class$/;"	g	file:
seg_granularity	pintos/src/userprog/gdt.c	/^enum seg_granularity$/;"	g	file:
select_device	pintos/src/devices/ide.c	/^select_device (const struct ata_disk *d)$/;"	f	typeref:typename:void	file:
select_device_wait	pintos/src/devices/ide.c	/^select_device_wait (const struct ata_disk *d) $/;"	f	typeref:typename:void	file:
select_sector	pintos/src/devices/ide.c	/^select_sector (struct ata_disk *d, block_sector_t sec_no)$/;"	f	typeref:typename:void	file:
sema	pintos/src/tests/threads/priority-donate-sema.c	/^    struct semaphore sema;$/;"	m	struct:lock_and_sema	typeref:struct:semaphore	file:
sema	pintos/src/tests/threads/priority-sema.c	/^static struct semaphore sema;$/;"	v	typeref:struct:semaphore	file:
sema_down	pintos/src/threads/synch.c	/^sema_down (struct semaphore *sema) $/;"	f	typeref:typename:void
sema_init	pintos/src/threads/synch.c	/^sema_init (struct semaphore *sema, unsigned value) $/;"	f	typeref:typename:void
sema_self_test	pintos/src/threads/synch.c	/^sema_self_test (void) $/;"	f	typeref:typename:void
sema_test_helper	pintos/src/threads/synch.c	/^sema_test_helper (void *sema_) $/;"	f	typeref:typename:void	file:
sema_try_down	pintos/src/threads/synch.c	/^sema_try_down (struct semaphore *sema) $/;"	f	typeref:typename:bool
sema_up	pintos/src/threads/synch.c	/^sema_up (struct semaphore *sema) $/;"	f	typeref:typename:void
semaphore	pintos/src/threads/synch.c	/^    struct semaphore semaphore;         \/* This semaphore. *\/$/;"	m	struct:semaphore_elem	typeref:struct:semaphore	file:
semaphore	pintos/src/threads/synch.h	/^    struct semaphore semaphore; \/* Binary semaphore controlling access. *\/$/;"	m	struct:lock	typeref:struct:semaphore
semaphore	pintos/src/threads/synch.h	/^struct semaphore $/;"	s
semaphore_elem	pintos/src/threads/synch.c	/^struct semaphore_elem $/;"	s	file:
seq_test	pintos/src/tests/filesys/seq-test.c	/^seq_test (const char *file_name, void *buf, size_t size, size_t initial_size,$/;"	f	typeref:typename:void
serial_flush	pintos/src/devices/serial.c	/^serial_flush (void) $/;"	f	typeref:typename:void
serial_init_queue	pintos/src/devices/serial.c	/^serial_init_queue (void) $/;"	f	typeref:typename:void
serial_interrupt	pintos/src/devices/serial.c	/^serial_interrupt (struct intr_frame *f UNUSED) $/;"	f	typeref:typename:void	file:
serial_interrupt	pintos/src/devices/serial.c	/^static intr_handler_func serial_interrupt;$/;"	v	typeref:typename:intr_handler_func	file:
serial_notify	pintos/src/devices/serial.c	/^serial_notify (void) $/;"	f	typeref:typename:void
serial_putc	pintos/src/devices/serial.c	/^serial_putc (uint8_t byte) $/;"	f	typeref:typename:void
set_serial	pintos/src/devices/serial.c	/^set_serial (int bps)$/;"	f	typeref:typename:void	file:
setitimer-helper	pintos/src/utils/Makefile	/^setitimer-helper: setitimer-helper.o$/;"	t
setup_stack	pintos/src/userprog/process.c	/^setup_stack (void **esp) $/;"	f	typeref:typename:bool	file:
shell_SRC	pintos/src/examples/Makefile	/^shell_SRC = shell.c$/;"	m
shift_key	pintos/src/devices/kbd.c	/^      struct shift_key $/;"	s	function:keyboard_interrupt	file:
shifted_keymap	pintos/src/devices/kbd.c	/^static const struct keymap shifted_keymap[] = $/;"	v	typeref:typename:const struct keymap[]	file:
shuffle	pintos/src/tests/internal/list.c	/^shuffle (struct value *array, size_t cnt) $/;"	f	typeref:typename:void	file:
shuffle	pintos/src/tests/internal/stdlib.c	/^shuffle (int *array, size_t cnt) $/;"	f	typeref:typename:void	file:
shuffle	pintos/src/tests/lib.c	/^shuffle (void *buf_, size_t cnt, size_t size) $/;"	f	typeref:typename:void
shutdown	pintos/src/devices/shutdown.c	/^shutdown (void)$/;"	f	typeref:typename:void
shutdown_configure	pintos/src/devices/shutdown.c	/^shutdown_configure (enum shutdown_type type)$/;"	f	typeref:typename:void
shutdown_power_off	pintos/src/devices/shutdown.c	/^shutdown_power_off (void)$/;"	f	typeref:typename:void
shutdown_reboot	pintos/src/devices/shutdown.c	/^shutdown_reboot (void)$/;"	f	typeref:typename:void
shutdown_type	pintos/src/devices/shutdown.h	/^enum shutdown_type$/;"	g
sigchld_handler	pintos/src/utils/squish-pty.c	/^sigchld_handler (int signo __attribute__ ((unused))) $/;"	f	typeref:typename:void	file:
sigchld_handler	pintos/src/utils/squish-unix.c	/^sigchld_handler (int signo __attribute__ ((unused))) $/;"	f	typeref:typename:void	file:
signal	pintos/src/devices/intq.c	/^signal (struct intq *q UNUSED, struct thread **waiter) $/;"	f	typeref:typename:void	file:
signature	pintos/src/devices/partition.c	/^      uint16_t signature;       \/* Should be 0xaa55. *\/$/;"	m	struct:read_partition_table::partition_table	typeref:typename:uint16_t	file:
simple_thread_data	pintos/src/tests/threads/priority-fifo.c	/^struct simple_thread_data $/;"	s	file:
simple_thread_func	pintos/src/tests/threads/priority-fifo.c	/^simple_thread_func (void *data_) $/;"	f	typeref:typename:void	file:
simple_thread_func	pintos/src/tests/threads/priority-fifo.c	/^static thread_func simple_thread_func;$/;"	v	typeref:typename:thread_func	file:
simple_thread_func	pintos/src/tests/threads/priority-preempt.c	/^simple_thread_func (void *aux UNUSED) $/;"	f	typeref:typename:void	file:
simple_thread_func	pintos/src/tests/threads/priority-preempt.c	/^static thread_func simple_thread_func;$/;"	v	typeref:typename:thread_func	file:
size	pintos/src/devices/block.c	/^    block_sector_t size;                 \/* Size in sectors. *\/$/;"	m	struct:block	typeref:typename:block_sector_t	file:
size	pintos/src/devices/partition.c	/^      uint32_t size;            \/* Number of sectors. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint32_t	file:
size	pintos/src/lib/ustar.c	/^    char size[12];              \/* File size in bytes as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[12]	file:
size	pintos/src/utils/squish-pty.c	/^      size_t size, ofs;$/;"	m	struct:relay::pipe	typeref:typename:size_t	file:
size	pintos/src/utils/squish-unix.c	/^      size_t size, ofs;$/;"	m	struct:relay::pipe	typeref:typename:size_t	file:
size_t	pintos/src/lib/stddef.h	/^typedef __SIZE_TYPE__ size_t;$/;"	t	typeref:typename:__SIZE_TYPE__
sleep_test	pintos/src/tests/threads/alarm-simultaneous.c	/^struct sleep_test $/;"	s	file:
sleep_test	pintos/src/tests/threads/alarm-wait.c	/^struct sleep_test $/;"	s	file:
sleep_thread	pintos/src/tests/threads/alarm-wait.c	/^struct sleep_thread $/;"	s	file:
sleeper	pintos/src/tests/threads/alarm-simultaneous.c	/^sleeper (void *test_) $/;"	f	typeref:typename:void	file:
sleeper	pintos/src/tests/threads/alarm-wait.c	/^sleeper (void *t_) $/;"	f	typeref:typename:void	file:
smod64	pintos/src/lib/arithmetic.c	/^smod64 (int64_t n, int64_t d)$/;"	f	typeref:typename:int32_t	file:
smoker	pintos/src/tests/threads/smokers.c	/^static void smoker(enum component what_have)$/;"	f	typeref:typename:void	file:
smokerw	pintos/src/tests/threads/smokers.c	/^static void smokerw(void* arg)$/;"	f	typeref:typename:void	file:
snconv_SRC	pintos/src/examples/Makefile	/^snconv_SRC = snconv.c$/;"	m
snprintf	pintos/src/lib/stdio.c	/^snprintf (char *buffer, size_t buf_size, const char *format, ...) $/;"	f	typeref:typename:int
sort	pintos/src/lib/stdlib.c	/^sort (void *array, size_t cnt, size_t size,$/;"	f	typeref:typename:void
sort_chunks	pintos/src/tests/vm/page-merge-seq.c	/^sort_chunks (void)$/;"	f	typeref:typename:void	file:
sort_chunks	pintos/src/tests/vm/parallel-merge.c	/^sort_chunks (const char *subprocess, int exit_status)$/;"	f	typeref:typename:void	file:
sortdig_SRC	pintos/src/examples/Makefile	/^sortdig_SRC = sortdig.c$/;"	m
spawn_child	pintos/src/tests/userprog/no-vm/multi-oom.c	/^spawn_child (int c, enum child_termination_mode mode)$/;"	f	typeref:typename:pid_t	file:
speaker_beep	pintos/src/devices/speaker.c	/^speaker_beep (void)$/;"	f	typeref:typename:void
speaker_off	pintos/src/devices/speaker.c	/^speaker_off (void)$/;"	f	typeref:typename:void
speaker_on	pintos/src/devices/speaker.c	/^speaker_on (int frequency)$/;"	f	typeref:typename:void
sprintf	pintos/src/lib/stdio.h	/^#define sprintf dont_use_sprintf_/;"	d
squish-pty	pintos/src/utils/Makefile	/^squish-pty: squish-pty.o$/;"	t
squish-unix	pintos/src/utils/Makefile	/^squish-unix: squish-unix.o$/;"	t
ss	pintos/src/threads/interrupt.h	/^    uint16_t ss, :16;           \/* Data segment for esp. *\/$/;"	m	struct:intr_frame	typeref:typename:uint16_t
ss	pintos/src/userprog/tss.c	/^    uint16_t ss, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
ss0	pintos/src/userprog/tss.c	/^    uint16_t ss0, :16;                  \/* Ring 0 stack segment selector. *\/$/;"	m	struct:tss	typeref:typename:uint16_t	file:
ss1	pintos/src/userprog/tss.c	/^    uint16_t ss1, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
ss2	pintos/src/userprog/tss.c	/^    uint16_t ss2, :16;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
stack	pintos/src/threads/thread.h	/^    uint8_t *stack;                     \/* Saved stack pointer. *\/$/;"	m	struct:thread	typeref:typename:uint8_t *
start	pintos/src/devices/partition.c	/^    block_sector_t start;               \/* First sector within device. *\/$/;"	m	struct:partition	typeref:typename:block_sector_t	file:
start	pintos/src/examples/insult.c	/^char *start[] =$/;"	v	typeref:typename:char * []
start	pintos/src/filesys/inode.c	/^    block_sector_t start;               \/* First data sector. *\/$/;"	m	struct:inode_disk	typeref:typename:block_sector_t	file:
start	pintos/src/tests/threads/alarm-simultaneous.c	/^    int64_t start;              \/* Current time at start of test. *\/$/;"	m	struct:sleep_test	typeref:typename:int64_t	file:
start	pintos/src/tests/threads/alarm-wait.c	/^    int64_t start;              \/* Current time at start of test. *\/$/;"	m	struct:sleep_test	typeref:typename:int64_t	file:
startLoc	pintos/src/examples/insult.c	/^char startLoc[] = { 3, 0, 4, 7, 16 };$/;"	v	typeref:typename:char[]
start_chs	pintos/src/devices/partition.c	/^      uint8_t start_chs[3];     \/* Encoded starting cylinder, head, sector. *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint8_t[3]	file:
start_process	pintos/src/userprog/process.c	/^start_process (void *file_name_)$/;"	f	typeref:typename:void	file:
start_time	pintos/src/tests/threads/mlfqs-fair.c	/^    int64_t start_time;$/;"	m	struct:thread_info	typeref:typename:int64_t	file:
start_time	pintos/src/tests/threads/mlfqs-load-60.c	/^static int64_t start_time;$/;"	v	typeref:typename:int64_t	file:
start_time	pintos/src/tests/threads/mlfqs-load-avg.c	/^static int64_t start_time;$/;"	v	typeref:typename:int64_t	file:
state_var	pintos/src/devices/kbd.c	/^          bool *state_var;$/;"	m	struct:keyboard_interrupt::shift_key	typeref:typename:bool *	file:
status	pintos/src/threads/thread.h	/^    enum thread_status status;          \/* Thread state. *\/$/;"	m	struct:thread	typeref:enum:thread_status
strcat	pintos/src/lib/string.h	/^#define strcat dont_use_strcat_/;"	d
strchr	pintos/src/lib/string.c	/^strchr (const char *string, int c_) $/;"	f	typeref:typename:char *
strcmp	pintos/src/lib/string.c	/^strcmp (const char *a_, const char *b_) $/;"	f	typeref:typename:int
strcpy	pintos/src/lib/string.h	/^#define strcpy dont_use_strcpy_/;"	d
strcspn	pintos/src/lib/string.c	/^strcspn (const char *string, const char *stop) $/;"	f	typeref:typename:size_t
strip_antisocial_prefixes	pintos/src/lib/ustar.c	/^strip_antisocial_prefixes (const char *file_name)$/;"	f	typeref:typename:const char *	file:
strlcat	pintos/src/lib/string.c	/^strlcat (char *dst, const char *src, size_t size) $/;"	f	typeref:typename:size_t
strlcpy	pintos/src/lib/string.c	/^strlcpy (char *dst, const char *src, size_t size) $/;"	f	typeref:typename:size_t
strlen	pintos/src/lib/string.c	/^strlen (const char *string) $/;"	f	typeref:typename:size_t
strncat	pintos/src/lib/string.h	/^#define strncat dont_use_strncat_/;"	d
strncmp	pintos/src/lib/string.c	/^strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
strncpy	pintos/src/lib/string.h	/^#define strncpy dont_use_strncpy_/;"	d
strnlen	pintos/src/lib/string.c	/^strnlen (const char *string, size_t maxlen) $/;"	f	typeref:typename:size_t
strpbrk	pintos/src/lib/string.c	/^strpbrk (const char *string, const char *stop) $/;"	f	typeref:typename:char *
strrchr	pintos/src/lib/string.c	/^strrchr (const char *string, int c_) $/;"	f	typeref:typename:char *
strspn	pintos/src/lib/string.c	/^strspn (const char *string, const char *skip) $/;"	f	typeref:typename:size_t
strstr	pintos/src/lib/string.c	/^strstr (const char *haystack, const char *needle) $/;"	f	typeref:typename:char *
strtok	pintos/src/lib/string.h	/^#define strtok dont_use_strtok_use_strtok_/;"	d
strtok_r	pintos/src/lib/string.c	/^strtok_r (char *s, const char *delimiters, char **save_ptr) $/;"	f	typeref:typename:char *
stuff	pintos/src/examples/insult.c	/^char *stuff[] =$/;"	v	typeref:typename:char * []
stuffLoc	pintos/src/examples/insult.c	/^char stuffLoc[] = { 14, 0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 17, 18 };$/;"	v	typeref:typename:char[]
subsets_SRC	pintos/src/examples/Makefile	/^subsets_SRC = subsets.c$/;"	m
swap	pintos/src/lib/kernel/list.c	/^swap (struct list_elem **a, struct list_elem **b) $/;"	f	typeref:typename:void	file:
swap	pintos/src/tests/lib.c	/^swap (void *a_, void *b_, size_t size) $/;"	f	typeref:typename:void	file:
swap	pintos/src/tests/vm/qsort.c	/^swap (unsigned char *a, unsigned char *b) $/;"	f	typeref:typename:void	file:
swap_bdev_name	pintos/src/threads/init.c	/^static const char *swap_bdev_name;$/;"	v	typeref:typename:const char *	file:
swap_byte	pintos/src/lib/random.c	/^swap_byte (uint8_t *a, uint8_t *b) $/;"	f	typeref:typename:void	file:
swap_byte	pintos/src/tests/arc4.c	/^swap_byte (uint8_t *a, uint8_t *b)$/;"	f	typeref:typename:void	file:
switch_entry_frame	pintos/src/threads/switch.h	/^struct switch_entry_frame$/;"	s
switch_threads_frame	pintos/src/threads/switch.h	/^struct switch_threads_frame $/;"	s
syscall0	pintos/src/lib/user/syscall.c	/^#define syscall0(/;"	d	file:
syscall1	pintos/src/lib/user/syscall.c	/^#define syscall1(/;"	d	file:
syscall2	pintos/src/lib/user/syscall.c	/^#define syscall2(/;"	d	file:
syscall3	pintos/src/lib/user/syscall.c	/^#define syscall3(/;"	d	file:
syscall_handler	pintos/src/userprog/syscall.c	/^syscall_handler (struct intr_frame *f UNUSED) $/;"	f	typeref:typename:void	file:
syscall_init	pintos/src/userprog/syscall.c	/^syscall_init (void) $/;"	f	typeref:typename:void
tags	pintos/src/Makefile	/^tags::$/;"	t
tail	pintos/src/devices/intq.h	/^    int tail;                   \/* Old data is read here. *\/$/;"	m	struct:intq	typeref:typename:int
tail	pintos/src/lib/kernel/list.h	/^    struct list_elem tail;      \/* List tail. *\/$/;"	m	struct:list	typeref:struct:list_elem
tell	pintos/src/lib/user/syscall.c	/^tell (int fd) $/;"	f	typeref:typename:unsigned
test	pintos/src/tests/internal/list.c	/^test (void) $/;"	f	typeref:typename:void
test	pintos/src/tests/internal/stdio.c	/^test (void) $/;"	f	typeref:typename:void
test	pintos/src/tests/internal/stdlib.c	/^test (void) $/;"	f	typeref:typename:void
test	pintos/src/tests/threads/alarm-wait.c	/^    struct sleep_test *test;     \/* Info shared between all threads. *\/$/;"	m	struct:sleep_thread	typeref:struct:sleep_test *	file:
test	pintos/src/tests/threads/tests.c	/^struct test $/;"	s	file:
test_alarm_multiple	pintos/src/tests/threads/alarm-wait.c	/^test_alarm_multiple (void) $/;"	f	typeref:typename:void
test_alarm_negative	pintos/src/tests/threads/alarm-negative.c	/^test_alarm_negative (void) $/;"	f	typeref:typename:void
test_alarm_priority	pintos/src/tests/threads/alarm-priority.c	/^test_alarm_priority (void) $/;"	f	typeref:typename:void
test_alarm_simultaneous	pintos/src/tests/threads/alarm-simultaneous.c	/^test_alarm_simultaneous (void) $/;"	f	typeref:typename:void
test_alarm_single	pintos/src/tests/threads/alarm-wait.c	/^test_alarm_single (void) $/;"	f	typeref:typename:void
test_alarm_zero	pintos/src/tests/threads/alarm-zero.c	/^test_alarm_zero (void) $/;"	f	typeref:typename:void
test_args_1uint	pintos/src/tests/threads/tests.c	/^    test_args_1uint,$/;"	e	enum:test_args_type	file:
test_args_2uint	pintos/src/tests/threads/tests.c	/^    test_args_2uint,$/;"	e	enum:test_args_type	file:
test_args_3uint	pintos/src/tests/threads/tests.c	/^    test_args_3uint,$/;"	e	enum:test_args_type	file:
test_args_4uint	pintos/src/tests/threads/tests.c	/^    test_args_4uint$/;"	e	enum:test_args_type	file:
test_args_type	pintos/src/tests/threads/tests.c	/^enum test_args_type$/;"	g	file:
test_bear	pintos/src/tests/threads/bear.c	/^void test_bear(unsigned int num_bees, unsigned int pot_size)$/;"	f	typeref:typename:void
test_birds	pintos/src/tests/threads/birds.c	/^void test_birds(unsigned int num_chicks, unsigned int dish_size)$/;"	f	typeref:typename:void
test_func	pintos/src/tests/threads/tests.h	/^typedef void test_func (void);$/;"	t	typeref:typename:void ()(void)
test_func_args_1uint	pintos/src/tests/threads/tests.h	/^typedef void test_func_args_1uint (unsigned int);$/;"	t	typeref:typename:void ()(unsigned int)
test_func_args_2uint	pintos/src/tests/threads/tests.h	/^typedef void test_func_args_2uint (unsigned int, unsigned int);$/;"	t	typeref:typename:void ()(unsigned int,unsigned int)
test_func_args_3uint	pintos/src/tests/threads/tests.h	/^typedef void test_func_args_3uint (unsigned int, unsigned int, unsigned int);$/;"	t	typeref:typename:void ()(unsigned int,unsigned int,unsigned int)
test_func_args_4uint	pintos/src/tests/threads/tests.h	/^typedef void test_func_args_4uint (unsigned int, unsigned int, unsigned int, unsigned int);$/;"	t	typeref:typename:void ()(unsigned int,unsigned int,unsigned int,unsigned int)
test_hair	pintos/src/tests/threads/hair.c	/^void test_hair(unsigned int num_clients, unsigned int interval)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/base/syn-read.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/base/syn-remove.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/base/syn-write.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-empty-name.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-mk-tree.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-mkdir.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-open.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-over-file.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-rm-cwd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-rm-parent.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-rm-root.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-rm-tree.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-rmdir.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-under-file.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/dir-vine.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/grow-file-size.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/grow-sparse.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/grow-tell.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/grow-two-files.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/filesys/extended/syn-rw.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/bad-jump.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/bad-jump2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/bad-read.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/bad-read2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/bad-write.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/bad-write2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/child-bad.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/close-bad-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/close-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/close-stdin.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/close-stdout.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/close-twice.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/create-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/create-bound.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/create-empty.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/create-exists.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/create-long.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/create-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/create-null.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/exec-arg.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/exec-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/exec-missing.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/exec-multiple.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/exec-once.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/exit.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/halt.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/multi-child-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/open-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/open-boundary.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/open-empty.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/open-missing.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/open-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/open-null.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/open-twice.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/read-bad-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/read-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/read-boundary.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/read-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/read-stdout.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/read-zero.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/rox-simple.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/sc-bad-arg.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/sc-bad-sp.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/sc-boundary-2.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/sc-boundary.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/wait-bad-pid.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/wait-killed.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/wait-simple.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/wait-twice.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/write-bad-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/write-bad-ptr.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/write-boundary.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/write-normal.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/write-stdin.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/userprog/write-zero.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/child-inherit.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/child-mm-wrt.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-bad-fd.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-clean.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-close.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-exit.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-inherit.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-misalign.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-null.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-over-code.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-over-data.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-over-stk.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-overlap.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-read.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-remove.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-shuffle.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-twice.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-unmap.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-write.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/mmap-zero.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/page-linear.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/page-merge-mm.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/page-merge-par.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/page-merge-seq.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/page-merge-stk.c	/^test_main (void) $/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/page-parallel.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/page-shuffle.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-bad-addr.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-bad-read.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-big-stk-obj.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-grow-bad.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-grow-pusha.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-grow-stack.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-grow-stk-sc.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-write-code-2.c	/^test_main (void)$/;"	f	typeref:typename:void
test_main	pintos/src/tests/vm/pt-write-code.c	/^test_main (void)$/;"	f	typeref:typename:void
test_max_mem_calloc	pintos/src/tests/threads/max-mem.c	/^void test_max_mem_calloc(void) $/;"	f	typeref:typename:void
test_max_mem_malloc	pintos/src/tests/threads/max-mem.c	/^void test_max_mem_malloc(void) $/;"	f	typeref:typename:void
test_max_mem_palloc	pintos/src/tests/threads/max-mem.c	/^void test_max_mem_palloc(void) $/;"	f	typeref:typename:void
test_max_rec_calls	pintos/src/tests/threads/max-rec-calls.c	/^void test_max_rec_calls(void) $/;"	f	typeref:typename:void
test_max_threads	pintos/src/tests/threads/max-threads.c	/^void test_max_threads(void) $/;"	f	typeref:typename:void
test_mlfqs_block	pintos/src/tests/threads/mlfqs-block.c	/^test_mlfqs_block (void) $/;"	f	typeref:typename:void
test_mlfqs_fair	pintos/src/tests/threads/mlfqs-fair.c	/^test_mlfqs_fair (int thread_cnt, int nice_min, int nice_step)$/;"	f	typeref:typename:void	file:
test_mlfqs_fair_2	pintos/src/tests/threads/mlfqs-fair.c	/^test_mlfqs_fair_2 (void) $/;"	f	typeref:typename:void
test_mlfqs_fair_20	pintos/src/tests/threads/mlfqs-fair.c	/^test_mlfqs_fair_20 (void) $/;"	f	typeref:typename:void
test_mlfqs_load_1	pintos/src/tests/threads/mlfqs-load-1.c	/^test_mlfqs_load_1 (void) $/;"	f	typeref:typename:void
test_mlfqs_load_60	pintos/src/tests/threads/mlfqs-load-60.c	/^test_mlfqs_load_60 (void) $/;"	f	typeref:typename:void
test_mlfqs_load_avg	pintos/src/tests/threads/mlfqs-load-avg.c	/^test_mlfqs_load_avg (void) $/;"	f	typeref:typename:void
test_mlfqs_nice_10	pintos/src/tests/threads/mlfqs-fair.c	/^test_mlfqs_nice_10 (void) $/;"	f	typeref:typename:void
test_mlfqs_nice_2	pintos/src/tests/threads/mlfqs-fair.c	/^test_mlfqs_nice_2 (void) $/;"	f	typeref:typename:void
test_mlfqs_recent_1	pintos/src/tests/threads/mlfqs-recent-1.c	/^test_mlfqs_recent_1 (void) $/;"	f	typeref:typename:void
test_molec	pintos/src/tests/threads/molec.c	/^void test_molec(unsigned int num_oxygen, unsigned int num_hydrogen, int interval)$/;"	f	typeref:typename:void
test_name	pintos/src/tests/filesys/base/child-syn-read.c	/^const char *test_name = "child-syn-read";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/filesys/extended/child-syn-rw.c	/^const char *test_name = "child-syn-rw";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/lib.c	/^const char *test_name;$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/threads/tests.c	/^static const char *test_name;$/;"	v	typeref:typename:const char *	file:
test_name	pintos/src/tests/userprog/child-close.c	/^const char *test_name = "child-close";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/userprog/child-rox.c	/^const char *test_name = "child-rox";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/userprog/child-simple.c	/^const char *test_name = "child-simple";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/userprog/multi-recurse.c	/^const char *test_name = "multi-recurse";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/userprog/no-vm/multi-oom.c	/^const char *test_name = "multi-oom";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/vm/child-linear.c	/^const char *test_name = "child-linear";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/vm/child-qsort-mm.c	/^const char *test_name = "child-qsort-mm";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/vm/child-qsort.c	/^const char *test_name = "child-qsort";$/;"	v	typeref:typename:const char *
test_name	pintos/src/tests/vm/child-sort.c	/^const char *test_name = "child-sort";$/;"	v	typeref:typename:const char *
test_narrow_bridge	pintos/src/tests/threads/narrow-bridge-test.c	/^void test_narrow_bridge(unsigned int num_vehicles_left, unsigned int num_vehicles_right,$/;"	f	typeref:typename:void
test_new_alg	pintos/src/tests/threads/test-new-alg.c	/^void test_new_alg(void) $/;"	f	typeref:typename:void
test_no_args	pintos/src/tests/threads/tests.c	/^    test_no_args,$/;"	e	enum:test_args_type	file:
test_priority_change	pintos/src/tests/threads/priority-change.c	/^test_priority_change (void) $/;"	f	typeref:typename:void
test_priority_condvar	pintos/src/tests/threads/priority-condvar.c	/^test_priority_condvar (void) $/;"	f	typeref:typename:void
test_priority_donate_chain	pintos/src/tests/threads/priority-donate-chain.c	/^test_priority_donate_chain (void) $/;"	f	typeref:typename:void
test_priority_donate_lower	pintos/src/tests/threads/priority-donate-lower.c	/^test_priority_donate_lower (void) $/;"	f	typeref:typename:void
test_priority_donate_multiple	pintos/src/tests/threads/priority-donate-multiple.c	/^test_priority_donate_multiple (void) $/;"	f	typeref:typename:void
test_priority_donate_multiple2	pintos/src/tests/threads/priority-donate-multiple2.c	/^test_priority_donate_multiple2 (void) $/;"	f	typeref:typename:void
test_priority_donate_nest	pintos/src/tests/threads/priority-donate-nest.c	/^test_priority_donate_nest (void) $/;"	f	typeref:typename:void
test_priority_donate_one	pintos/src/tests/threads/priority-donate-one.c	/^test_priority_donate_one (void) $/;"	f	typeref:typename:void
test_priority_donate_sema	pintos/src/tests/threads/priority-donate-sema.c	/^test_priority_donate_sema (void) $/;"	f	typeref:typename:void
test_priority_fifo	pintos/src/tests/threads/priority-fifo.c	/^test_priority_fifo (void) $/;"	f	typeref:typename:void
test_priority_preempt	pintos/src/tests/threads/priority-preempt.c	/^test_priority_preempt (void) $/;"	f	typeref:typename:void
test_priority_sema	pintos/src/tests/threads/priority-sema.c	/^test_priority_sema (void) $/;"	f	typeref:typename:void
test_rolcoast	pintos/src/tests/threads/rolcoast.c	/^void test_rolcoast(unsigned int num_clients, unsigned int carriage_size, unsigned int interval)$/;"	f	typeref:typename:void
test_shower	pintos/src/tests/threads/shower.c	/^void test_shower(unsigned int num_men, unsigned int num_women, unsigned int interval)$/;"	f	typeref:typename:void
test_sleep	pintos/src/tests/threads/alarm-simultaneous.c	/^test_sleep (int thread_cnt, int iterations) $/;"	f	typeref:typename:void	file:
test_sleep	pintos/src/tests/threads/alarm-wait.c	/^test_sleep (int thread_cnt, int iterations) $/;"	f	typeref:typename:void	file:
test_smokers	pintos/src/tests/threads/smokers.c	/^void test_smokers(void)$/;"	f	typeref:typename:void
test_threads_audit	pintos/src/tests/threads/threads-audit.c	/^void test_threads_audit(void) $/;"	f	typeref:typename:void
test_threads_pause_resume	pintos/src/tests/threads/threads-pause-resume.c	/^void test_threads_pause_resume(void) $/;"	f	typeref:typename:void
test_threads_term	pintos/src/tests/threads/threads-term.c	/^void test_threads_term(void) $/;"	f	typeref:typename:void
test_ticks_stats	pintos/src/tests/threads/ticks-stats.c	/^void test_ticks_stats(void) $/;"	f	typeref:typename:void
tests	pintos/src/tests/threads/tests.c	/^static const struct test tests[] = $/;"	v	typeref:typename:const struct test[]	file:
thread	pintos/src/threads/thread.h	/^struct thread$/;"	s
thread_action_func	pintos/src/threads/thread.h	/^typedef void thread_action_func (struct thread *t, void *aux);$/;"	t	typeref:typename:void ()(struct thread * t,void * aux)
thread_block	pintos/src/threads/thread.c	/^thread_block (void) $/;"	f	typeref:typename:void
thread_create	pintos/src/threads/thread.c	/^thread_create (const char *name, int priority,$/;"	f	typeref:typename:tid_t
thread_current	pintos/src/threads/thread.c	/^thread_current (void) $/;"	f	typeref:struct:thread *
thread_emergency_left	pintos/src/tests/threads/narrow-bridge-test.c	/^void thread_emergency_left(void* arg UNUSED)$/;"	f	typeref:typename:void
thread_emergency_right	pintos/src/tests/threads/narrow-bridge-test.c	/^void thread_emergency_right(void* arg UNUSED)$/;"	f	typeref:typename:void
thread_exit	pintos/src/threads/thread.c	/^thread_exit (void) $/;"	f	typeref:typename:void
thread_foreach	pintos/src/threads/thread.c	/^thread_foreach (thread_action_func *func, void *aux)$/;"	f	typeref:typename:void
thread_func	pintos/src/threads/thread.h	/^typedef void thread_func (void *aux);$/;"	t	typeref:typename:void ()(void * aux)
thread_get_load_avg	pintos/src/threads/thread.c	/^thread_get_load_avg (void) $/;"	f	typeref:typename:int
thread_get_nice	pintos/src/threads/thread.c	/^thread_get_nice (void) $/;"	f	typeref:typename:int
thread_get_priority	pintos/src/threads/thread.c	/^thread_get_priority (void) $/;"	f	typeref:typename:int
thread_get_recent_cpu	pintos/src/threads/thread.c	/^thread_get_recent_cpu (void) $/;"	f	typeref:typename:int
thread_info	pintos/src/tests/threads/mlfqs-fair.c	/^struct thread_info $/;"	s	file:
thread_init	pintos/src/threads/thread.c	/^thread_init (void) $/;"	f	typeref:typename:void
thread_mlfqs	pintos/src/threads/thread.c	/^bool thread_mlfqs;$/;"	v	typeref:typename:bool
thread_name	pintos/src/threads/thread.c	/^thread_name (void) $/;"	f	typeref:typename:const char *
thread_normal_left	pintos/src/tests/threads/narrow-bridge-test.c	/^void thread_normal_left(void* arg UNUSED)$/;"	f	typeref:typename:void
thread_normal_right	pintos/src/tests/threads/narrow-bridge-test.c	/^void thread_normal_right(void* arg UNUSED)$/;"	f	typeref:typename:void
thread_print_stats	pintos/src/threads/thread.c	/^thread_print_stats (void) $/;"	f	typeref:typename:void
thread_schedule_tail	pintos/src/threads/thread.c	/^thread_schedule_tail (struct thread *prev)$/;"	f	typeref:typename:void
thread_set_nice	pintos/src/threads/thread.c	/^thread_set_nice (int nice UNUSED) $/;"	f	typeref:typename:void
thread_set_priority	pintos/src/threads/thread.c	/^thread_set_priority (int new_priority) $/;"	f	typeref:typename:void
thread_stack_ofs	pintos/src/threads/thread.c	/^uint32_t thread_stack_ofs = offsetof (struct thread, stack);$/;"	v	typeref:typename:uint32_t
thread_start	pintos/src/threads/thread.c	/^thread_start (void) $/;"	f	typeref:typename:void
thread_status	pintos/src/threads/thread.h	/^enum thread_status$/;"	g
thread_tick	pintos/src/threads/thread.c	/^thread_tick (void) $/;"	f	typeref:typename:void
thread_ticks	pintos/src/threads/thread.c	/^static unsigned thread_ticks;   \/* # of timer ticks since last yield. *\/$/;"	v	typeref:typename:unsigned	file:
thread_tid	pintos/src/threads/thread.c	/^thread_tid (void) $/;"	f	typeref:typename:tid_t
thread_unblock	pintos/src/threads/thread.c	/^thread_unblock (struct thread *t) $/;"	f	typeref:typename:void
thread_yield	pintos/src/threads/thread.c	/^thread_yield (void) $/;"	f	typeref:typename:void
threads_count	pintos/src/tests/threads/narrow-bridge-test.c	/^unsigned int threads_count(void)$/;"	f	typeref:typename:unsigned int
threads_count_on_start	pintos/src/tests/threads/narrow-bridge-test.c	/^static unsigned int threads_count_on_start = 0;$/;"	v	typeref:typename:unsigned int	file:
threads_counter	pintos/src/tests/threads/narrow-bridge-test.c	/^void threads_counter(struct thread *t UNUSED, void *aux)$/;"	f	typeref:typename:void
tick_count	pintos/src/tests/threads/mlfqs-fair.c	/^    int tick_count;$/;"	m	struct:thread_info	typeref:typename:int	file:
ticks	pintos/src/devices/timer.c	/^static int64_t ticks;$/;"	v	typeref:typename:int64_t	file:
tid	pintos/src/threads/thread.h	/^    tid_t tid;                          \/* Thread identifier. *\/$/;"	m	struct:thread	typeref:typename:tid_t
tid_lock	pintos/src/threads/thread.c	/^static struct lock tid_lock;$/;"	v	typeref:struct:lock	file:
tid_t	pintos/src/threads/thread.h	/^typedef int tid_t;$/;"	t	typeref:typename:int
time_t	pintos/src/devices/rtc.h	/^typedef unsigned long time_t;$/;"	t	typeref:typename:unsigned long
timer_calibrate	pintos/src/devices/timer.c	/^timer_calibrate (void) $/;"	f	typeref:typename:void
timer_elapsed	pintos/src/devices/timer.c	/^timer_elapsed (int64_t then) $/;"	f	typeref:typename:int64_t
timer_init	pintos/src/devices/timer.c	/^timer_init (void) $/;"	f	typeref:typename:void
timer_interrupt	pintos/src/devices/timer.c	/^static intr_handler_func timer_interrupt;$/;"	v	typeref:typename:intr_handler_func	file:
timer_interrupt	pintos/src/devices/timer.c	/^timer_interrupt (struct intr_frame *args UNUSED)$/;"	f	typeref:typename:void	file:
timer_mdelay	pintos/src/devices/timer.c	/^timer_mdelay (int64_t ms) $/;"	f	typeref:typename:void
timer_msleep	pintos/src/devices/timer.c	/^timer_msleep (int64_t ms) $/;"	f	typeref:typename:void
timer_ndelay	pintos/src/devices/timer.c	/^timer_ndelay (int64_t ns) $/;"	f	typeref:typename:void
timer_nsleep	pintos/src/devices/timer.c	/^timer_nsleep (int64_t ns) $/;"	f	typeref:typename:void
timer_print_stats	pintos/src/devices/timer.c	/^timer_print_stats (void) $/;"	f	typeref:typename:void
timer_sleep	pintos/src/devices/timer.c	/^timer_sleep (int64_t ticks) $/;"	f	typeref:typename:void
timer_ticks	pintos/src/devices/timer.c	/^timer_ticks (void) $/;"	f	typeref:typename:int64_t
timer_udelay	pintos/src/devices/timer.c	/^timer_udelay (int64_t us) $/;"	f	typeref:typename:void
timer_usleep	pintos/src/devices/timer.c	/^timer_usleep (int64_t us) $/;"	f	typeref:typename:void
tobacco	pintos/src/tests/threads/smokers.c	/^   tobacco,$/;"	e	enum:component	file:
tolower	pintos/src/lib/ctype.h	/^static inline int tolower (int c) { return isupper (c) ? c - 'A' + 'a' : c; }$/;"	f	typeref:typename:int
too_many_loops	pintos/src/devices/timer.c	/^too_many_loops (unsigned loops) $/;"	f	typeref:typename:bool	file:
toupper	pintos/src/lib/ctype.h	/^static inline int toupper (int c) { return islower (c) ? c - 'a' + 'A' : c; }$/;"	f	typeref:typename:int
trace	pintos/src/userprog/tss.c	/^    uint16_t trace, bitmap;$/;"	m	struct:tss	typeref:typename:uint16_t	file:
translate_SRC	pintos/src/examples/Makefile	/^translate_SRC = translate.c$/;"	m
true	pintos/src/lib/stdbool.h	/^#define true	/;"	d
try_write	pintos/src/tests/userprog/child-rox.c	/^try_write (void) $/;"	f	typeref:typename:void	file:
tss	pintos/src/userprog/tss.c	/^static struct tss *tss;$/;"	v	typeref:struct:tss *	file:
tss	pintos/src/userprog/tss.c	/^struct tss$/;"	s	file:
tss_get	pintos/src/userprog/tss.c	/^tss_get (void) $/;"	f	typeref:struct:tss *
tss_init	pintos/src/userprog/tss.c	/^tss_init (void) $/;"	f	typeref:typename:void
tss_update	pintos/src/userprog/tss.c	/^tss_update (void) $/;"	f	typeref:typename:void
turn_off_least_1bit	pintos/src/lib/kernel/hash.c	/^turn_off_least_1bit (size_t x) $/;"	f	typeref:typename:size_t	file:
txq	pintos/src/devices/serial.c	/^static struct intq txq;$/;"	v	typeref:struct:intq	file:
type	pintos/src/devices/block.c	/^    enum block_type type;                \/* Type of block device. *\/$/;"	m	struct:block	typeref:enum:block_type	file:
type	pintos/src/devices/partition.c	/^      uint8_t type;             \/* Partition type (see partition_type_name). *\/$/;"	m	struct:read_partition_table::partition_table_entry	typeref:typename:uint8_t	file:
type	pintos/src/lib/stdio.c	/^    type;$/;"	m	struct:printf_conversion	typeref:enum:printf_conversion::__anonfd63b5620203	file:
typeflag	pintos/src/lib/ustar.c	/^    char typeflag;              \/* An enum ustar_type value. *\/$/;"	m	struct:ustar_header	typeref:typename:char	file:
udiv64	pintos/src/lib/arithmetic.c	/^udiv64 (uint64_t n, uint64_t d)$/;"	f	typeref:typename:uint64_t	file:
uid	pintos/src/lib/ustar.c	/^    char uid[8];                \/* User ID as octal string. *\/$/;"	m	struct:ustar_header	typeref:typename:char[8]	file:
uint16_t	pintos/src/lib/stdint.h	/^typedef unsigned short int uint16_t;$/;"	t	typeref:typename:unsigned short int
uint32_t	pintos/src/lib/stdint.h	/^typedef unsigned int uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	pintos/src/lib/stdint.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
uint8_t	pintos/src/lib/stdint.h	/^typedef unsigned char uint8_t;$/;"	t	typeref:typename:unsigned char
uintmax_t	pintos/src/lib/stdint.h	/^typedef uint64_t uintmax_t;$/;"	t	typeref:typename:uint64_t
uintptr_t	pintos/src/lib/stdint.h	/^typedef uint32_t uintptr_t;$/;"	t	typeref:typename:uint32_t
umod64	pintos/src/lib/arithmetic.c	/^umod64 (uint64_t n, uint64_t d)$/;"	f	typeref:typename:uint32_t	file:
uname	pintos/src/lib/ustar.c	/^    char uname[32];             \/* User name, always null-terminated. *\/$/;"	m	struct:ustar_header	typeref:typename:char[32]	file:
unexpected_cnt	pintos/src/threads/interrupt.c	/^static unsigned int unexpected_cnt[INTR_CNT];$/;"	v	typeref:typename:unsigned int[]	file:
unexpected_interrupt	pintos/src/threads/interrupt.c	/^unexpected_interrupt (const struct intr_frame *f)$/;"	f	typeref:typename:void	file:
unshifted_keymap	pintos/src/devices/kbd.c	/^static const struct keymap unshifted_keymap[] = $/;"	v	typeref:typename:const struct keymap[]	file:
unused	pintos/src/filesys/inode.c	/^    uint32_t unused[125];               \/* Not used. *\/$/;"	m	struct:inode_disk	typeref:typename:uint32_t[125]	file:
usage	pintos/src/examples/insult.c	/^usage (int ret_code, const char *message, ...)$/;"	f	typeref:typename:void	file:
usage	pintos/src/tests/filesys/extended/tar.c	/^usage (void) $/;"	f	typeref:typename:void	file:
usage	pintos/src/threads/init.c	/^usage (void)$/;"	f	typeref:typename:void	file:
use_console_lock	pintos/src/lib/kernel/console.c	/^static bool use_console_lock;$/;"	v	typeref:typename:bool	file:
used_map	pintos/src/threads/palloc.c	/^    struct bitmap *used_map;            \/* Bitmap of free pages. *\/$/;"	m	struct:pool	typeref:struct:bitmap *	file:
user_page_limit	pintos/src/threads/init.c	/^static size_t user_page_limit = SIZE_MAX;$/;"	v	typeref:typename:size_t	file:
user_pool	pintos/src/threads/palloc.c	/^static struct pool kernel_pool, user_pool;$/;"	v	typeref:struct:pool	file:
user_ticks	pintos/src/threads/thread.c	/^static long long user_ticks;    \/* # of timer ticks in user programs. *\/$/;"	v	typeref:typename:long long	file:
ustar_header	pintos/src/lib/ustar.c	/^struct ustar_header$/;"	s	file:
ustar_make_header	pintos/src/lib/ustar.c	/^ustar_make_header (const char *file_name, enum ustar_type type,$/;"	f	typeref:typename:bool
ustar_parse_header	pintos/src/lib/ustar.c	/^ustar_parse_header (const char header[USTAR_HEADER_SIZE],$/;"	f	typeref:typename:const char *
ustar_type	pintos/src/lib/ustar.h	/^enum ustar_type$/;"	g
va_arg	pintos/src/lib/stdarg.h	/^#define va_arg(LIST, TYPE)	__builtin_va_arg /;"	d
va_copy	pintos/src/lib/stdarg.h	/^#define va_copy(DST, SRC)	__builtin_va_copy /;"	d
va_end	pintos/src/lib/stdarg.h	/^#define va_end(LIST)            __builtin_va_end /;"	d
va_list	pintos/src/lib/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t	typeref:typename:__builtin_va_list
va_start	pintos/src/lib/stdarg.h	/^#define va_start(LIST, ARG)	__builtin_va_start /;"	d
validate_segment	pintos/src/userprog/process.c	/^validate_segment (const struct Elf32_Phdr *phdr, struct file *file) $/;"	f	typeref:typename:bool	file:
value	pintos/src/tests/internal/list.c	/^    int value;                  \/* Item value. *\/$/;"	m	struct:value	typeref:typename:int	file:
value	pintos/src/tests/internal/list.c	/^struct value $/;"	s	file:
value	pintos/src/threads/synch.h	/^    unsigned value;             \/* Current value. *\/$/;"	m	struct:semaphore	typeref:typename:unsigned
value_less	pintos/src/tests/internal/list.c	/^value_less (const struct list_elem *a_, const struct list_elem *b_,$/;"	f	typeref:typename:bool	file:
vec_no	pintos/src/threads/interrupt.h	/^    uint32_t vec_no;            \/* Interrupt vector number. *\/$/;"	m	struct:intr_frame	typeref:typename:uint32_t
verify	pintos/src/tests/vm/page-merge-seq.c	/^verify (void) $/;"	f	typeref:typename:void	file:
verify	pintos/src/tests/vm/parallel-merge.c	/^verify (void) $/;"	f	typeref:typename:void	file:
verify_bsearch	pintos/src/tests/internal/stdlib.c	/^verify_bsearch (const int *array, size_t cnt) $/;"	f	typeref:typename:void	file:
verify_list_bkwd	pintos/src/tests/internal/list.c	/^verify_list_bkwd (struct list *list, int size) $/;"	f	typeref:typename:void	file:
verify_list_fwd	pintos/src/tests/internal/list.c	/^verify_list_fwd (struct list *list, int size) $/;"	f	typeref:typename:void	file:
verify_order	pintos/src/tests/internal/stdlib.c	/^verify_order (const int *array, size_t cnt) $/;"	f	typeref:typename:void	file:
version	pintos/src/lib/ustar.c	/^    char version[2];            \/* "00" *\/$/;"	m	struct:ustar_header	typeref:typename:char[2]	file:
vga_putc	pintos/src/devices/vga.c	/^vga_putc (int c)$/;"	f	typeref:typename:void
vhprintf	pintos/src/lib/user/console.c	/^vhprintf (int handle, const char *format, va_list args) $/;"	f	typeref:typename:int
vhprintf_aux	pintos/src/lib/user/console.c	/^struct vhprintf_aux $/;"	s	file:
vmsg	pintos/src/tests/lib.c	/^vmsg (const char *format, va_list args, const char *suffix) $/;"	f	typeref:typename:void	file:
vprintf	pintos/src/lib/kernel/console.c	/^vprintf (const char *format, va_list args) $/;"	f	typeref:typename:int
vprintf	pintos/src/lib/user/console.c	/^vprintf (const char *format, va_list args) $/;"	f	typeref:typename:int
vprintf_helper	pintos/src/lib/kernel/console.c	/^vprintf_helper (char c, void *char_cnt_) $/;"	f	typeref:typename:void	file:
vsnprintf	pintos/src/lib/stdio.c	/^vsnprintf (char *buffer, size_t buf_size, const char *format, va_list args) $/;"	f	typeref:typename:int
vsnprintf_aux	pintos/src/lib/stdio.c	/^struct vsnprintf_aux $/;"	s	file:
vsnprintf_helper	pintos/src/lib/stdio.c	/^vsnprintf_helper (char ch, void *aux_)$/;"	f	typeref:typename:void	file:
vsprintf	pintos/src/lib/stdio.h	/^#define vsprintf dont_use_vsprintf_/;"	d
vtop	pintos/src/threads/vaddr.h	/^vtop (const void *vaddr)$/;"	f	typeref:typename:uintptr_t
wait	pintos/src/devices/intq.c	/^wait (struct intq *q UNUSED, struct thread **waiter) $/;"	f	typeref:typename:void	file:
wait	pintos/src/lib/user/syscall.c	/^wait (pid_t pid)$/;"	f	typeref:typename:int
wait_children	pintos/src/tests/lib.c	/^wait_children (pid_t pids[], size_t child_cnt) $/;"	f	typeref:typename:void
wait_sema	pintos/src/tests/threads/alarm-priority.c	/^static struct semaphore wait_sema;$/;"	v	typeref:struct:semaphore	file:
wait_threads	pintos/src/tests/threads/narrow-bridge-test.c	/^void wait_threads()$/;"	f	typeref:typename:void
wait_until_idle	pintos/src/devices/ide.c	/^wait_until_idle (const struct ata_disk *d) $/;"	f	typeref:typename:void	file:
wait_while_busy	pintos/src/devices/ide.c	/^wait_while_busy (const struct ata_disk *d) $/;"	f	typeref:typename:bool	file:
waiters	pintos/src/threads/synch.h	/^    struct list waiters;        \/* List of waiting threads. *\/$/;"	m	struct:condition	typeref:struct:list
waiters	pintos/src/threads/synch.h	/^    struct list waiters;        \/* List of waiting threads. *\/$/;"	m	struct:semaphore	typeref:struct:list
wake_time	pintos/src/tests/threads/alarm-priority.c	/^static int64_t wake_time;$/;"	v	typeref:typename:int64_t	file:
width	pintos/src/lib/stdio.c	/^    int width;$/;"	m	struct:printf_conversion	typeref:typename:int	file:
woman	pintos/src/tests/threads/shower.c	/^static void woman(void* arg UNUSED)$/;"	f	typeref:typename:void	file:
wrap_open	pintos/src/tests/filesys/extended/dir-rm-cwd.c	/^wrap_open (const char *name) $/;"	f	typeref:typename:int	file:
write	pintos/src/devices/block.h	/^    void (*write) (void *aux, block_sector_t, const void *buffer);$/;"	m	struct:block_operations	typeref:typename:void (*)(void * aux,block_sector_t,const void * buffer)
write	pintos/src/lib/user/syscall.c	/^write (int fd, const void *buffer, unsigned size)$/;"	f	typeref:typename:int
write_cnt	pintos/src/devices/block.c	/^    unsigned long long write_cnt;       \/* Number of sectors written. *\/$/;"	m	struct:block	typeref:typename:unsigned long long	file:
write_cnt	pintos/src/lib/kernel/console.c	/^static int64_t write_cnt;$/;"	v	typeref:typename:int64_t	file:
write_header	pintos/src/tests/filesys/extended/tar.c	/^write_header (const char *file_name, enum ustar_type type, int size,$/;"	f	typeref:typename:bool	file:
write_ier	pintos/src/devices/serial.c	/^write_ier (void) $/;"	f	typeref:typename:void	file:
write_some_bytes	pintos/src/tests/filesys/extended/grow-two-files.c	/^write_some_bytes (const char *file_name, int fd, const char *buf, size_t *ofs) $/;"	f	typeref:typename:void	file:
x	pintos/src/lib/stdio.c	/^    int x;                      \/* `x' character to use, for base 16 only. *\/$/;"	m	struct:integer_base	typeref:typename:int	file:
x	pintos/src/tests/vm/mmap-over-data.c	/^static char x;$/;"	v	typeref:typename:char	file:
yield_on_return	pintos/src/threads/interrupt.c	/^static bool yield_on_return;    \/* Should we yield on interrupt return? *\/$/;"	v	typeref:typename:bool	file:
